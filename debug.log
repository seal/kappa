[2m2024-05-18T17:35:29.091769Z[0m [32m INFO[0m [2mkappa[0m[2m:[0m Starting listener on port 3000
[2m2024-05-18T17:35:39.453613Z[0m [32m INFO[0m [2mkappa::routes::middleware[0m[2m:[0m api key e1f11936-2004-46ee-b310-84ddb8fb8d14
[2m2024-05-18T17:35:39.455656Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT * FROM \"user\" â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  *\nFROM\n  \"user\"\nWHERE\n  api_key = $1\n" [3mrows_affected[0m[2m=[0m0 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m1.227424ms [3melapsed_secs[0m[2m=[0m0.001227424
[2m2024-05-18T17:35:39.455926Z[0m [32m INFO[0m [2mkappa::routes::containers[0m[2m:[0m Received file with bytes length of 910

[2m2024-05-18T17:35:39.456171Z[0m [32m INFO[0m [2mkappa::routes::containers[0m[2m:[0m File extracted to "zip/adfd56ab-22f4-4d91-a761-1c91a4012080/main.go" (499 bytes)
[2m2024-05-18T17:35:39.456384Z[0m [32m INFO[0m [2mkappa::routes::containers[0m[2m:[0m File extracted to "zip/adfd56ab-22f4-4d91-a761-1c91a4012080/main.go" (607 bytes)
[2m2024-05-18T17:35:39.456612Z[0m [32m INFO[0m [2mkappa::docker::docker[0m[2m:[0m Created docker file with UUID:adfd56ab-22f4-4d91-a761-1c91a4012080
[2m2024-05-18T17:35:39.456957Z[0m [35mTRACE[0m [2mhyper_util::client::legacy::client[0m[2m:[0m http1 handshake complete, spawning background dispatcher task
[2m2024-05-18T17:35:39.457281Z[0m [35mTRACE[0m [2mhyper_util::client::legacy::pool[0m[2m:[0m pool dropped, dropping pooled (("unix", 2f7661722f72756e2f646f636b65722e736f636b))
[2m2024-05-18T17:35:39.457591Z[0m [35mTRACE[0m [2mhyper_util::client::legacy::client[0m[2m:[0m http1 handshake complete, spawning background dispatcher task
[2m2024-05-18T17:35:58.395554Z[0m [32m INFO[0m [2mkappa::docker::docker[0m[2m:[0m Building container adfd56ab-22f4-4d91-a761-1c91a4012080 progress : No progress
[2m2024-05-18T17:35:58.395947Z[0m [35mTRACE[0m [2mhyper_util::client::legacy::client[0m[2m:[0m http1 handshake complete, spawning background dispatcher task
[2m2024-05-18T17:35:58.404773Z[0m [35mTRACE[0m [2mhyper_util::client::legacy::pool[0m[2m:[0m pool dropped, dropping pooled (("unix", 2f7661722f72756e2f646f636b65722e736f636b))
[2m2024-05-18T17:35:58.405038Z[0m [35mTRACE[0m [2mhyper_util::client::legacy::client[0m[2m:[0m http1 handshake complete, spawning background dispatcher task
[2m2024-05-18T17:35:58.549475Z[0m [35mTRACE[0m [2mhyper_util::client::legacy::pool[0m[2m:[0m pool dropped, dropping pooled (("unix", 2f7661722f72756e2f646f636b65722e736f636b))
[2m2024-05-18T17:35:58.549576Z[0m [32m INFO[0m [2mkappa::docker::docker[0m[2m:[0m Successfully built and started docker container
[2m2024-05-18T17:35:58.553313Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"insert into \"container\"(container_id, language, â€¦" [3mdb.statement[0m[2m=[0m"\n\ninsert into\n  \"container\"(container_id, language, user_id, port, name)\nvalues\n  (\n    $1 :: UUID,\n    $2 :: TEXT,\n    $3 :: UUID,\n    $4 :: INTEGER,\n    $5 :: TEXT\n  )\n" [3mrows_affected[0m[2m=[0m1 [3mrows_returned[0m[2m=[0m0 [3melapsed[0m[2m=[0m1.388295ms [3melapsed_secs[0m[2m=[0m0.001388295
[2m2024-05-18T17:35:58.553718Z[0m [32m INFO[0m [2mkappa::routes::middleware[0m[2m:[0m api key e1f11936-2004-46ee-b310-84ddb8fb8d14
[2m2024-05-18T17:35:58.554353Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT * FROM \"user\" â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  *\nFROM\n  \"user\"\nWHERE\n  api_key = $1\n" [3mrows_affected[0m[2m=[0m0 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m130.331Âµs [3melapsed_secs[0m[2m=[0m0.000130331
[2m2024-05-18T17:35:58.592515Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT * FROM container â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  *\nFROM\n  container\nWHERE\n  container_id = $1\n  AND user_id = $2\n" [3mrows_affected[0m[2m=[0m0 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m561.582Âµs [3melapsed_secs[0m[2m=[0m0.000561582
[2m2024-05-18T17:35:58.626691Z[0m [35mTRACE[0m [1mtrigger_container[0m[1m{[0m[3mpool[0m[2m=[0mPool { size: 2, num_idle: 1, is_closed: false, options: PoolOptions { max_connections: 5, min_connections: 0, connect_timeout: 3s, max_lifetime: Some(1800s), idle_timeout: Some(600s), test_before_acquire: true } } [3mcontainer[0m[2m=[0mContainer { container_id: adfd56ab-22f4-4d91-a761-1c91a4012080, language: "go", user_id: Some(1990720b-0ba6-4c3f-9a3c-8be8ef391fe3), port: Some(5000), name: "json" } [3mmethod[0m[2m=[0mPOST [3mquery[0m[2m=[0mRawQuery(Some("container_id=adfd56ab-22f4-4d91-a761-1c91a4012080")) [3mheader_map[0m[2m=[0m{"host": "localhost:3000", "user-agent": "Go-http-client/1.1", "content-length": "65", "api-key": "e1f11936-2004-46ee-b310-84ddb8fb8d14", "container": "adfd56ab-22f4-4d91-a761-1c91a4012080", "content-type": "application/json", "accept-encoding": "gzip"} [3mbody[0m[2m=[0mb"{\n    \"message\": \"message one\",\n    \"messageTwo\": \"message two\"\n}"[1m}[0m[2m:[0m [2mhyper_util::client::legacy::pool[0m[2m:[0m checkout waiting for idle connection: ("http", 127.0.0.1:5000)
[2m2024-05-18T17:35:58.626746Z[0m [35mTRACE[0m [1mtrigger_container[0m[1m{[0m[3mpool[0m[2m=[0mPool { size: 2, num_idle: 1, is_closed: false, options: PoolOptions { max_connections: 5, min_connections: 0, connect_timeout: 3s, max_lifetime: Some(1800s), idle_timeout: Some(600s), test_before_acquire: true } } [3mcontainer[0m[2m=[0mContainer { container_id: adfd56ab-22f4-4d91-a761-1c91a4012080, language: "go", user_id: Some(1990720b-0ba6-4c3f-9a3c-8be8ef391fe3), port: Some(5000), name: "json" } [3mmethod[0m[2m=[0mPOST [3mquery[0m[2m=[0mRawQuery(Some("container_id=adfd56ab-22f4-4d91-a761-1c91a4012080")) [3mheader_map[0m[2m=[0m{"host": "localhost:3000", "user-agent": "Go-http-client/1.1", "content-length": "65", "api-key": "e1f11936-2004-46ee-b310-84ddb8fb8d14", "container": "adfd56ab-22f4-4d91-a761-1c91a4012080", "content-type": "application/json", "accept-encoding": "gzip"} [3mbody[0m[2m=[0mb"{\n    \"message\": \"message one\",\n    \"messageTwo\": \"message two\"\n}"[1m}[0m[2m:[0m [2mhyper_util::client::legacy::connect::http[0m[2m:[0m Http::connect; scheme=Some("http"), host=Some("127.0.0.1"), port=Some(Port(5000))
[2m2024-05-18T17:35:58.626796Z[0m [34mDEBUG[0m [1mtrigger_container[0m[1m{[0m[3mpool[0m[2m=[0mPool { size: 2, num_idle: 1, is_closed: false, options: PoolOptions { max_connections: 5, min_connections: 0, connect_timeout: 3s, max_lifetime: Some(1800s), idle_timeout: Some(600s), test_before_acquire: true } } [3mcontainer[0m[2m=[0mContainer { container_id: adfd56ab-22f4-4d91-a761-1c91a4012080, language: "go", user_id: Some(1990720b-0ba6-4c3f-9a3c-8be8ef391fe3), port: Some(5000), name: "json" } [3mmethod[0m[2m=[0mPOST [3mquery[0m[2m=[0mRawQuery(Some("container_id=adfd56ab-22f4-4d91-a761-1c91a4012080")) [3mheader_map[0m[2m=[0m{"host": "localhost:3000", "user-agent": "Go-http-client/1.1", "content-length": "65", "api-key": "e1f11936-2004-46ee-b310-84ddb8fb8d14", "container": "adfd56ab-22f4-4d91-a761-1c91a4012080", "content-type": "application/json", "accept-encoding": "gzip"} [3mbody[0m[2m=[0mb"{\n    \"message\": \"message one\",\n    \"messageTwo\": \"message two\"\n}"[1m}[0m[2m:[0m [2mhyper_util::client::legacy::connect::http[0m[2m:[0m connecting to 127.0.0.1:5000
[2m2024-05-18T17:35:58.626972Z[0m [34mDEBUG[0m [1mtrigger_container[0m[1m{[0m[3mpool[0m[2m=[0mPool { size: 2, num_idle: 1, is_closed: false, options: PoolOptions { max_connections: 5, min_connections: 0, connect_timeout: 3s, max_lifetime: Some(1800s), idle_timeout: Some(600s), test_before_acquire: true } } [3mcontainer[0m[2m=[0mContainer { container_id: adfd56ab-22f4-4d91-a761-1c91a4012080, language: "go", user_id: Some(1990720b-0ba6-4c3f-9a3c-8be8ef391fe3), port: Some(5000), name: "json" } [3mmethod[0m[2m=[0mPOST [3mquery[0m[2m=[0mRawQuery(Some("container_id=adfd56ab-22f4-4d91-a761-1c91a4012080")) [3mheader_map[0m[2m=[0m{"host": "localhost:3000", "user-agent": "Go-http-client/1.1", "content-length": "65", "api-key": "e1f11936-2004-46ee-b310-84ddb8fb8d14", "container": "adfd56ab-22f4-4d91-a761-1c91a4012080", "content-type": "application/json", "accept-encoding": "gzip"} [3mbody[0m[2m=[0mb"{\n    \"message\": \"message one\",\n    \"messageTwo\": \"message two\"\n}"[1m}[0m[2m:[0m [2mhyper_util::client::legacy::connect::http[0m[2m:[0m connected to 127.0.0.1:5000
[2m2024-05-18T17:35:58.627040Z[0m [35mTRACE[0m [1mtrigger_container[0m[1m{[0m[3mpool[0m[2m=[0mPool { size: 2, num_idle: 1, is_closed: false, options: PoolOptions { max_connections: 5, min_connections: 0, connect_timeout: 3s, max_lifetime: Some(1800s), idle_timeout: Some(600s), test_before_acquire: true } } [3mcontainer[0m[2m=[0mContainer { container_id: adfd56ab-22f4-4d91-a761-1c91a4012080, language: "go", user_id: Some(1990720b-0ba6-4c3f-9a3c-8be8ef391fe3), port: Some(5000), name: "json" } [3mmethod[0m[2m=[0mPOST [3mquery[0m[2m=[0mRawQuery(Some("container_id=adfd56ab-22f4-4d91-a761-1c91a4012080")) [3mheader_map[0m[2m=[0m{"host": "localhost:3000", "user-agent": "Go-http-client/1.1", "content-length": "65", "api-key": "e1f11936-2004-46ee-b310-84ddb8fb8d14", "container": "adfd56ab-22f4-4d91-a761-1c91a4012080", "content-type": "application/json", "accept-encoding": "gzip"} [3mbody[0m[2m=[0mb"{\n    \"message\": \"message one\",\n    \"messageTwo\": \"message two\"\n}"[1m}[0m[2m:[0m [2mhyper_util::client::legacy::client[0m[2m:[0m http1 handshake complete, spawning background dispatcher task
[2m2024-05-18T17:35:58.627128Z[0m [35mTRACE[0m [1mtrigger_container[0m[1m{[0m[3mpool[0m[2m=[0mPool { size: 2, num_idle: 1, is_closed: false, options: PoolOptions { max_connections: 5, min_connections: 0, connect_timeout: 3s, max_lifetime: Some(1800s), idle_timeout: Some(600s), test_before_acquire: true } } [3mcontainer[0m[2m=[0mContainer { container_id: adfd56ab-22f4-4d91-a761-1c91a4012080, language: "go", user_id: Some(1990720b-0ba6-4c3f-9a3c-8be8ef391fe3), port: Some(5000), name: "json" } [3mmethod[0m[2m=[0mPOST [3mquery[0m[2m=[0mRawQuery(Some("container_id=adfd56ab-22f4-4d91-a761-1c91a4012080")) [3mheader_map[0m[2m=[0m{"host": "localhost:3000", "user-agent": "Go-http-client/1.1", "content-length": "65", "api-key": "e1f11936-2004-46ee-b310-84ddb8fb8d14", "container": "adfd56ab-22f4-4d91-a761-1c91a4012080", "content-type": "application/json", "accept-encoding": "gzip"} [3mbody[0m[2m=[0mb"{\n    \"message\": \"message one\",\n    \"messageTwo\": \"message two\"\n}"[1m}[0m[2m:[0m [2mhyper_util::client::legacy::pool[0m[2m:[0m checkout dropped for ("http", 127.0.0.1:5000)
[2m2024-05-18T17:35:58.627565Z[0m [35mTRACE[0m [1mtrigger_container[0m[1m{[0m[3mpool[0m[2m=[0mPool { size: 2, num_idle: 1, is_closed: false, options: PoolOptions { max_connections: 5, min_connections: 0, connect_timeout: 3s, max_lifetime: Some(1800s), idle_timeout: Some(600s), test_before_acquire: true } } [3mcontainer[0m[2m=[0mContainer { container_id: adfd56ab-22f4-4d91-a761-1c91a4012080, language: "go", user_id: Some(1990720b-0ba6-4c3f-9a3c-8be8ef391fe3), port: Some(5000), name: "json" } [3mmethod[0m[2m=[0mPOST [3mquery[0m[2m=[0mRawQuery(Some("container_id=adfd56ab-22f4-4d91-a761-1c91a4012080")) [3mheader_map[0m[2m=[0m{"host": "localhost:3000", "user-agent": "Go-http-client/1.1", "content-length": "65", "api-key": "e1f11936-2004-46ee-b310-84ddb8fb8d14", "container": "adfd56ab-22f4-4d91-a761-1c91a4012080", "content-type": "application/json", "accept-encoding": "gzip"} [3mbody[0m[2m=[0mb"{\n    \"message\": \"message one\",\n    \"messageTwo\": \"message two\"\n}"[1m}[0m[2m:[0m [2mhyper_util::client::legacy::pool[0m[2m:[0m put; add idle connection for ("http", 127.0.0.1:5000)
[2m2024-05-18T17:35:58.627646Z[0m [34mDEBUG[0m [1mtrigger_container[0m[1m{[0m[3mpool[0m[2m=[0mPool { size: 2, num_idle: 1, is_closed: false, options: PoolOptions { max_connections: 5, min_connections: 0, connect_timeout: 3s, max_lifetime: Some(1800s), idle_timeout: Some(600s), test_before_acquire: true } } [3mcontainer[0m[2m=[0mContainer { container_id: adfd56ab-22f4-4d91-a761-1c91a4012080, language: "go", user_id: Some(1990720b-0ba6-4c3f-9a3c-8be8ef391fe3), port: Some(5000), name: "json" } [3mmethod[0m[2m=[0mPOST [3mquery[0m[2m=[0mRawQuery(Some("container_id=adfd56ab-22f4-4d91-a761-1c91a4012080")) [3mheader_map[0m[2m=[0m{"host": "localhost:3000", "user-agent": "Go-http-client/1.1", "content-length": "65", "api-key": "e1f11936-2004-46ee-b310-84ddb8fb8d14", "container": "adfd56ab-22f4-4d91-a761-1c91a4012080", "content-type": "application/json", "accept-encoding": "gzip"} [3mbody[0m[2m=[0mb"{\n    \"message\": \"message one\",\n    \"messageTwo\": \"message two\"\n}"[1m}[0m[2m:[0m [2mhyper_util::client::legacy::pool[0m[2m:[0m pooling idle connection for ("http", 127.0.0.1:5000)
[2m2024-05-18T17:35:58.628417Z[0m [32m INFO[0m [2mkappa::routes::middleware[0m[2m:[0m api key e1f11936-2004-46ee-b310-84ddb8fb8d14
[2m2024-05-18T17:35:58.629239Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT * FROM \"user\" â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  *\nFROM\n  \"user\"\nWHERE\n  api_key = $1\n" [3mrows_affected[0m[2m=[0m0 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m121.37Âµs [3melapsed_secs[0m[2m=[0m0.00012137
[2m2024-05-18T17:35:58.629375Z[0m [32m INFO[0m [2mkappa::routes::containers[0m[2m:[0m Received file with bytes length of 510

[2m2024-05-18T17:35:58.629533Z[0m [32m INFO[0m [2mkappa::routes::containers[0m[2m:[0m File extracted to "zip/c80c5e8b-2bb1-429b-8bc2-58c025787fff/main.go" (568 bytes)
[2m2024-05-18T17:35:58.629775Z[0m [32m INFO[0m [2mkappa::docker::docker[0m[2m:[0m Created docker file with UUID:c80c5e8b-2bb1-429b-8bc2-58c025787fff
[2m2024-05-18T17:35:58.629972Z[0m [35mTRACE[0m [2mhyper_util::client::legacy::client[0m[2m:[0m http1 handshake complete, spawning background dispatcher task
[2m2024-05-18T17:35:58.630335Z[0m [35mTRACE[0m [2mhyper_util::client::legacy::pool[0m[2m:[0m pool dropped, dropping pooled (("unix", 2f7661722f72756e2f646f636b65722e736f636b))
[2m2024-05-18T17:35:58.630619Z[0m [35mTRACE[0m [2mhyper_util::client::legacy::client[0m[2m:[0m http1 handshake complete, spawning background dispatcher task
[2m2024-05-18T17:36:03.740809Z[0m [32m INFO[0m [2mkappa::docker::docker[0m[2m:[0m Building container c80c5e8b-2bb1-429b-8bc2-58c025787fff progress : No progress
[2m2024-05-18T17:36:03.741204Z[0m [35mTRACE[0m [2mhyper_util::client::legacy::client[0m[2m:[0m http1 handshake complete, spawning background dispatcher task
[2m2024-05-18T17:36:03.749466Z[0m [35mTRACE[0m [2mhyper_util::client::legacy::pool[0m[2m:[0m pool dropped, dropping pooled (("unix", 2f7661722f72756e2f646f636b65722e736f636b))
[2m2024-05-18T17:36:03.749685Z[0m [35mTRACE[0m [2mhyper_util::client::legacy::client[0m[2m:[0m http1 handshake complete, spawning background dispatcher task
[2m2024-05-18T17:36:03.873982Z[0m [35mTRACE[0m [2mhyper_util::client::legacy::pool[0m[2m:[0m pool dropped, dropping pooled (("unix", 2f7661722f72756e2f646f636b65722e736f636b))
[2m2024-05-18T17:36:03.874080Z[0m [32m INFO[0m [2mkappa::docker::docker[0m[2m:[0m Successfully built and started docker container
[2m2024-05-18T17:36:03.877600Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"insert into \"container\"(container_id, language, â€¦" [3mdb.statement[0m[2m=[0m"\n\ninsert into\n  \"container\"(container_id, language, user_id, port, name)\nvalues\n  (\n    $1 :: UUID,\n    $2 :: TEXT,\n    $3 :: UUID,\n    $4 :: INTEGER,\n    $5 :: TEXT\n  )\n" [3mrows_affected[0m[2m=[0m1 [3mrows_returned[0m[2m=[0m0 [3melapsed[0m[2m=[0m1.353655ms [3melapsed_secs[0m[2m=[0m0.001353655
[2m2024-05-18T17:36:03.877977Z[0m [32m INFO[0m [2mkappa::routes::middleware[0m[2m:[0m api key e1f11936-2004-46ee-b310-84ddb8fb8d14
[2m2024-05-18T17:36:03.878665Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT * FROM \"user\" â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  *\nFROM\n  \"user\"\nWHERE\n  api_key = $1\n" [3mrows_affected[0m[2m=[0m0 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m151.85Âµs [3melapsed_secs[0m[2m=[0m0.00015185
[2m2024-05-18T17:36:03.879561Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT * FROM container â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  *\nFROM\n  container\nWHERE\n  container_id = $1\n  AND user_id = $2\n" [3mrows_affected[0m[2m=[0m0 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m123.55Âµs [3melapsed_secs[0m[2m=[0m0.00012355
[2m2024-05-18T17:36:03.912163Z[0m [35mTRACE[0m [1mtrigger_container[0m[1m{[0m[3mpool[0m[2m=[0mPool { size: 2, num_idle: 1, is_closed: false, options: PoolOptions { max_connections: 5, min_connections: 0, connect_timeout: 3s, max_lifetime: Some(1800s), idle_timeout: Some(600s), test_before_acquire: true } } [3mcontainer[0m[2m=[0mContainer { container_id: c80c5e8b-2bb1-429b-8bc2-58c025787fff, language: "go", user_id: Some(1990720b-0ba6-4c3f-9a3c-8be8ef391fe3), port: Some(5001), name: "context" } [3mmethod[0m[2m=[0mPOST [3mquery[0m[2m=[0mRawQuery(Some("container_id=c80c5e8b-2bb1-429b-8bc2-58c025787fff")) [3mheader_map[0m[2m=[0m{"host": "localhost:3000", "user-agent": "Go-http-client/1.1", "content-length": "0", "api-key": "e1f11936-2004-46ee-b310-84ddb8fb8d14", "container": "c80c5e8b-2bb1-429b-8bc2-58c025787fff", "content-type": "application/json", "accept-encoding": "gzip"} [3mbody[0m[2m=[0mb""[1m}[0m[2m:[0m [2mhyper_util::client::legacy::pool[0m[2m:[0m checkout waiting for idle connection: ("http", 127.0.0.1:5001)
[2m2024-05-18T17:36:03.912260Z[0m [35mTRACE[0m [1mtrigger_container[0m[1m{[0m[3mpool[0m[2m=[0mPool { size: 2, num_idle: 1, is_closed: false, options: PoolOptions { max_connections: 5, min_connections: 0, connect_timeout: 3s, max_lifetime: Some(1800s), idle_timeout: Some(600s), test_before_acquire: true } } [3mcontainer[0m[2m=[0mContainer { container_id: c80c5e8b-2bb1-429b-8bc2-58c025787fff, language: "go", user_id: Some(1990720b-0ba6-4c3f-9a3c-8be8ef391fe3), port: Some(5001), name: "context" } [3mmethod[0m[2m=[0mPOST [3mquery[0m[2m=[0mRawQuery(Some("container_id=c80c5e8b-2bb1-429b-8bc2-58c025787fff")) [3mheader_map[0m[2m=[0m{"host": "localhost:3000", "user-agent": "Go-http-client/1.1", "content-length": "0", "api-key": "e1f11936-2004-46ee-b310-84ddb8fb8d14", "container": "c80c5e8b-2bb1-429b-8bc2-58c025787fff", "content-type": "application/json", "accept-encoding": "gzip"} [3mbody[0m[2m=[0mb""[1m}[0m[2m:[0m [2mhyper_util::client::legacy::connect::http[0m[2m:[0m Http::connect; scheme=Some("http"), host=Some("127.0.0.1"), port=Some(Port(5001))
[2m2024-05-18T17:36:03.912306Z[0m [34mDEBUG[0m [1mtrigger_container[0m[1m{[0m[3mpool[0m[2m=[0mPool { size: 2, num_idle: 1, is_closed: false, options: PoolOptions { max_connections: 5, min_connections: 0, connect_timeout: 3s, max_lifetime: Some(1800s), idle_timeout: Some(600s), test_before_acquire: true } } [3mcontainer[0m[2m=[0mContainer { container_id: c80c5e8b-2bb1-429b-8bc2-58c025787fff, language: "go", user_id: Some(1990720b-0ba6-4c3f-9a3c-8be8ef391fe3), port: Some(5001), name: "context" } [3mmethod[0m[2m=[0mPOST [3mquery[0m[2m=[0mRawQuery(Some("container_id=c80c5e8b-2bb1-429b-8bc2-58c025787fff")) [3mheader_map[0m[2m=[0m{"host": "localhost:3000", "user-agent": "Go-http-client/1.1", "content-length": "0", "api-key": "e1f11936-2004-46ee-b310-84ddb8fb8d14", "container": "c80c5e8b-2bb1-429b-8bc2-58c025787fff", "content-type": "application/json", "accept-encoding": "gzip"} [3mbody[0m[2m=[0mb""[1m}[0m[2m:[0m [2mhyper_util::client::legacy::connect::http[0m[2m:[0m connecting to 127.0.0.1:5001
[2m2024-05-18T17:36:03.912467Z[0m [34mDEBUG[0m [1mtrigger_container[0m[1m{[0m[3mpool[0m[2m=[0mPool { size: 2, num_idle: 1, is_closed: false, options: PoolOptions { max_connections: 5, min_connections: 0, connect_timeout: 3s, max_lifetime: Some(1800s), idle_timeout: Some(600s), test_before_acquire: true } } [3mcontainer[0m[2m=[0mContainer { container_id: c80c5e8b-2bb1-429b-8bc2-58c025787fff, language: "go", user_id: Some(1990720b-0ba6-4c3f-9a3c-8be8ef391fe3), port: Some(5001), name: "context" } [3mmethod[0m[2m=[0mPOST [3mquery[0m[2m=[0mRawQuery(Some("container_id=c80c5e8b-2bb1-429b-8bc2-58c025787fff")) [3mheader_map[0m[2m=[0m{"host": "localhost:3000", "user-agent": "Go-http-client/1.1", "content-length": "0", "api-key": "e1f11936-2004-46ee-b310-84ddb8fb8d14", "container": "c80c5e8b-2bb1-429b-8bc2-58c025787fff", "content-type": "application/json", "accept-encoding": "gzip"} [3mbody[0m[2m=[0mb""[1m}[0m[2m:[0m [2mhyper_util::client::legacy::connect::http[0m[2m:[0m connected to 127.0.0.1:5001
[2m2024-05-18T17:36:03.912522Z[0m [35mTRACE[0m [1mtrigger_container[0m[1m{[0m[3mpool[0m[2m=[0mPool { size: 2, num_idle: 1, is_closed: false, options: PoolOptions { max_connections: 5, min_connections: 0, connect_timeout: 3s, max_lifetime: Some(1800s), idle_timeout: Some(600s), test_before_acquire: true } } [3mcontainer[0m[2m=[0mContainer { container_id: c80c5e8b-2bb1-429b-8bc2-58c025787fff, language: "go", user_id: Some(1990720b-0ba6-4c3f-9a3c-8be8ef391fe3), port: Some(5001), name: "context" } [3mmethod[0m[2m=[0mPOST [3mquery[0m[2m=[0mRawQuery(Some("container_id=c80c5e8b-2bb1-429b-8bc2-58c025787fff")) [3mheader_map[0m[2m=[0m{"host": "localhost:3000", "user-agent": "Go-http-client/1.1", "content-length": "0", "api-key": "e1f11936-2004-46ee-b310-84ddb8fb8d14", "container": "c80c5e8b-2bb1-429b-8bc2-58c025787fff", "content-type": "application/json", "accept-encoding": "gzip"} [3mbody[0m[2m=[0mb""[1m}[0m[2m:[0m [2mhyper_util::client::legacy::client[0m[2m:[0m http1 handshake complete, spawning background dispatcher task
[2m2024-05-18T17:36:03.912600Z[0m [35mTRACE[0m [1mtrigger_container[0m[1m{[0m[3mpool[0m[2m=[0mPool { size: 2, num_idle: 1, is_closed: false, options: PoolOptions { max_connections: 5, min_connections: 0, connect_timeout: 3s, max_lifetime: Some(1800s), idle_timeout: Some(600s), test_before_acquire: true } } [3mcontainer[0m[2m=[0mContainer { container_id: c80c5e8b-2bb1-429b-8bc2-58c025787fff, language: "go", user_id: Some(1990720b-0ba6-4c3f-9a3c-8be8ef391fe3), port: Some(5001), name: "context" } [3mmethod[0m[2m=[0mPOST [3mquery[0m[2m=[0mRawQuery(Some("container_id=c80c5e8b-2bb1-429b-8bc2-58c025787fff")) [3mheader_map[0m[2m=[0m{"host": "localhost:3000", "user-agent": "Go-http-client/1.1", "content-length": "0", "api-key": "e1f11936-2004-46ee-b310-84ddb8fb8d14", "container": "c80c5e8b-2bb1-429b-8bc2-58c025787fff", "content-type": "application/json", "accept-encoding": "gzip"} [3mbody[0m[2m=[0mb""[1m}[0m[2m:[0m [2mhyper_util::client::legacy::pool[0m[2m:[0m checkout dropped for ("http", 127.0.0.1:5001)
[2m2024-05-18T17:36:03.913050Z[0m [35mTRACE[0m [1mtrigger_container[0m[1m{[0m[3mpool[0m[2m=[0mPool { size: 2, num_idle: 1, is_closed: false, options: PoolOptions { max_connections: 5, min_connections: 0, connect_timeout: 3s, max_lifetime: Some(1800s), idle_timeout: Some(600s), test_before_acquire: true } } [3mcontainer[0m[2m=[0mContainer { container_id: c80c5e8b-2bb1-429b-8bc2-58c025787fff, language: "go", user_id: Some(1990720b-0ba6-4c3f-9a3c-8be8ef391fe3), port: Some(5001), name: "context" } [3mmethod[0m[2m=[0mPOST [3mquery[0m[2m=[0mRawQuery(Some("container_id=c80c5e8b-2bb1-429b-8bc2-58c025787fff")) [3mheader_map[0m[2m=[0m{"host": "localhost:3000", "user-agent": "Go-http-client/1.1", "content-length": "0", "api-key": "e1f11936-2004-46ee-b310-84ddb8fb8d14", "container": "c80c5e8b-2bb1-429b-8bc2-58c025787fff", "content-type": "application/json", "accept-encoding": "gzip"} [3mbody[0m[2m=[0mb""[1m}[0m[2m:[0m [2mhyper_util::client::legacy::pool[0m[2m:[0m put; add idle connection for ("http", 127.0.0.1:5001)
[2m2024-05-18T17:36:03.913101Z[0m [34mDEBUG[0m [1mtrigger_container[0m[1m{[0m[3mpool[0m[2m=[0mPool { size: 2, num_idle: 1, is_closed: false, options: PoolOptions { max_connections: 5, min_connections: 0, connect_timeout: 3s, max_lifetime: Some(1800s), idle_timeout: Some(600s), test_before_acquire: true } } [3mcontainer[0m[2m=[0mContainer { container_id: c80c5e8b-2bb1-429b-8bc2-58c025787fff, language: "go", user_id: Some(1990720b-0ba6-4c3f-9a3c-8be8ef391fe3), port: Some(5001), name: "context" } [3mmethod[0m[2m=[0mPOST [3mquery[0m[2m=[0mRawQuery(Some("container_id=c80c5e8b-2bb1-429b-8bc2-58c025787fff")) [3mheader_map[0m[2m=[0m{"host": "localhost:3000", "user-agent": "Go-http-client/1.1", "content-length": "0", "api-key": "e1f11936-2004-46ee-b310-84ddb8fb8d14", "container": "c80c5e8b-2bb1-429b-8bc2-58c025787fff", "content-type": "application/json", "accept-encoding": "gzip"} [3mbody[0m[2m=[0mb""[1m}[0m[2m:[0m [2mhyper_util::client::legacy::pool[0m[2m:[0m pooling idle connection for ("http", 127.0.0.1:5001)
[2m2024-05-18T17:36:03.913973Z[0m [32m INFO[0m [2mkappa::routes::middleware[0m[2m:[0m api key e1f11936-2004-46ee-b310-84ddb8fb8d14
[2m2024-05-18T17:36:03.914622Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT * FROM \"user\" â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  *\nFROM\n  \"user\"\nWHERE\n  api_key = $1\n" [3mrows_affected[0m[2m=[0m0 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m128.061Âµs [3melapsed_secs[0m[2m=[0m0.000128061
[2m2024-05-18T17:36:03.914764Z[0m [32m INFO[0m [2mkappa::routes::containers[0m[2m:[0m Received file with bytes length of 1246

[2m2024-05-18T17:36:03.914941Z[0m [32m INFO[0m [2mkappa::routes::containers[0m[2m:[0m File extracted to "zip/f208e5cb-c527-4071-b1bb-8a2c90ce6105/main.go" (278 bytes)
[2m2024-05-18T17:36:03.915087Z[0m [32m INFO[0m [2mkappa::routes::containers[0m[2m:[0m File extracted to "zip/f208e5cb-c527-4071-b1bb-8a2c90ce6105/test_zip.zip" (351 bytes)
[2m2024-05-18T17:36:03.915160Z[0m [32m INFO[0m [2mkappa::routes::containers[0m[2m:[0m File extracted to "zip/f208e5cb-c527-4071-b1bb-8a2c90ce6105/main.go" (279 bytes)
[2m2024-05-18T17:36:03.915359Z[0m [32m INFO[0m [2mkappa::docker::docker[0m[2m:[0m Created docker file with UUID:f208e5cb-c527-4071-b1bb-8a2c90ce6105
[2m2024-05-18T17:36:03.915568Z[0m [35mTRACE[0m [2mhyper_util::client::legacy::client[0m[2m:[0m http1 handshake complete, spawning background dispatcher task
[2m2024-05-18T17:36:03.916009Z[0m [35mTRACE[0m [2mhyper_util::client::legacy::pool[0m[2m:[0m pool dropped, dropping pooled (("unix", 2f7661722f72756e2f646f636b65722e736f636b))
[2m2024-05-18T17:36:03.916312Z[0m [35mTRACE[0m [2mhyper_util::client::legacy::client[0m[2m:[0m http1 handshake complete, spawning background dispatcher task
[2m2024-05-18T17:36:09.048299Z[0m [32m INFO[0m [2mkappa::docker::docker[0m[2m:[0m Building container f208e5cb-c527-4071-b1bb-8a2c90ce6105 progress : No progress
[2m2024-05-18T17:36:09.048707Z[0m [35mTRACE[0m [2mhyper_util::client::legacy::client[0m[2m:[0m http1 handshake complete, spawning background dispatcher task
[2m2024-05-18T17:36:09.059683Z[0m [35mTRACE[0m [2mhyper_util::client::legacy::pool[0m[2m:[0m pool dropped, dropping pooled (("unix", 2f7661722f72756e2f646f636b65722e736f636b))
[2m2024-05-18T17:36:09.059964Z[0m [35mTRACE[0m [2mhyper_util::client::legacy::client[0m[2m:[0m http1 handshake complete, spawning background dispatcher task
[2m2024-05-18T17:36:09.195815Z[0m [35mTRACE[0m [2mhyper_util::client::legacy::pool[0m[2m:[0m pool dropped, dropping pooled (("unix", 2f7661722f72756e2f646f636b65722e736f636b))
[2m2024-05-18T17:36:09.195914Z[0m [32m INFO[0m [2mkappa::docker::docker[0m[2m:[0m Successfully built and started docker container
[2m2024-05-18T17:36:09.198921Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"insert into \"container\"(container_id, language, â€¦" [3mdb.statement[0m[2m=[0m"\n\ninsert into\n  \"container\"(container_id, language, user_id, port, name)\nvalues\n  (\n    $1 :: UUID,\n    $2 :: TEXT,\n    $3 :: UUID,\n    $4 :: INTEGER,\n    $5 :: TEXT\n  )\n" [3mrows_affected[0m[2m=[0m1 [3mrows_returned[0m[2m=[0m0 [3melapsed[0m[2m=[0m777.943Âµs [3melapsed_secs[0m[2m=[0m0.000777943
[2m2024-05-18T17:36:09.199378Z[0m [32m INFO[0m [2mkappa::routes::middleware[0m[2m:[0m api key e1f11936-2004-46ee-b310-84ddb8fb8d14
[2m2024-05-18T17:36:09.200069Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT * FROM \"user\" â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  *\nFROM\n  \"user\"\nWHERE\n  api_key = $1\n" [3mrows_affected[0m[2m=[0m0 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m145.06Âµs [3melapsed_secs[0m[2m=[0m0.00014506
[2m2024-05-18T17:36:09.200997Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT * FROM container â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  *\nFROM\n  container\nWHERE\n  container_id = $1\n  AND user_id = $2\n" [3mrows_affected[0m[2m=[0m0 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m143.361Âµs [3melapsed_secs[0m[2m=[0m0.000143361
[2m2024-05-18T17:36:09.230223Z[0m [35mTRACE[0m [1mtrigger_container[0m[1m{[0m[3mpool[0m[2m=[0mPool { size: 2, num_idle: 1, is_closed: false, options: PoolOptions { max_connections: 5, min_connections: 0, connect_timeout: 3s, max_lifetime: Some(1800s), idle_timeout: Some(600s), test_before_acquire: true } } [3mcontainer[0m[2m=[0mContainer { container_id: f208e5cb-c527-4071-b1bb-8a2c90ce6105, language: "go", user_id: Some(1990720b-0ba6-4c3f-9a3c-8be8ef391fe3), port: Some(5002), name: "string" } [3mmethod[0m[2m=[0mPOST [3mquery[0m[2m=[0mRawQuery(Some("container_id=f208e5cb-c527-4071-b1bb-8a2c90ce6105")) [3mheader_map[0m[2m=[0m{"host": "localhost:3000", "user-agent": "Go-http-client/1.1", "content-length": "0", "api-key": "e1f11936-2004-46ee-b310-84ddb8fb8d14", "container": "f208e5cb-c527-4071-b1bb-8a2c90ce6105", "content-type": "application/json", "accept-encoding": "gzip"} [3mbody[0m[2m=[0mb""[1m}[0m[2m:[0m [2mhyper_util::client::legacy::pool[0m[2m:[0m checkout waiting for idle connection: ("http", 127.0.0.1:5002)
[2m2024-05-18T17:36:09.230279Z[0m [35mTRACE[0m [1mtrigger_container[0m[1m{[0m[3mpool[0m[2m=[0mPool { size: 2, num_idle: 1, is_closed: false, options: PoolOptions { max_connections: 5, min_connections: 0, connect_timeout: 3s, max_lifetime: Some(1800s), idle_timeout: Some(600s), test_before_acquire: true } } [3mcontainer[0m[2m=[0mContainer { container_id: f208e5cb-c527-4071-b1bb-8a2c90ce6105, language: "go", user_id: Some(1990720b-0ba6-4c3f-9a3c-8be8ef391fe3), port: Some(5002), name: "string" } [3mmethod[0m[2m=[0mPOST [3mquery[0m[2m=[0mRawQuery(Some("container_id=f208e5cb-c527-4071-b1bb-8a2c90ce6105")) [3mheader_map[0m[2m=[0m{"host": "localhost:3000", "user-agent": "Go-http-client/1.1", "content-length": "0", "api-key": "e1f11936-2004-46ee-b310-84ddb8fb8d14", "container": "f208e5cb-c527-4071-b1bb-8a2c90ce6105", "content-type": "application/json", "accept-encoding": "gzip"} [3mbody[0m[2m=[0mb""[1m}[0m[2m:[0m [2mhyper_util::client::legacy::connect::http[0m[2m:[0m Http::connect; scheme=Some("http"), host=Some("127.0.0.1"), port=Some(Port(5002))
[2m2024-05-18T17:36:09.230324Z[0m [34mDEBUG[0m [1mtrigger_container[0m[1m{[0m[3mpool[0m[2m=[0mPool { size: 2, num_idle: 1, is_closed: false, options: PoolOptions { max_connections: 5, min_connections: 0, connect_timeout: 3s, max_lifetime: Some(1800s), idle_timeout: Some(600s), test_before_acquire: true } } [3mcontainer[0m[2m=[0mContainer { container_id: f208e5cb-c527-4071-b1bb-8a2c90ce6105, language: "go", user_id: Some(1990720b-0ba6-4c3f-9a3c-8be8ef391fe3), port: Some(5002), name: "string" } [3mmethod[0m[2m=[0mPOST [3mquery[0m[2m=[0mRawQuery(Some("container_id=f208e5cb-c527-4071-b1bb-8a2c90ce6105")) [3mheader_map[0m[2m=[0m{"host": "localhost:3000", "user-agent": "Go-http-client/1.1", "content-length": "0", "api-key": "e1f11936-2004-46ee-b310-84ddb8fb8d14", "container": "f208e5cb-c527-4071-b1bb-8a2c90ce6105", "content-type": "application/json", "accept-encoding": "gzip"} [3mbody[0m[2m=[0mb""[1m}[0m[2m:[0m [2mhyper_util::client::legacy::connect::http[0m[2m:[0m connecting to 127.0.0.1:5002
[2m2024-05-18T17:36:09.230513Z[0m [34mDEBUG[0m [1mtrigger_container[0m[1m{[0m[3mpool[0m[2m=[0mPool { size: 2, num_idle: 1, is_closed: false, options: PoolOptions { max_connections: 5, min_connections: 0, connect_timeout: 3s, max_lifetime: Some(1800s), idle_timeout: Some(600s), test_before_acquire: true } } [3mcontainer[0m[2m=[0mContainer { container_id: f208e5cb-c527-4071-b1bb-8a2c90ce6105, language: "go", user_id: Some(1990720b-0ba6-4c3f-9a3c-8be8ef391fe3), port: Some(5002), name: "string" } [3mmethod[0m[2m=[0mPOST [3mquery[0m[2m=[0mRawQuery(Some("container_id=f208e5cb-c527-4071-b1bb-8a2c90ce6105")) [3mheader_map[0m[2m=[0m{"host": "localhost:3000", "user-agent": "Go-http-client/1.1", "content-length": "0", "api-key": "e1f11936-2004-46ee-b310-84ddb8fb8d14", "container": "f208e5cb-c527-4071-b1bb-8a2c90ce6105", "content-type": "application/json", "accept-encoding": "gzip"} [3mbody[0m[2m=[0mb""[1m}[0m[2m:[0m [2mhyper_util::client::legacy::connect::http[0m[2m:[0m connected to 127.0.0.1:5002
[2m2024-05-18T17:36:09.230575Z[0m [35mTRACE[0m [1mtrigger_container[0m[1m{[0m[3mpool[0m[2m=[0mPool { size: 2, num_idle: 1, is_closed: false, options: PoolOptions { max_connections: 5, min_connections: 0, connect_timeout: 3s, max_lifetime: Some(1800s), idle_timeout: Some(600s), test_before_acquire: true } } [3mcontainer[0m[2m=[0mContainer { container_id: f208e5cb-c527-4071-b1bb-8a2c90ce6105, language: "go", user_id: Some(1990720b-0ba6-4c3f-9a3c-8be8ef391fe3), port: Some(5002), name: "string" } [3mmethod[0m[2m=[0mPOST [3mquery[0m[2m=[0mRawQuery(Some("container_id=f208e5cb-c527-4071-b1bb-8a2c90ce6105")) [3mheader_map[0m[2m=[0m{"host": "localhost:3000", "user-agent": "Go-http-client/1.1", "content-length": "0", "api-key": "e1f11936-2004-46ee-b310-84ddb8fb8d14", "container": "f208e5cb-c527-4071-b1bb-8a2c90ce6105", "content-type": "application/json", "accept-encoding": "gzip"} [3mbody[0m[2m=[0mb""[1m}[0m[2m:[0m [2mhyper_util::client::legacy::client[0m[2m:[0m http1 handshake complete, spawning background dispatcher task
[2m2024-05-18T17:36:09.230678Z[0m [35mTRACE[0m [1mtrigger_container[0m[1m{[0m[3mpool[0m[2m=[0mPool { size: 2, num_idle: 1, is_closed: false, options: PoolOptions { max_connections: 5, min_connections: 0, connect_timeout: 3s, max_lifetime: Some(1800s), idle_timeout: Some(600s), test_before_acquire: true } } [3mcontainer[0m[2m=[0mContainer { container_id: f208e5cb-c527-4071-b1bb-8a2c90ce6105, language: "go", user_id: Some(1990720b-0ba6-4c3f-9a3c-8be8ef391fe3), port: Some(5002), name: "string" } [3mmethod[0m[2m=[0mPOST [3mquery[0m[2m=[0mRawQuery(Some("container_id=f208e5cb-c527-4071-b1bb-8a2c90ce6105")) [3mheader_map[0m[2m=[0m{"host": "localhost:3000", "user-agent": "Go-http-client/1.1", "content-length": "0", "api-key": "e1f11936-2004-46ee-b310-84ddb8fb8d14", "container": "f208e5cb-c527-4071-b1bb-8a2c90ce6105", "content-type": "application/json", "accept-encoding": "gzip"} [3mbody[0m[2m=[0mb""[1m}[0m[2m:[0m [2mhyper_util::client::legacy::pool[0m[2m:[0m checkout dropped for ("http", 127.0.0.1:5002)
[2m2024-05-18T17:36:09.231041Z[0m [35mTRACE[0m [1mtrigger_container[0m[1m{[0m[3mpool[0m[2m=[0mPool { size: 2, num_idle: 1, is_closed: false, options: PoolOptions { max_connections: 5, min_connections: 0, connect_timeout: 3s, max_lifetime: Some(1800s), idle_timeout: Some(600s), test_before_acquire: true } } [3mcontainer[0m[2m=[0mContainer { container_id: f208e5cb-c527-4071-b1bb-8a2c90ce6105, language: "go", user_id: Some(1990720b-0ba6-4c3f-9a3c-8be8ef391fe3), port: Some(5002), name: "string" } [3mmethod[0m[2m=[0mPOST [3mquery[0m[2m=[0mRawQuery(Some("container_id=f208e5cb-c527-4071-b1bb-8a2c90ce6105")) [3mheader_map[0m[2m=[0m{"host": "localhost:3000", "user-agent": "Go-http-client/1.1", "content-length": "0", "api-key": "e1f11936-2004-46ee-b310-84ddb8fb8d14", "container": "f208e5cb-c527-4071-b1bb-8a2c90ce6105", "content-type": "application/json", "accept-encoding": "gzip"} [3mbody[0m[2m=[0mb""[1m}[0m[2m:[0m [2mhyper_util::client::legacy::pool[0m[2m:[0m put; add idle connection for ("http", 127.0.0.1:5002)
[2m2024-05-18T17:36:09.231091Z[0m [34mDEBUG[0m [1mtrigger_container[0m[1m{[0m[3mpool[0m[2m=[0mPool { size: 2, num_idle: 1, is_closed: false, options: PoolOptions { max_connections: 5, min_connections: 0, connect_timeout: 3s, max_lifetime: Some(1800s), idle_timeout: Some(600s), test_before_acquire: true } } [3mcontainer[0m[2m=[0mContainer { container_id: f208e5cb-c527-4071-b1bb-8a2c90ce6105, language: "go", user_id: Some(1990720b-0ba6-4c3f-9a3c-8be8ef391fe3), port: Some(5002), name: "string" } [3mmethod[0m[2m=[0mPOST [3mquery[0m[2m=[0mRawQuery(Some("container_id=f208e5cb-c527-4071-b1bb-8a2c90ce6105")) [3mheader_map[0m[2m=[0m{"host": "localhost:3000", "user-agent": "Go-http-client/1.1", "content-length": "0", "api-key": "e1f11936-2004-46ee-b310-84ddb8fb8d14", "container": "f208e5cb-c527-4071-b1bb-8a2c90ce6105", "content-type": "application/json", "accept-encoding": "gzip"} [3mbody[0m[2m=[0mb""[1m}[0m[2m:[0m [2mhyper_util::client::legacy::pool[0m[2m:[0m pooling idle connection for ("http", 127.0.0.1:5002)
[2m2024-05-18T17:36:09.231851Z[0m [32m INFO[0m [2mkappa::routes::middleware[0m[2m:[0m api key e1f11936-2004-46ee-b310-84ddb8fb8d14
[2m2024-05-18T17:36:09.232464Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT * FROM \"user\" â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  *\nFROM\n  \"user\"\nWHERE\n  api_key = $1\n" [3mrows_affected[0m[2m=[0m0 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m102.88Âµs [3melapsed_secs[0m[2m=[0m0.00010288
[2m2024-05-18T17:36:09.233354Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT * FROM container â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  *\nFROM\n  container\nWHERE\n  user_id = $1\n" [3mrows_affected[0m[2m=[0m3 [3mrows_returned[0m[2m=[0m3 [3melapsed[0m[2m=[0m278.1Âµs [3melapsed_secs[0m[2m=[0m0.0002781
[2m2024-05-18T17:36:09.233632Z[0m [32m INFO[0m [2mkappa::routes::middleware[0m[2m:[0m api key e1f11936-2004-46ee-b310-84ddb8fb8d14
[2m2024-05-18T17:36:09.234215Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT * FROM \"user\" â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  *\nFROM\n  \"user\"\nWHERE\n  api_key = $1\n" [3mrows_affected[0m[2m=[0m0 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m90.781Âµs [3melapsed_secs[0m[2m=[0m9.0781e-5
[2m2024-05-18T17:36:09.235241Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT * FROM container â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  *\nFROM\n  container\nWHERE\n  container_id = $1\n  AND user_id = $2\n" [3mrows_affected[0m[2m=[0m0 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m227.061Âµs [3melapsed_secs[0m[2m=[0m0.000227061
[2m2024-05-18T17:36:09.235444Z[0m [35mTRACE[0m [2mhyper_util::client::legacy::client[0m[2m:[0m http1 handshake complete, spawning background dispatcher task
[2m2024-05-18T17:36:09.235763Z[0m [35mTRACE[0m [2mhyper_util::client::legacy::pool[0m[2m:[0m pool dropped, dropping pooled (("unix", 2f7661722f72756e2f646f636b65722e736f636b))
[2m2024-05-18T17:36:09.753279Z[0m [31mERROR[0m [2mkappa::errors::error[0m[2m:[0m [3merror.cause[0m[2m=[0mDockerError(DockerResponseServerError { status_code: 409, message: "You cannot remove a running container e5720374e84899d5817999194a62e2a2239b12581a854ce9318434761841c8b1. Stop the container before attempting removal or force remove" }) [3merror.backtrace[0m[2m=[0m   0: <kappa::errors::error::AppError as core::convert::From<kappa::errors::error::CustomError>>::from
             at /home/will/rust/kappa/src/errors/error.rs:102:25
   1: <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
             at /rustc/9b00956e56009bab2aa15d7bff10916599e3d6d6/library/core/src/result.rs:1964:27
   2: kappa::routes::containers::delete_container::{{closure}}
             at /home/will/rust/kappa/src/routes/containers.rs:52:5
   3: <F as axum::handler::Handler<(M,T1,T2,T3),S>>::call::{{closure}}
             at /home/will/.cargo/registry/src/index.crates.io-6f17d22bba15001f/axum-0.7.5/src/handler/mod.rs:241:53
   4: <core::pin::Pin<P> as core::future::future::Future>::poll
             at /rustc/9b00956e56009bab2aa15d7bff10916599e3d6d6/library/core/src/future/future.rs:123:9
   5: <futures_util::future::future::map::Map<Fut,F> as core::future::future::Future>::poll
             at /home/will/.cargo/registry/src/index.crates.io-6f17d22bba15001f/futures-util-0.3.30/src/future/future/map.rs:55:37
   6: <futures_util::future::future::Map<Fut,F> as core::future::future::Future>::poll
             at /home/will/.cargo/registry/src/index.crates.io-6f17d22bba15001f/futures-util-0.3.30/src/lib.rs:91:13
   7: <axum::handler::future::IntoServiceFuture<F> as core::future::future::Future>::poll
             at /home/will/.cargo/registry/src/index.crates.io-6f17d22bba15001f/axum-0.7.5/src/macros.rs:42:17
   8: <F as futures_core::future::TryFuture>::try_poll
             at /home/will/.cargo/registry/src/index.crates.io-6f17d22bba15001f/futures-core-0.3.30/src/future.rs:82:9
   9: <futures_util::future::try_future::into_future::IntoFuture<Fut> as core::future::future::Future>::poll
             at /home/will/.cargo/registry/src/index.crates.io-6f17d22bba15001f/futures-util-0.3.30/src/future/try_future/into_future.rs:34:9
  10: <futures_util::future::future::map::Map<Fut,F> as core::future::future::Future>::poll
             at /home/will/.cargo/registry/src/index.crates.io-6f17d22bba15001f/futures-util-0.3.30/src/future/future/map.rs:55:37
  11: <futures_util::future::future::Map<Fut,F> as core::future::future::Future>::poll
             at /home/will/.cargo/registry/src/index.crates.io-6f17d22bba15001f/futures-util-0.3.30/src/lib.rs:91:13
  12: <futures_util::future::try_future::MapOk<Fut,F> as core::future::future::Future>::poll
             at /home/will/.cargo/registry/src/index.crates.io-6f17d22bba15001f/futures-util-0.3.30/src/lib.rs:91:13
  13: <tower::util::map_response::MapResponseFuture<F,N> as core::future::future::Future>::poll
             at /home/will/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tower-0.4.13/src/macros.rs:38:17
  14: <core::pin::Pin<P> as core::future::future::Future>::poll
             at /rustc/9b00956e56009bab2aa15d7bff10916599e3d6d6/library/core/src/future/future.rs:123:9
  15: <tower::util::oneshot::Oneshot<S,Req> as core::future::future::Future>::poll
             at /home/will/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tower-0.4.13/src/util/oneshot.rs:97:38
  16: <axum::routing::route::RouteFuture<E> as core::future::future::Future>::poll
             at /home/will/.cargo/registry/src/index.crates.io-6f17d22bba15001f/axum-0.7.5/src/routing/route.rs:162:61
  17: <F as futures_core::future::TryFuture>::try_poll
             at /home/will/.cargo/registry/src/index.crates.io-6f17d22bba15001f/futures-core-0.3.30/src/future.rs:82:9
  18: <futures_util::future::try_future::into_future::IntoFuture<Fut> as core::future::future::Future>::poll
             at /home/will/.cargo/registry/src/index.crates.io-6f17d22bba15001f/futures-util-0.3.30/src/future/try_future/into_future.rs:34:9
  19: <futures_util::future::future::map::Map<Fut,F> as core::future::future::Future>::poll
             at /home/will/.cargo/registry/src/index.crates.io-6f17d22bba15001f/futures-util-0.3.30/src/future/future/map.rs:55:37
  20: <futures_util::future::future::Map<Fut,F> as core::future::future::Future>::poll
             at /home/will/.cargo/registry/src/index.crates.io-6f17d22bba15001f/futures-util-0.3.30/src/lib.rs:91:13
  21: <futures_util::future::try_future::MapOk<Fut,F> as core::future::future::Future>::poll
             at /home/will/.cargo/registry/src/index.crates.io-6f17d22bba15001f/futures-util-0.3.30/src/lib.rs:91:13
  22: <tower::util::map_response::MapResponseFuture<F,N> as core::future::future::Future>::poll
             at /home/will/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tower-0.4.13/src/macros.rs:38:17
  23: <core::pin::Pin<P> as core::future::future::Future>::poll
             at /rustc/9b00956e56009bab2aa15d7bff10916599e3d6d6/library/core/src/future/future.rs:123:9
  24: axum::middleware::from_fn::Next::run::{{closure}}
             at /home/will/.cargo/registry/src/index.crates.io-6f17d22bba15001f/axum-0.7.5/src/middleware/from_fn.rs:341:36
  25: kappa::routes::middleware::api_key_auth::{{closure}}
             at /home/will/rust/kappa/src/routes/middleware.rs:140:26
  26: <axum::middleware::from_fn::FromFn<F,S,I,(T1,T2)> as tower_service::Service<http::request::Request<axum_core::body::Body>>>::call::{{closure}}
             at /home/will/.cargo/registry/src/index.crates.io-6f17d22bba15001f/axum-0.7.5/src/middleware/from_fn.rs:305:45
  27: <axum::middleware::from_fn::ResponseFuture as core::future::future::Future>::poll
             at /home/will/.cargo/registry/src/index.crates.io-6f17d22bba15001f/axum-0.7.5/src/middleware/from_fn.rs:371:9
  28: <F as futures_core::future::TryFuture>::try_poll
             at /home/will/.cargo/registry/src/index.crates.io-6f17d22bba15001f/futures-core-0.3.30/src/future.rs:82:9
  29: <futures_util::future::try_future::into_future::IntoFuture<Fut> as core::future::future::Future>::poll
             at /home/will/.cargo/registry/src/index.crates.io-6f17d22bba15001f/futures-util-0.3.30/src/future/try_future/into_future.rs:34:9
  30: <futures_util::future::future::map::Map<Fut,F> as core::future::future::Future>::poll
             at /home/will/.cargo/registry/src/index.crates.io-6f17d22bba15001f/futures-util-0.3.30/src/future/future/map.rs:55:37
  31: <futures_util::future::future::Map<Fut,F> as core::future::future::Future>::poll
             at /home/will/.cargo/registry/src/index.crates.io-6f17d22bba15001f/futures-util-0.3.30/src/lib.rs:91:13
  32: <futures_util::future::try_future::MapOk<Fut,F> as core::future::future::Future>::poll
             at /home/will/.cargo/registry/src/index.crates.io-6f17d22bba15001f/futures-util-0.3.30/src/lib.rs:91:13
  33: <tower::util::map_response::MapResponseFuture<F,N> as core::future::future::Future>::poll
             at /home/will/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tower-0.4.13/src/macros.rs:38:17
  34: <F as futures_core::future::TryFuture>::try_poll
             at /home/will/.cargo/registry/src/index.crates.io-6f17d22bba15001f/futures-core-0.3.30/src/future.rs:82:9
  35: <futures_util::future::try_future::into_future::IntoFuture<Fut> as core::future::future::Future>::poll
             at /home/will/.cargo/registry/src/index.crates.io-6f17d22bba15001f/futures-util-0.3.30/src/future/try_future/into_future.rs:34:9
  36: <futures_util::future::future::map::Map<Fut,F> as core::future::future::Future>::poll
             at /home/will/.cargo/registry/src/index.crates.io-6f17d22bba15001f/futures-util-0.3.30/src/future/future/map.rs:55:37
  37: <futures_util::future::future::Map<Fut,F> as core::future::future::Future>::poll
             at /home/will/.cargo/registry/src/index.crates.io-6f17d22bba15001f/futures-util-0.3.30/src/lib.rs:91:13
  38: <futures_util::future::try_future::MapErr<Fut,F> as core::future::future::Future>::poll
             at /home/will/.cargo/registry/src/index.crates.io-6f17d22bba15001f/futures-util-0.3.30/src/lib.rs:91:13
  39: <tower::util::map_err::MapErrFuture<F,N> as core::future::future::Future>::poll
             at /home/will/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tower-0.4.13/src/macros.rs:38:17
  40: <F as futures_core::future::TryFuture>::try_poll
             at /home/will/.cargo/registry/src/index.crates.io-6f17d22bba15001f/futures-core-0.3.30/src/future.rs:82:9
  41: <futures_util::future::try_future::into_future::IntoFuture<Fut> as core::future::future::Future>::poll
             at /home/will/.cargo/registry/src/index.crates.io-6f17d22bba15001f/futures-util-0.3.30/src/future/try_future/into_future.rs:34:9
  42: <futures_util::future::future::map::Map<Fut,F> as core::future::future::Future>::poll
             at /home/will/.cargo/registry/src/index.crates.io-6f17d22bba15001f/futures-util-0.3.30/src/future/future/map.rs:55:37
  43: <futures_util::future::future::Map<Fut,F> as core::future::future::Future>::poll
             at /home/will/.cargo/registry/src/index.crates.io-6f17d22bba15001f/futures-util-0.3.30/src/lib.rs:91:13
  44: <futures_util::future::try_future::MapOk<Fut,F> as core::future::future::Future>::poll
             at /home/will/.cargo/registry/src/index.crates.io-6f17d22bba15001f/futures-util-0.3.30/src/lib.rs:91:13
  45: <tower::util::map_response::MapResponseFuture<F,N> as core::future::future::Future>::poll
             at /home/will/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tower-0.4.13/src/macros.rs:38:17
  46: <core::pin::Pin<P> as core::future::future::Future>::poll
             at /rustc/9b00956e56009bab2aa15d7bff10916599e3d6d6/library/core/src/future/future.rs:123:9
  47: <tower::util::oneshot::Oneshot<S,Req> as core::future::future::Future>::poll
             at /home/will/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tower-0.4.13/src/util/oneshot.rs:97:38
  48: <axum::routing::route::RouteFuture<E> as core::future::future::Future>::poll
             at /home/will/.cargo/registry/src/index.crates.io-6f17d22bba15001f/axum-0.7.5/src/routing/route.rs:162:61
  49: <tower::util::oneshot::Oneshot<S,Req> as core::future::future::Future>::poll
             at /home/will/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tower-0.4.13/src/util/oneshot.rs:97:38
  50: <axum::serve::TowerToHyperServiceFuture<S,R> as core::future::future::Future>::poll
             at /home/will/.cargo/registry/src/index.crates.io-6f17d22bba15001f/axum-0.7.5/src/serve.rs:479:9
  51: <hyper::proto::h1::dispatch::Server<S,hyper::body::incoming::Incoming> as hyper::proto::h1::dispatch::Dispatch>::poll_msg
             at /home/will/.cargo/registry/src/index.crates.io-6f17d22bba15001f/hyper-1.3.1/src/proto/h1/dispatch.rs:514:35
  52: hyper::proto::h1::dispatch::Dispatcher<D,Bs,I,T>::poll_write
             at /home/will/.cargo/registry/src/index.crates.io-6f17d22bba15001f/hyper-1.3.1/src/proto/h1/dispatch.rs:312:43
  53: hyper::proto::h1::dispatch::Dispatcher<D,Bs,I,T>::poll_loop
             at /home/will/.cargo/registry/src/index.crates.io-6f17d22bba15001f/hyper-1.3.1/src/proto/h1/dispatch.rs:171:21
  54: hyper::proto::h1::dispatch::Dispatcher<D,Bs,I,T>::poll_inner
             at /home/will/.cargo/registry/src/index.crates.io-6f17d22bba15001f/hyper-1.3.1/src/proto/h1/dispatch.rs:147:16
  55: hyper::proto::h1::dispatch::Dispatcher<D,Bs,I,T>::poll_catch
             at /home/will/.cargo/registry/src/index.crates.io-6f17d22bba15001f/hyper-1.3.1/src/proto/h1/dispatch.rs:126:28
  56: <hyper::proto::h1::dispatch::Dispatcher<D,Bs,I,T> as core::future::future::Future>::poll
             at /home/will/.cargo/registry/src/index.crates.io-6f17d22bba15001f/hyper-1.3.1/src/proto/h1/dispatch.rs:447:9
  57: <hyper::server::conn::http1::UpgradeableConnection<I,S> as core::future::future::Future>::poll
             at /home/will/.cargo/registry/src/index.crates.io-6f17d22bba15001f/hyper-1.3.1/src/server/conn/http1.rs:505:26
  58: <hyper_util::server::conn::auto::UpgradeableConnection<I,S,E> as core::future::future::Future>::poll
             at /home/will/.cargo/registry/src/index.crates.io-6f17d22bba15001f/hyper-util-0.1.3/src/server/conn/auto.rs:475:28
  59: <axum::serve::Serve<M,S> as core::future::into_future::IntoFuture>::into_future::{{closure}}::{{closure}}
             at /home/will/.cargo/registry/src/index.crates.io-6f17d22bba15001f/axum-0.7.5/src/serve.rs:218:26
  60: tokio::runtime::task::core::Core<T,S>::poll::{{closure}}
             at /home/will/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.37.0/src/runtime/task/core.rs:328:17
  61: tokio::loom::std::unsafe_cell::UnsafeCell<T>::with_mut
             at /home/will/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.37.0/src/loom/std/unsafe_cell.rs:16:9
      tokio::runtime::task::core::Core<T,S>::poll
             at /home/will/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.37.0/src/runtime/task/core.rs:317:13
  62: tokio::runtime::task::harness::poll_future::{{closure}}
             at /home/will/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.37.0/src/runtime/task/harness.rs:485:19
  63: <core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once
             at /rustc/9b00956e56009bab2aa15d7bff10916599e3d6d6/library/core/src/panic/unwind_safe.rs:272:9
  64: std::panicking::try::do_call
             at /rustc/9b00956e56009bab2aa15d7bff10916599e3d6d6/library/std/src/panicking.rs:552:40
  65: __rust_try
  66: std::panicking::try
             at /rustc/9b00956e56009bab2aa15d7bff10916599e3d6d6/library/std/src/panicking.rs:516:19
  67: std::panic::catch_unwind
             at /rustc/9b00956e56009bab2aa15d7bff10916599e3d6d6/library/std/src/panic.rs:146:14
  68: tokio::runtime::task::harness::poll_future
             at /home/will/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.37.0/src/runtime/task/harness.rs:473:18
  69: tokio::runtime::task::harness::Harness<T,S>::poll_inner
             at /home/will/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.37.0/src/runtime/task/harness.rs:208:27
  70: tokio::runtime::task::harness::Harness<T,S>::poll
             at /home/will/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.37.0/src/runtime/task/harness.rs:153:15
  71: tokio::runtime::task::raw::poll
             at /home/will/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.37.0/src/runtime/task/raw.rs:271:5
  72: tokio::runtime::task::raw::RawTask::poll
             at /home/will/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.37.0/src/runtime/task/raw.rs:201:18
  73: tokio::runtime::task::LocalNotified<S>::run
             at /home/will/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.37.0/src/runtime/task/mod.rs:427:9
  74: tokio::runtime::scheduler::multi_thread::worker::Context::run_task::{{closure}}
             at /home/will/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.37.0/src/runtime/scheduler/multi_thread/worker.rs:639:17
  75: tokio::runtime::coop::with_budget
             at /home/will/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.37.0/src/runtime/coop.rs:107:5
      tokio::runtime::coop::budget
             at /home/will/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.37.0/src/runtime/coop.rs:73:5
      tokio::runtime::scheduler::multi_thread::worker::Context::run_task
             at /home/will/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.37.0/src/runtime/scheduler/multi_thread/worker.rs:575:9
  76: tokio::runtime::scheduler::multi_thread::worker::Context::run
             at /home/will/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.37.0/src/runtime/scheduler/multi_thread/worker.rs:526:24
  77: tokio::runtime::scheduler::multi_thread::worker::run::{{closure}}::{{closure}}
             at /home/will/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.37.0/src/runtime/scheduler/multi_thread/worker.rs:491:21
  78: tokio::runtime::context::scoped::Scoped<T>::set
             at /home/will/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.37.0/src/runtime/context/scoped.rs:40:9
  79: tokio::runtime::context::set_scheduler::{{closure}}
             at /home/will/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.37.0/src/runtime/context.rs:176:26
  80: std::thread::local::LocalKey<T>::try_with
             at /rustc/9b00956e56009bab2aa15d7bff10916599e3d6d6/library/std/src/thread/local.rs:284:16
  81: std::thread::local::LocalKey<T>::with
             at /rustc/9b00956e56009bab2aa15d7bff10916599e3d6d6/library/std/src/thread/local.rs:260:9
  82: tokio::runtime::context::set_scheduler
             at /home/will/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.37.0/src/runtime/context.rs:176:9
  83: tokio::runtime::scheduler::multi_thread::worker::run::{{closure}}
             at /home/will/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.37.0/src/runtime/scheduler/multi_thread/worker.rs:486:9
  84: tokio::runtime::context::runtime::enter_runtime
             at /home/will/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.37.0/src/runtime/context/runtime.rs:65:16
  85: tokio::runtime::scheduler::multi_thread::worker::run
             at /home/will/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.37.0/src/runtime/scheduler/multi_thread/worker.rs:478:5
  86: tokio::runtime::scheduler::multi_thread::worker::Launch::launch::{{closure}}
             at /home/will/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.37.0/src/runtime/scheduler/multi_thread/worker.rs:447:45
  87: <tokio::runtime::blocking::task::BlockingTask<T> as core::future::future::Future>::poll
             at /home/will/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.37.0/src/runtime/blocking/task.rs:42:21
  88: tokio::runtime::task::core::Core<T,S>::poll::{{closure}}
             at /home/will/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.37.0/src/runtime/task/core.rs:328:17
  89: tokio::loom::std::unsafe_cell::UnsafeCell<T>::with_mut
             at /home/will/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.37.0/src/loom/std/unsafe_cell.rs:16:9
      tokio::runtime::task::core::Core<T,S>::poll
             at /home/will/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.37.0/src/runtime/task/core.rs:317:13
  90: tokio::runtime::task::harness::poll_future::{{closure}}
             at /home/will/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.37.0/src/runtime/task/harness.rs:485:19
  91: <core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once
             at /rustc/9b00956e56009bab2aa15d7bff10916599e3d6d6/library/core/src/panic/unwind_safe.rs:272:9
  92: std::panicking::try::do_call
             at /rustc/9b00956e56009bab2aa15d7bff10916599e3d6d6/library/std/src/panicking.rs:552:40
  93: __rust_try
  94: std::panicking::try
             at /rustc/9b00956e56009bab2aa15d7bff10916599e3d6d6/library/std/src/panicking.rs:516:19
  95: std::panic::catch_unwind
             at /rustc/9b00956e56009bab2aa15d7bff10916599e3d6d6/library/std/src/panic.rs:146:14
  96: tokio::runtime::task::harness::poll_future
             at /home/will/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.37.0/src/runtime/task/harness.rs:473:18
  97: tokio::runtime::task::harness::Harness<T,S>::poll_inner
             at /home/will/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.37.0/src/runtime/task/harness.rs:208:27
  98: tokio::runtime::task::harness::Harness<T,S>::poll
             at /home/will/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.37.0/src/runtime/task/harness.rs:153:15
  99: tokio::runtime::task::raw::poll
             at /home/will/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.37.0/src/runtime/task/raw.rs:271:5
 100: tokio::runtime::task::raw::RawTask::poll
             at /home/will/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.37.0/src/runtime/task/raw.rs:201:18
 101: tokio::runtime::task::UnownedTask<S>::run
             at /home/will/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.37.0/src/runtime/task/mod.rs:464:9
 102: tokio::runtime::blocking::pool::Task::run
             at /home/will/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.37.0/src/runtime/blocking/pool.rs:159:9
 103: tokio::runtime::blocking::pool::Inner::run
             at /home/will/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.37.0/src/runtime/blocking/pool.rs:513:17
 104: tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}}
             at /home/will/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.37.0/src/runtime/blocking/pool.rs:471:13
 105: std::sys_common::backtrace::__rust_begin_short_backtrace
             at /rustc/9b00956e56009bab2aa15d7bff10916599e3d6d6/library/std/src/sys_common/backtrace.rs:155:18
 106: std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}}
             at /rustc/9b00956e56009bab2aa15d7bff10916599e3d6d6/library/std/src/thread/mod.rs:528:17
 107: <core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once
             at /rustc/9b00956e56009bab2aa15d7bff10916599e3d6d6/library/core/src/panic/unwind_safe.rs:272:9
 108: std::panicking::try::do_call
             at /rustc/9b00956e56009bab2aa15d7bff10916599e3d6d6/library/std/src/panicking.rs:552:40
 109: __rust_try
 110: std::panicking::try
             at /rustc/9b00956e56009bab2aa15d7bff10916599e3d6d6/library/std/src/panicking.rs:516:19
 111: std::panic::catch_unwind
             at /rustc/9b00956e56009bab2aa15d7bff10916599e3d6d6/library/std/src/panic.rs:146:14
      std::thread::Builder::spawn_unchecked_::{{closure}}
             at /rustc/9b00956e56009bab2aa15d7bff10916599e3d6d6/library/std/src/thread/mod.rs:527:30
 112: core::ops::function::FnOnce::call_once{{vtable.shim}}
             at /rustc/9b00956e56009bab2aa15d7bff10916599e3d6d6/library/core/src/ops/function.rs:250:5
 113: <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once
             at /rustc/9b00956e56009bab2aa15d7bff10916599e3d6d6/library/alloc/src/boxed.rs:2020:9
      <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once
             at /rustc/9b00956e56009bab2aa15d7bff10916599e3d6d6/library/alloc/src/boxed.rs:2020:9
      std::sys::pal::unix::thread::Thread::new::thread_start
             at /rustc/9b00956e56009bab2aa15d7bff10916599e3d6d6/library/std/src/sys/pal/unix/thread.rs:108:17
 114: start_thread
 115: __GI___clone3

