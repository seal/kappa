[2m2024-05-18T14:28:36.817858Z[0m [32m INFO[0m [2mkappa[0m[2m:[0m Starting listener on port 3000
[2m2024-05-18T14:28:37.431036Z[0m [32m INFO[0m [2mkappa::routes::middleware[0m[2m:[0m api key e1f11936-2004-46ee-b310-84ddb8fb8d14
[2m2024-05-18T14:28:37.432617Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT * FROM \"user\" â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  *\nFROM\n  \"user\"\nWHERE\n  api_key = $1\n" [3mrows_affected[0m[2m=[0m0 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m757.243Âµs [3melapsed_secs[0m[2m=[0m0.000757243
[2m2024-05-18T14:28:37.470260Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT * FROM container â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  *\nFROM\n  container\nWHERE\n  user_id = $1\n" [3mrows_affected[0m[2m=[0m1 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m527.702Âµs [3melapsed_secs[0m[2m=[0m0.000527702
[2m2024-05-18T14:28:37.680338Z[0m [32m INFO[0m [2mkappa::routes::middleware[0m[2m:[0m api key e1f11936-2004-46ee-b310-84ddb8fb8d14
[2m2024-05-18T14:28:37.681469Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT * FROM \"user\" â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  *\nFROM\n  \"user\"\nWHERE\n  api_key = $1\n" [3mrows_affected[0m[2m=[0m0 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m312.181Âµs [3melapsed_secs[0m[2m=[0m0.000312181
[2m2024-05-18T14:28:37.682784Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT * FROM container â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  *\nFROM\n  container\nWHERE\n  container_id = $1\n  AND user_id = $2\n" [3mrows_affected[0m[2m=[0m0 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m400.782Âµs [3melapsed_secs[0m[2m=[0m0.000400782
[2m2024-05-18T14:28:37.715661Z[0m [35mTRACE[0m [1mtrigger_container[0m[1m{[0m[3mpool[0m[2m=[0mPool { size: 2, num_idle: 1, is_closed: false, options: PoolOptions { max_connections: 5, min_connections: 0, connect_timeout: 3s, max_lifetime: Some(1800s), idle_timeout: Some(600s), test_before_acquire: true } } [3mcontainer[0m[2m=[0mContainer { container_id: 4caf4052-c68e-4813-82c0-ecd211beeb76, language: "go", user_id: Some(1990720b-0ba6-4c3f-9a3c-8be8ef391fe3), port: Some(5000) } [3mmethod[0m[2m=[0mPOST [3mquery[0m[2m=[0mRawQuery(Some("container_id=4caf4052-c68e-4813-82c0-ecd211beeb76")) [3mheader_map[0m[2m=[0m{"host": "localhost:3000", "user-agent": "Go-http-client/1.1", "content-length": "0", "api-key": "e1f11936-2004-46ee-b310-84ddb8fb8d14", "container": "4caf4052-c68e-4813-82c0-ecd211beeb76", "content-type": "application/json", "accept-encoding": "gzip"} [3mbody[0m[2m=[0mb""[1m}[0m[2m:[0m [2mhyper_util::client::legacy::pool[0m[2m:[0m checkout waiting for idle connection: ("http", 127.0.0.1:5000)
[2m2024-05-18T14:28:37.715722Z[0m [35mTRACE[0m [1mtrigger_container[0m[1m{[0m[3mpool[0m[2m=[0mPool { size: 2, num_idle: 1, is_closed: false, options: PoolOptions { max_connections: 5, min_connections: 0, connect_timeout: 3s, max_lifetime: Some(1800s), idle_timeout: Some(600s), test_before_acquire: true } } [3mcontainer[0m[2m=[0mContainer { container_id: 4caf4052-c68e-4813-82c0-ecd211beeb76, language: "go", user_id: Some(1990720b-0ba6-4c3f-9a3c-8be8ef391fe3), port: Some(5000) } [3mmethod[0m[2m=[0mPOST [3mquery[0m[2m=[0mRawQuery(Some("container_id=4caf4052-c68e-4813-82c0-ecd211beeb76")) [3mheader_map[0m[2m=[0m{"host": "localhost:3000", "user-agent": "Go-http-client/1.1", "content-length": "0", "api-key": "e1f11936-2004-46ee-b310-84ddb8fb8d14", "container": "4caf4052-c68e-4813-82c0-ecd211beeb76", "content-type": "application/json", "accept-encoding": "gzip"} [3mbody[0m[2m=[0mb""[1m}[0m[2m:[0m [2mhyper_util::client::legacy::connect::http[0m[2m:[0m Http::connect; scheme=Some("http"), host=Some("127.0.0.1"), port=Some(Port(5000))
[2m2024-05-18T14:28:37.715784Z[0m [34mDEBUG[0m [1mtrigger_container[0m[1m{[0m[3mpool[0m[2m=[0mPool { size: 2, num_idle: 1, is_closed: false, options: PoolOptions { max_connections: 5, min_connections: 0, connect_timeout: 3s, max_lifetime: Some(1800s), idle_timeout: Some(600s), test_before_acquire: true } } [3mcontainer[0m[2m=[0mContainer { container_id: 4caf4052-c68e-4813-82c0-ecd211beeb76, language: "go", user_id: Some(1990720b-0ba6-4c3f-9a3c-8be8ef391fe3), port: Some(5000) } [3mmethod[0m[2m=[0mPOST [3mquery[0m[2m=[0mRawQuery(Some("container_id=4caf4052-c68e-4813-82c0-ecd211beeb76")) [3mheader_map[0m[2m=[0m{"host": "localhost:3000", "user-agent": "Go-http-client/1.1", "content-length": "0", "api-key": "e1f11936-2004-46ee-b310-84ddb8fb8d14", "container": "4caf4052-c68e-4813-82c0-ecd211beeb76", "content-type": "application/json", "accept-encoding": "gzip"} [3mbody[0m[2m=[0mb""[1m}[0m[2m:[0m [2mhyper_util::client::legacy::connect::http[0m[2m:[0m connecting to 127.0.0.1:5000
[2m2024-05-18T14:28:37.715974Z[0m [34mDEBUG[0m [1mtrigger_container[0m[1m{[0m[3mpool[0m[2m=[0mPool { size: 2, num_idle: 1, is_closed: false, options: PoolOptions { max_connections: 5, min_connections: 0, connect_timeout: 3s, max_lifetime: Some(1800s), idle_timeout: Some(600s), test_before_acquire: true } } [3mcontainer[0m[2m=[0mContainer { container_id: 4caf4052-c68e-4813-82c0-ecd211beeb76, language: "go", user_id: Some(1990720b-0ba6-4c3f-9a3c-8be8ef391fe3), port: Some(5000) } [3mmethod[0m[2m=[0mPOST [3mquery[0m[2m=[0mRawQuery(Some("container_id=4caf4052-c68e-4813-82c0-ecd211beeb76")) [3mheader_map[0m[2m=[0m{"host": "localhost:3000", "user-agent": "Go-http-client/1.1", "content-length": "0", "api-key": "e1f11936-2004-46ee-b310-84ddb8fb8d14", "container": "4caf4052-c68e-4813-82c0-ecd211beeb76", "content-type": "application/json", "accept-encoding": "gzip"} [3mbody[0m[2m=[0mb""[1m}[0m[2m:[0m [2mhyper_util::client::legacy::connect::http[0m[2m:[0m connected to 127.0.0.1:5000
[2m2024-05-18T14:28:37.716024Z[0m [35mTRACE[0m [1mtrigger_container[0m[1m{[0m[3mpool[0m[2m=[0mPool { size: 2, num_idle: 1, is_closed: false, options: PoolOptions { max_connections: 5, min_connections: 0, connect_timeout: 3s, max_lifetime: Some(1800s), idle_timeout: Some(600s), test_before_acquire: true } } [3mcontainer[0m[2m=[0mContainer { container_id: 4caf4052-c68e-4813-82c0-ecd211beeb76, language: "go", user_id: Some(1990720b-0ba6-4c3f-9a3c-8be8ef391fe3), port: Some(5000) } [3mmethod[0m[2m=[0mPOST [3mquery[0m[2m=[0mRawQuery(Some("container_id=4caf4052-c68e-4813-82c0-ecd211beeb76")) [3mheader_map[0m[2m=[0m{"host": "localhost:3000", "user-agent": "Go-http-client/1.1", "content-length": "0", "api-key": "e1f11936-2004-46ee-b310-84ddb8fb8d14", "container": "4caf4052-c68e-4813-82c0-ecd211beeb76", "content-type": "application/json", "accept-encoding": "gzip"} [3mbody[0m[2m=[0mb""[1m}[0m[2m:[0m [2mhyper_util::client::legacy::client[0m[2m:[0m http1 handshake complete, spawning background dispatcher task
[2m2024-05-18T14:28:37.716107Z[0m [35mTRACE[0m [1mtrigger_container[0m[1m{[0m[3mpool[0m[2m=[0mPool { size: 2, num_idle: 1, is_closed: false, options: PoolOptions { max_connections: 5, min_connections: 0, connect_timeout: 3s, max_lifetime: Some(1800s), idle_timeout: Some(600s), test_before_acquire: true } } [3mcontainer[0m[2m=[0mContainer { container_id: 4caf4052-c68e-4813-82c0-ecd211beeb76, language: "go", user_id: Some(1990720b-0ba6-4c3f-9a3c-8be8ef391fe3), port: Some(5000) } [3mmethod[0m[2m=[0mPOST [3mquery[0m[2m=[0mRawQuery(Some("container_id=4caf4052-c68e-4813-82c0-ecd211beeb76")) [3mheader_map[0m[2m=[0m{"host": "localhost:3000", "user-agent": "Go-http-client/1.1", "content-length": "0", "api-key": "e1f11936-2004-46ee-b310-84ddb8fb8d14", "container": "4caf4052-c68e-4813-82c0-ecd211beeb76", "content-type": "application/json", "accept-encoding": "gzip"} [3mbody[0m[2m=[0mb""[1m}[0m[2m:[0m [2mhyper_util::client::legacy::pool[0m[2m:[0m checkout dropped for ("http", 127.0.0.1:5000)
[2m2024-05-18T14:28:37.716434Z[0m [35mTRACE[0m [1mtrigger_container[0m[1m{[0m[3mpool[0m[2m=[0mPool { size: 2, num_idle: 1, is_closed: false, options: PoolOptions { max_connections: 5, min_connections: 0, connect_timeout: 3s, max_lifetime: Some(1800s), idle_timeout: Some(600s), test_before_acquire: true } } [3mcontainer[0m[2m=[0mContainer { container_id: 4caf4052-c68e-4813-82c0-ecd211beeb76, language: "go", user_id: Some(1990720b-0ba6-4c3f-9a3c-8be8ef391fe3), port: Some(5000) } [3mmethod[0m[2m=[0mPOST [3mquery[0m[2m=[0mRawQuery(Some("container_id=4caf4052-c68e-4813-82c0-ecd211beeb76")) [3mheader_map[0m[2m=[0m{"host": "localhost:3000", "user-agent": "Go-http-client/1.1", "content-length": "0", "api-key": "e1f11936-2004-46ee-b310-84ddb8fb8d14", "container": "4caf4052-c68e-4813-82c0-ecd211beeb76", "content-type": "application/json", "accept-encoding": "gzip"} [3mbody[0m[2m=[0mb""[1m}[0m[2m:[0m [2mhyper_util::client::legacy::pool[0m[2m:[0m put; add idle connection for ("http", 127.0.0.1:5000)
[2m2024-05-18T14:28:37.716493Z[0m [34mDEBUG[0m [1mtrigger_container[0m[1m{[0m[3mpool[0m[2m=[0mPool { size: 2, num_idle: 1, is_closed: false, options: PoolOptions { max_connections: 5, min_connections: 0, connect_timeout: 3s, max_lifetime: Some(1800s), idle_timeout: Some(600s), test_before_acquire: true } } [3mcontainer[0m[2m=[0mContainer { container_id: 4caf4052-c68e-4813-82c0-ecd211beeb76, language: "go", user_id: Some(1990720b-0ba6-4c3f-9a3c-8be8ef391fe3), port: Some(5000) } [3mmethod[0m[2m=[0mPOST [3mquery[0m[2m=[0mRawQuery(Some("container_id=4caf4052-c68e-4813-82c0-ecd211beeb76")) [3mheader_map[0m[2m=[0m{"host": "localhost:3000", "user-agent": "Go-http-client/1.1", "content-length": "0", "api-key": "e1f11936-2004-46ee-b310-84ddb8fb8d14", "container": "4caf4052-c68e-4813-82c0-ecd211beeb76", "content-type": "application/json", "accept-encoding": "gzip"} [3mbody[0m[2m=[0mb""[1m}[0m[2m:[0m [2mhyper_util::client::legacy::pool[0m[2m:[0m pooling idle connection for ("http", 127.0.0.1:5000)
[2m2024-05-18T14:28:37.716540Z[0m [32m INFO[0m [1mtrigger_container[0m[1m{[0m[3mpool[0m[2m=[0mPool { size: 2, num_idle: 1, is_closed: false, options: PoolOptions { max_connections: 5, min_connections: 0, connect_timeout: 3s, max_lifetime: Some(1800s), idle_timeout: Some(600s), test_before_acquire: true } } [3mcontainer[0m[2m=[0mContainer { container_id: 4caf4052-c68e-4813-82c0-ecd211beeb76, language: "go", user_id: Some(1990720b-0ba6-4c3f-9a3c-8be8ef391fe3), port: Some(5000) } [3mmethod[0m[2m=[0mPOST [3mquery[0m[2m=[0mRawQuery(Some("container_id=4caf4052-c68e-4813-82c0-ecd211beeb76")) [3mheader_map[0m[2m=[0m{"host": "localhost:3000", "user-agent": "Go-http-client/1.1", "content-length": "0", "api-key": "e1f11936-2004-46ee-b310-84ddb8fb8d14", "container": "4caf4052-c68e-4813-82c0-ecd211beeb76", "content-type": "application/json", "accept-encoding": "gzip"} [3mbody[0m[2m=[0mb""[1m}[0m[2m:[0m [2mkappa::routes::containers[0m[2m:[0m Fianl URL http://127.0.0.1:5000/
