[2m2024-05-18T13:44:37.628638Z[0m [32m INFO[0m [2mkappa[0m[2m:[0m Starting listener on port 3000
[2m2024-05-18T13:44:41.379127Z[0m [32m INFO[0m [2mkappa::routes::middleware[0m[2m:[0m api key e1f11936-2004-46ee-b310-84ddb8fb8d14
[2m2024-05-18T13:44:41.380707Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT * FROM \"user\" â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  *\nFROM\n  \"user\"\nWHERE\n  api_key = $1\n" [3mrows_affected[0m[2m=[0m0 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m793.903Âµs [3melapsed_secs[0m[2m=[0m0.000793903
[2m2024-05-18T13:44:41.418821Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT * FROM container â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  *\nFROM\n  container\nWHERE\n  user_id = $1\n" [3mrows_affected[0m[2m=[0m1 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m539.942Âµs [3melapsed_secs[0m[2m=[0m0.000539942
[2m2024-05-18T13:44:42.423308Z[0m [32m INFO[0m [2mkappa::routes::middleware[0m[2m:[0m api key e1f11936-2004-46ee-b310-84ddb8fb8d14
[2m2024-05-18T13:44:42.424300Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT * FROM \"user\" â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  *\nFROM\n  \"user\"\nWHERE\n  api_key = $1\n" [3mrows_affected[0m[2m=[0m0 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m272.191Âµs [3melapsed_secs[0m[2m=[0m0.000272191
[2m2024-05-18T13:44:42.425501Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT * FROM container â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  *\nFROM\n  container\nWHERE\n  container_id = $1\n  AND user_id = $2\n" [3mrows_affected[0m[2m=[0m0 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m386.651Âµs [3melapsed_secs[0m[2m=[0m0.000386651
[2m2024-05-18T13:44:42.458549Z[0m [35mTRACE[0m [1mtrigger_container[0m[1m{[0m[3mpool[0m[2m=[0mPool { size: 2, num_idle: 1, is_closed: false, options: PoolOptions { max_connections: 5, min_connections: 0, connect_timeout: 3s, max_lifetime: Some(1800s), idle_timeout: Some(600s), test_before_acquire: true } } [3mcontainer[0m[2m=[0mContainer { container_id: 066ad216-b34d-4fb0-9aeb-0308b5ca9ccb, language: "go", user_id: Some(1990720b-0ba6-4c3f-9a3c-8be8ef391fe3), port: Some(5000) } [3mmethod[0m[2m=[0mPOST [3mquery[0m[2m=[0mRawQuery(Some("container_id=066ad216-b34d-4fb0-9aeb-0308b5ca9ccb")) [3mheader_map[0m[2m=[0m{"host": "localhost:3000", "user-agent": "Go-http-client/1.1", "content-length": "0", "api-key": "e1f11936-2004-46ee-b310-84ddb8fb8d14", "container": "066ad216-b34d-4fb0-9aeb-0308b5ca9ccb", "content-type": "application/json", "accept-encoding": "gzip"} [3mbody[0m[2m=[0mb""[1m}[0m[2m:[0m [2mhyper_util::client::legacy::pool[0m[2m:[0m checkout waiting for idle connection: ("http", 127.0.0.1:5000)
[2m2024-05-18T13:44:42.458611Z[0m [35mTRACE[0m [1mtrigger_container[0m[1m{[0m[3mpool[0m[2m=[0mPool { size: 2, num_idle: 1, is_closed: false, options: PoolOptions { max_connections: 5, min_connections: 0, connect_timeout: 3s, max_lifetime: Some(1800s), idle_timeout: Some(600s), test_before_acquire: true } } [3mcontainer[0m[2m=[0mContainer { container_id: 066ad216-b34d-4fb0-9aeb-0308b5ca9ccb, language: "go", user_id: Some(1990720b-0ba6-4c3f-9a3c-8be8ef391fe3), port: Some(5000) } [3mmethod[0m[2m=[0mPOST [3mquery[0m[2m=[0mRawQuery(Some("container_id=066ad216-b34d-4fb0-9aeb-0308b5ca9ccb")) [3mheader_map[0m[2m=[0m{"host": "localhost:3000", "user-agent": "Go-http-client/1.1", "content-length": "0", "api-key": "e1f11936-2004-46ee-b310-84ddb8fb8d14", "container": "066ad216-b34d-4fb0-9aeb-0308b5ca9ccb", "content-type": "application/json", "accept-encoding": "gzip"} [3mbody[0m[2m=[0mb""[1m}[0m[2m:[0m [2mhyper_util::client::legacy::connect::http[0m[2m:[0m Http::connect; scheme=Some("http"), host=Some("127.0.0.1"), port=Some(Port(5000))
[2m2024-05-18T13:44:42.458662Z[0m [34mDEBUG[0m [1mtrigger_container[0m[1m{[0m[3mpool[0m[2m=[0mPool { size: 2, num_idle: 1, is_closed: false, options: PoolOptions { max_connections: 5, min_connections: 0, connect_timeout: 3s, max_lifetime: Some(1800s), idle_timeout: Some(600s), test_before_acquire: true } } [3mcontainer[0m[2m=[0mContainer { container_id: 066ad216-b34d-4fb0-9aeb-0308b5ca9ccb, language: "go", user_id: Some(1990720b-0ba6-4c3f-9a3c-8be8ef391fe3), port: Some(5000) } [3mmethod[0m[2m=[0mPOST [3mquery[0m[2m=[0mRawQuery(Some("container_id=066ad216-b34d-4fb0-9aeb-0308b5ca9ccb")) [3mheader_map[0m[2m=[0m{"host": "localhost:3000", "user-agent": "Go-http-client/1.1", "content-length": "0", "api-key": "e1f11936-2004-46ee-b310-84ddb8fb8d14", "container": "066ad216-b34d-4fb0-9aeb-0308b5ca9ccb", "content-type": "application/json", "accept-encoding": "gzip"} [3mbody[0m[2m=[0mb""[1m}[0m[2m:[0m [2mhyper_util::client::legacy::connect::http[0m[2m:[0m connecting to 127.0.0.1:5000
[2m2024-05-18T13:44:42.458891Z[0m [34mDEBUG[0m [1mtrigger_container[0m[1m{[0m[3mpool[0m[2m=[0mPool { size: 2, num_idle: 1, is_closed: false, options: PoolOptions { max_connections: 5, min_connections: 0, connect_timeout: 3s, max_lifetime: Some(1800s), idle_timeout: Some(600s), test_before_acquire: true } } [3mcontainer[0m[2m=[0mContainer { container_id: 066ad216-b34d-4fb0-9aeb-0308b5ca9ccb, language: "go", user_id: Some(1990720b-0ba6-4c3f-9a3c-8be8ef391fe3), port: Some(5000) } [3mmethod[0m[2m=[0mPOST [3mquery[0m[2m=[0mRawQuery(Some("container_id=066ad216-b34d-4fb0-9aeb-0308b5ca9ccb")) [3mheader_map[0m[2m=[0m{"host": "localhost:3000", "user-agent": "Go-http-client/1.1", "content-length": "0", "api-key": "e1f11936-2004-46ee-b310-84ddb8fb8d14", "container": "066ad216-b34d-4fb0-9aeb-0308b5ca9ccb", "content-type": "application/json", "accept-encoding": "gzip"} [3mbody[0m[2m=[0mb""[1m}[0m[2m:[0m [2mhyper_util::client::legacy::connect::http[0m[2m:[0m connected to 127.0.0.1:5000
[2m2024-05-18T13:44:42.458956Z[0m [35mTRACE[0m [1mtrigger_container[0m[1m{[0m[3mpool[0m[2m=[0mPool { size: 2, num_idle: 1, is_closed: false, options: PoolOptions { max_connections: 5, min_connections: 0, connect_timeout: 3s, max_lifetime: Some(1800s), idle_timeout: Some(600s), test_before_acquire: true } } [3mcontainer[0m[2m=[0mContainer { container_id: 066ad216-b34d-4fb0-9aeb-0308b5ca9ccb, language: "go", user_id: Some(1990720b-0ba6-4c3f-9a3c-8be8ef391fe3), port: Some(5000) } [3mmethod[0m[2m=[0mPOST [3mquery[0m[2m=[0mRawQuery(Some("container_id=066ad216-b34d-4fb0-9aeb-0308b5ca9ccb")) [3mheader_map[0m[2m=[0m{"host": "localhost:3000", "user-agent": "Go-http-client/1.1", "content-length": "0", "api-key": "e1f11936-2004-46ee-b310-84ddb8fb8d14", "container": "066ad216-b34d-4fb0-9aeb-0308b5ca9ccb", "content-type": "application/json", "accept-encoding": "gzip"} [3mbody[0m[2m=[0mb""[1m}[0m[2m:[0m [2mhyper_util::client::legacy::client[0m[2m:[0m http1 handshake complete, spawning background dispatcher task
[2m2024-05-18T13:44:42.459059Z[0m [35mTRACE[0m [1mtrigger_container[0m[1m{[0m[3mpool[0m[2m=[0mPool { size: 2, num_idle: 1, is_closed: false, options: PoolOptions { max_connections: 5, min_connections: 0, connect_timeout: 3s, max_lifetime: Some(1800s), idle_timeout: Some(600s), test_before_acquire: true } } [3mcontainer[0m[2m=[0mContainer { container_id: 066ad216-b34d-4fb0-9aeb-0308b5ca9ccb, language: "go", user_id: Some(1990720b-0ba6-4c3f-9a3c-8be8ef391fe3), port: Some(5000) } [3mmethod[0m[2m=[0mPOST [3mquery[0m[2m=[0mRawQuery(Some("container_id=066ad216-b34d-4fb0-9aeb-0308b5ca9ccb")) [3mheader_map[0m[2m=[0m{"host": "localhost:3000", "user-agent": "Go-http-client/1.1", "content-length": "0", "api-key": "e1f11936-2004-46ee-b310-84ddb8fb8d14", "container": "066ad216-b34d-4fb0-9aeb-0308b5ca9ccb", "content-type": "application/json", "accept-encoding": "gzip"} [3mbody[0m[2m=[0mb""[1m}[0m[2m:[0m [2mhyper_util::client::legacy::pool[0m[2m:[0m checkout dropped for ("http", 127.0.0.1:5000)
[2m2024-05-18T13:44:42.459987Z[0m [35mTRACE[0m [1mtrigger_container[0m[1m{[0m[3mpool[0m[2m=[0mPool { size: 2, num_idle: 1, is_closed: false, options: PoolOptions { max_connections: 5, min_connections: 0, connect_timeout: 3s, max_lifetime: Some(1800s), idle_timeout: Some(600s), test_before_acquire: true } } [3mcontainer[0m[2m=[0mContainer { container_id: 066ad216-b34d-4fb0-9aeb-0308b5ca9ccb, language: "go", user_id: Some(1990720b-0ba6-4c3f-9a3c-8be8ef391fe3), port: Some(5000) } [3mmethod[0m[2m=[0mPOST [3mquery[0m[2m=[0mRawQuery(Some("container_id=066ad216-b34d-4fb0-9aeb-0308b5ca9ccb")) [3mheader_map[0m[2m=[0m{"host": "localhost:3000", "user-agent": "Go-http-client/1.1", "content-length": "0", "api-key": "e1f11936-2004-46ee-b310-84ddb8fb8d14", "container": "066ad216-b34d-4fb0-9aeb-0308b5ca9ccb", "content-type": "application/json", "accept-encoding": "gzip"} [3mbody[0m[2m=[0mb""[1m}[0m[2m:[0m [2mhyper_util::client::legacy::pool[0m[2m:[0m put; add idle connection for ("http", 127.0.0.1:5000)
[2m2024-05-18T13:44:42.460041Z[0m [34mDEBUG[0m [1mtrigger_container[0m[1m{[0m[3mpool[0m[2m=[0mPool { size: 2, num_idle: 1, is_closed: false, options: PoolOptions { max_connections: 5, min_connections: 0, connect_timeout: 3s, max_lifetime: Some(1800s), idle_timeout: Some(600s), test_before_acquire: true } } [3mcontainer[0m[2m=[0mContainer { container_id: 066ad216-b34d-4fb0-9aeb-0308b5ca9ccb, language: "go", user_id: Some(1990720b-0ba6-4c3f-9a3c-8be8ef391fe3), port: Some(5000) } [3mmethod[0m[2m=[0mPOST [3mquery[0m[2m=[0mRawQuery(Some("container_id=066ad216-b34d-4fb0-9aeb-0308b5ca9ccb")) [3mheader_map[0m[2m=[0m{"host": "localhost:3000", "user-agent": "Go-http-client/1.1", "content-length": "0", "api-key": "e1f11936-2004-46ee-b310-84ddb8fb8d14", "container": "066ad216-b34d-4fb0-9aeb-0308b5ca9ccb", "content-type": "application/json", "accept-encoding": "gzip"} [3mbody[0m[2m=[0mb""[1m}[0m[2m:[0m [2mhyper_util::client::legacy::pool[0m[2m:[0m pooling idle connection for ("http", 127.0.0.1:5000)
[2m2024-05-18T13:44:43.650880Z[0m [32m INFO[0m [2mkappa::routes::middleware[0m[2m:[0m api key e1f11936-2004-46ee-b310-84ddb8fb8d14
[2m2024-05-18T13:44:43.651842Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT * FROM \"user\" â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  *\nFROM\n  \"user\"\nWHERE\n  api_key = $1\n" [3mrows_affected[0m[2m=[0m0 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m244.141Âµs [3melapsed_secs[0m[2m=[0m0.000244141
[2m2024-05-18T13:44:43.652782Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT * FROM container â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  *\nFROM\n  container\nWHERE\n  user_id = $1\n" [3mrows_affected[0m[2m=[0m1 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m195.411Âµs [3melapsed_secs[0m[2m=[0m0.000195411
[2m2024-05-18T13:44:44.291351Z[0m [32m INFO[0m [2mkappa::routes::middleware[0m[2m:[0m api key e1f11936-2004-46ee-b310-84ddb8fb8d14
[2m2024-05-18T13:44:44.292348Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT * FROM \"user\" â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  *\nFROM\n  \"user\"\nWHERE\n  api_key = $1\n" [3mrows_affected[0m[2m=[0m0 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m263.441Âµs [3melapsed_secs[0m[2m=[0m0.000263441
[2m2024-05-18T13:44:44.293617Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT * FROM container â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  *\nFROM\n  container\nWHERE\n  container_id = $1\n  AND user_id = $2\n" [3mrows_affected[0m[2m=[0m0 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m212.86Âµs [3melapsed_secs[0m[2m=[0m0.00021286
[2m2024-05-18T13:44:44.324744Z[0m [35mTRACE[0m [1mtrigger_container[0m[1m{[0m[3mpool[0m[2m=[0mPool { size: 2, num_idle: 1, is_closed: false, options: PoolOptions { max_connections: 5, min_connections: 0, connect_timeout: 3s, max_lifetime: Some(1800s), idle_timeout: Some(600s), test_before_acquire: true } } [3mcontainer[0m[2m=[0mContainer { container_id: 066ad216-b34d-4fb0-9aeb-0308b5ca9ccb, language: "go", user_id: Some(1990720b-0ba6-4c3f-9a3c-8be8ef391fe3), port: Some(5000) } [3mmethod[0m[2m=[0mPOST [3mquery[0m[2m=[0mRawQuery(Some("container_id=066ad216-b34d-4fb0-9aeb-0308b5ca9ccb")) [3mheader_map[0m[2m=[0m{"host": "localhost:3000", "user-agent": "Go-http-client/1.1", "content-length": "0", "api-key": "e1f11936-2004-46ee-b310-84ddb8fb8d14", "container": "066ad216-b34d-4fb0-9aeb-0308b5ca9ccb", "content-type": "application/json", "accept-encoding": "gzip"} [3mbody[0m[2m=[0mb""[1m}[0m[2m:[0m [2mhyper_util::client::legacy::pool[0m[2m:[0m checkout waiting for idle connection: ("http", 127.0.0.1:5000)
[2m2024-05-18T13:44:44.324806Z[0m [35mTRACE[0m [1mtrigger_container[0m[1m{[0m[3mpool[0m[2m=[0mPool { size: 2, num_idle: 1, is_closed: false, options: PoolOptions { max_connections: 5, min_connections: 0, connect_timeout: 3s, max_lifetime: Some(1800s), idle_timeout: Some(600s), test_before_acquire: true } } [3mcontainer[0m[2m=[0mContainer { container_id: 066ad216-b34d-4fb0-9aeb-0308b5ca9ccb, language: "go", user_id: Some(1990720b-0ba6-4c3f-9a3c-8be8ef391fe3), port: Some(5000) } [3mmethod[0m[2m=[0mPOST [3mquery[0m[2m=[0mRawQuery(Some("container_id=066ad216-b34d-4fb0-9aeb-0308b5ca9ccb")) [3mheader_map[0m[2m=[0m{"host": "localhost:3000", "user-agent": "Go-http-client/1.1", "content-length": "0", "api-key": "e1f11936-2004-46ee-b310-84ddb8fb8d14", "container": "066ad216-b34d-4fb0-9aeb-0308b5ca9ccb", "content-type": "application/json", "accept-encoding": "gzip"} [3mbody[0m[2m=[0mb""[1m}[0m[2m:[0m [2mhyper_util::client::legacy::connect::http[0m[2m:[0m Http::connect; scheme=Some("http"), host=Some("127.0.0.1"), port=Some(Port(5000))
[2m2024-05-18T13:44:44.324852Z[0m [34mDEBUG[0m [1mtrigger_container[0m[1m{[0m[3mpool[0m[2m=[0mPool { size: 2, num_idle: 1, is_closed: false, options: PoolOptions { max_connections: 5, min_connections: 0, connect_timeout: 3s, max_lifetime: Some(1800s), idle_timeout: Some(600s), test_before_acquire: true } } [3mcontainer[0m[2m=[0mContainer { container_id: 066ad216-b34d-4fb0-9aeb-0308b5ca9ccb, language: "go", user_id: Some(1990720b-0ba6-4c3f-9a3c-8be8ef391fe3), port: Some(5000) } [3mmethod[0m[2m=[0mPOST [3mquery[0m[2m=[0mRawQuery(Some("container_id=066ad216-b34d-4fb0-9aeb-0308b5ca9ccb")) [3mheader_map[0m[2m=[0m{"host": "localhost:3000", "user-agent": "Go-http-client/1.1", "content-length": "0", "api-key": "e1f11936-2004-46ee-b310-84ddb8fb8d14", "container": "066ad216-b34d-4fb0-9aeb-0308b5ca9ccb", "content-type": "application/json", "accept-encoding": "gzip"} [3mbody[0m[2m=[0mb""[1m}[0m[2m:[0m [2mhyper_util::client::legacy::connect::http[0m[2m:[0m connecting to 127.0.0.1:5000
[2m2024-05-18T13:44:44.325022Z[0m [34mDEBUG[0m [1mtrigger_container[0m[1m{[0m[3mpool[0m[2m=[0mPool { size: 2, num_idle: 1, is_closed: false, options: PoolOptions { max_connections: 5, min_connections: 0, connect_timeout: 3s, max_lifetime: Some(1800s), idle_timeout: Some(600s), test_before_acquire: true } } [3mcontainer[0m[2m=[0mContainer { container_id: 066ad216-b34d-4fb0-9aeb-0308b5ca9ccb, language: "go", user_id: Some(1990720b-0ba6-4c3f-9a3c-8be8ef391fe3), port: Some(5000) } [3mmethod[0m[2m=[0mPOST [3mquery[0m[2m=[0mRawQuery(Some("container_id=066ad216-b34d-4fb0-9aeb-0308b5ca9ccb")) [3mheader_map[0m[2m=[0m{"host": "localhost:3000", "user-agent": "Go-http-client/1.1", "content-length": "0", "api-key": "e1f11936-2004-46ee-b310-84ddb8fb8d14", "container": "066ad216-b34d-4fb0-9aeb-0308b5ca9ccb", "content-type": "application/json", "accept-encoding": "gzip"} [3mbody[0m[2m=[0mb""[1m}[0m[2m:[0m [2mhyper_util::client::legacy::connect::http[0m[2m:[0m connected to 127.0.0.1:5000
[2m2024-05-18T13:44:44.325066Z[0m [35mTRACE[0m [1mtrigger_container[0m[1m{[0m[3mpool[0m[2m=[0mPool { size: 2, num_idle: 1, is_closed: false, options: PoolOptions { max_connections: 5, min_connections: 0, connect_timeout: 3s, max_lifetime: Some(1800s), idle_timeout: Some(600s), test_before_acquire: true } } [3mcontainer[0m[2m=[0mContainer { container_id: 066ad216-b34d-4fb0-9aeb-0308b5ca9ccb, language: "go", user_id: Some(1990720b-0ba6-4c3f-9a3c-8be8ef391fe3), port: Some(5000) } [3mmethod[0m[2m=[0mPOST [3mquery[0m[2m=[0mRawQuery(Some("container_id=066ad216-b34d-4fb0-9aeb-0308b5ca9ccb")) [3mheader_map[0m[2m=[0m{"host": "localhost:3000", "user-agent": "Go-http-client/1.1", "content-length": "0", "api-key": "e1f11936-2004-46ee-b310-84ddb8fb8d14", "container": "066ad216-b34d-4fb0-9aeb-0308b5ca9ccb", "content-type": "application/json", "accept-encoding": "gzip"} [3mbody[0m[2m=[0mb""[1m}[0m[2m:[0m [2mhyper_util::client::legacy::client[0m[2m:[0m http1 handshake complete, spawning background dispatcher task
[2m2024-05-18T13:44:44.325141Z[0m [35mTRACE[0m [1mtrigger_container[0m[1m{[0m[3mpool[0m[2m=[0mPool { size: 2, num_idle: 1, is_closed: false, options: PoolOptions { max_connections: 5, min_connections: 0, connect_timeout: 3s, max_lifetime: Some(1800s), idle_timeout: Some(600s), test_before_acquire: true } } [3mcontainer[0m[2m=[0mContainer { container_id: 066ad216-b34d-4fb0-9aeb-0308b5ca9ccb, language: "go", user_id: Some(1990720b-0ba6-4c3f-9a3c-8be8ef391fe3), port: Some(5000) } [3mmethod[0m[2m=[0mPOST [3mquery[0m[2m=[0mRawQuery(Some("container_id=066ad216-b34d-4fb0-9aeb-0308b5ca9ccb")) [3mheader_map[0m[2m=[0m{"host": "localhost:3000", "user-agent": "Go-http-client/1.1", "content-length": "0", "api-key": "e1f11936-2004-46ee-b310-84ddb8fb8d14", "container": "066ad216-b34d-4fb0-9aeb-0308b5ca9ccb", "content-type": "application/json", "accept-encoding": "gzip"} [3mbody[0m[2m=[0mb""[1m}[0m[2m:[0m [2mhyper_util::client::legacy::pool[0m[2m:[0m checkout dropped for ("http", 127.0.0.1:5000)
[2m2024-05-18T13:44:44.325527Z[0m [35mTRACE[0m [1mtrigger_container[0m[1m{[0m[3mpool[0m[2m=[0mPool { size: 2, num_idle: 1, is_closed: false, options: PoolOptions { max_connections: 5, min_connections: 0, connect_timeout: 3s, max_lifetime: Some(1800s), idle_timeout: Some(600s), test_before_acquire: true } } [3mcontainer[0m[2m=[0mContainer { container_id: 066ad216-b34d-4fb0-9aeb-0308b5ca9ccb, language: "go", user_id: Some(1990720b-0ba6-4c3f-9a3c-8be8ef391fe3), port: Some(5000) } [3mmethod[0m[2m=[0mPOST [3mquery[0m[2m=[0mRawQuery(Some("container_id=066ad216-b34d-4fb0-9aeb-0308b5ca9ccb")) [3mheader_map[0m[2m=[0m{"host": "localhost:3000", "user-agent": "Go-http-client/1.1", "content-length": "0", "api-key": "e1f11936-2004-46ee-b310-84ddb8fb8d14", "container": "066ad216-b34d-4fb0-9aeb-0308b5ca9ccb", "content-type": "application/json", "accept-encoding": "gzip"} [3mbody[0m[2m=[0mb""[1m}[0m[2m:[0m [2mhyper_util::client::legacy::pool[0m[2m:[0m put; add idle connection for ("http", 127.0.0.1:5000)
[2m2024-05-18T13:44:44.325577Z[0m [34mDEBUG[0m [1mtrigger_container[0m[1m{[0m[3mpool[0m[2m=[0mPool { size: 2, num_idle: 1, is_closed: false, options: PoolOptions { max_connections: 5, min_connections: 0, connect_timeout: 3s, max_lifetime: Some(1800s), idle_timeout: Some(600s), test_before_acquire: true } } [3mcontainer[0m[2m=[0mContainer { container_id: 066ad216-b34d-4fb0-9aeb-0308b5ca9ccb, language: "go", user_id: Some(1990720b-0ba6-4c3f-9a3c-8be8ef391fe3), port: Some(5000) } [3mmethod[0m[2m=[0mPOST [3mquery[0m[2m=[0mRawQuery(Some("container_id=066ad216-b34d-4fb0-9aeb-0308b5ca9ccb")) [3mheader_map[0m[2m=[0m{"host": "localhost:3000", "user-agent": "Go-http-client/1.1", "content-length": "0", "api-key": "e1f11936-2004-46ee-b310-84ddb8fb8d14", "container": "066ad216-b34d-4fb0-9aeb-0308b5ca9ccb", "content-type": "application/json", "accept-encoding": "gzip"} [3mbody[0m[2m=[0mb""[1m}[0m[2m:[0m [2mhyper_util::client::legacy::pool[0m[2m:[0m pooling idle connection for ("http", 127.0.0.1:5000)
[2m2024-05-18T13:44:44.930559Z[0m [32m INFO[0m [2mkappa::routes::middleware[0m[2m:[0m api key e1f11936-2004-46ee-b310-84ddb8fb8d14
[2m2024-05-18T13:44:44.931582Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT * FROM \"user\" â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  *\nFROM\n  \"user\"\nWHERE\n  api_key = $1\n" [3mrows_affected[0m[2m=[0m0 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m301.361Âµs [3melapsed_secs[0m[2m=[0m0.000301361
[2m2024-05-18T13:44:44.932474Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT * FROM container â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  *\nFROM\n  container\nWHERE\n  user_id = $1\n" [3mrows_affected[0m[2m=[0m1 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m206.031Âµs [3melapsed_secs[0m[2m=[0m0.000206031
[2m2024-05-18T13:44:45.381295Z[0m [32m INFO[0m [2mkappa::routes::middleware[0m[2m:[0m api key e1f11936-2004-46ee-b310-84ddb8fb8d14
[2m2024-05-18T13:44:45.382254Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT * FROM \"user\" â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  *\nFROM\n  \"user\"\nWHERE\n  api_key = $1\n" [3mrows_affected[0m[2m=[0m0 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m237.101Âµs [3melapsed_secs[0m[2m=[0m0.000237101
[2m2024-05-18T13:44:45.383262Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT * FROM container â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  *\nFROM\n  container\nWHERE\n  container_id = $1\n  AND user_id = $2\n" [3mrows_affected[0m[2m=[0m0 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m167.311Âµs [3melapsed_secs[0m[2m=[0m0.000167311
[2m2024-05-18T13:44:45.412135Z[0m [35mTRACE[0m [1mtrigger_container[0m[1m{[0m[3mpool[0m[2m=[0mPool { size: 2, num_idle: 1, is_closed: false, options: PoolOptions { max_connections: 5, min_connections: 0, connect_timeout: 3s, max_lifetime: Some(1800s), idle_timeout: Some(600s), test_before_acquire: true } } [3mcontainer[0m[2m=[0mContainer { container_id: 066ad216-b34d-4fb0-9aeb-0308b5ca9ccb, language: "go", user_id: Some(1990720b-0ba6-4c3f-9a3c-8be8ef391fe3), port: Some(5000) } [3mmethod[0m[2m=[0mPOST [3mquery[0m[2m=[0mRawQuery(Some("container_id=066ad216-b34d-4fb0-9aeb-0308b5ca9ccb")) [3mheader_map[0m[2m=[0m{"host": "localhost:3000", "user-agent": "Go-http-client/1.1", "content-length": "0", "api-key": "e1f11936-2004-46ee-b310-84ddb8fb8d14", "container": "066ad216-b34d-4fb0-9aeb-0308b5ca9ccb", "content-type": "application/json", "accept-encoding": "gzip"} [3mbody[0m[2m=[0mb""[1m}[0m[2m:[0m [2mhyper_util::client::legacy::pool[0m[2m:[0m checkout waiting for idle connection: ("http", 127.0.0.1:5000)
[2m2024-05-18T13:44:45.412190Z[0m [35mTRACE[0m [1mtrigger_container[0m[1m{[0m[3mpool[0m[2m=[0mPool { size: 2, num_idle: 1, is_closed: false, options: PoolOptions { max_connections: 5, min_connections: 0, connect_timeout: 3s, max_lifetime: Some(1800s), idle_timeout: Some(600s), test_before_acquire: true } } [3mcontainer[0m[2m=[0mContainer { container_id: 066ad216-b34d-4fb0-9aeb-0308b5ca9ccb, language: "go", user_id: Some(1990720b-0ba6-4c3f-9a3c-8be8ef391fe3), port: Some(5000) } [3mmethod[0m[2m=[0mPOST [3mquery[0m[2m=[0mRawQuery(Some("container_id=066ad216-b34d-4fb0-9aeb-0308b5ca9ccb")) [3mheader_map[0m[2m=[0m{"host": "localhost:3000", "user-agent": "Go-http-client/1.1", "content-length": "0", "api-key": "e1f11936-2004-46ee-b310-84ddb8fb8d14", "container": "066ad216-b34d-4fb0-9aeb-0308b5ca9ccb", "content-type": "application/json", "accept-encoding": "gzip"} [3mbody[0m[2m=[0mb""[1m}[0m[2m:[0m [2mhyper_util::client::legacy::connect::http[0m[2m:[0m Http::connect; scheme=Some("http"), host=Some("127.0.0.1"), port=Some(Port(5000))
[2m2024-05-18T13:44:45.412235Z[0m [34mDEBUG[0m [1mtrigger_container[0m[1m{[0m[3mpool[0m[2m=[0mPool { size: 2, num_idle: 1, is_closed: false, options: PoolOptions { max_connections: 5, min_connections: 0, connect_timeout: 3s, max_lifetime: Some(1800s), idle_timeout: Some(600s), test_before_acquire: true } } [3mcontainer[0m[2m=[0mContainer { container_id: 066ad216-b34d-4fb0-9aeb-0308b5ca9ccb, language: "go", user_id: Some(1990720b-0ba6-4c3f-9a3c-8be8ef391fe3), port: Some(5000) } [3mmethod[0m[2m=[0mPOST [3mquery[0m[2m=[0mRawQuery(Some("container_id=066ad216-b34d-4fb0-9aeb-0308b5ca9ccb")) [3mheader_map[0m[2m=[0m{"host": "localhost:3000", "user-agent": "Go-http-client/1.1", "content-length": "0", "api-key": "e1f11936-2004-46ee-b310-84ddb8fb8d14", "container": "066ad216-b34d-4fb0-9aeb-0308b5ca9ccb", "content-type": "application/json", "accept-encoding": "gzip"} [3mbody[0m[2m=[0mb""[1m}[0m[2m:[0m [2mhyper_util::client::legacy::connect::http[0m[2m:[0m connecting to 127.0.0.1:5000
[2m2024-05-18T13:44:45.412409Z[0m [34mDEBUG[0m [1mtrigger_container[0m[1m{[0m[3mpool[0m[2m=[0mPool { size: 2, num_idle: 1, is_closed: false, options: PoolOptions { max_connections: 5, min_connections: 0, connect_timeout: 3s, max_lifetime: Some(1800s), idle_timeout: Some(600s), test_before_acquire: true } } [3mcontainer[0m[2m=[0mContainer { container_id: 066ad216-b34d-4fb0-9aeb-0308b5ca9ccb, language: "go", user_id: Some(1990720b-0ba6-4c3f-9a3c-8be8ef391fe3), port: Some(5000) } [3mmethod[0m[2m=[0mPOST [3mquery[0m[2m=[0mRawQuery(Some("container_id=066ad216-b34d-4fb0-9aeb-0308b5ca9ccb")) [3mheader_map[0m[2m=[0m{"host": "localhost:3000", "user-agent": "Go-http-client/1.1", "content-length": "0", "api-key": "e1f11936-2004-46ee-b310-84ddb8fb8d14", "container": "066ad216-b34d-4fb0-9aeb-0308b5ca9ccb", "content-type": "application/json", "accept-encoding": "gzip"} [3mbody[0m[2m=[0mb""[1m}[0m[2m:[0m [2mhyper_util::client::legacy::connect::http[0m[2m:[0m connected to 127.0.0.1:5000
[2m2024-05-18T13:44:45.412457Z[0m [35mTRACE[0m [1mtrigger_container[0m[1m{[0m[3mpool[0m[2m=[0mPool { size: 2, num_idle: 1, is_closed: false, options: PoolOptions { max_connections: 5, min_connections: 0, connect_timeout: 3s, max_lifetime: Some(1800s), idle_timeout: Some(600s), test_before_acquire: true } } [3mcontainer[0m[2m=[0mContainer { container_id: 066ad216-b34d-4fb0-9aeb-0308b5ca9ccb, language: "go", user_id: Some(1990720b-0ba6-4c3f-9a3c-8be8ef391fe3), port: Some(5000) } [3mmethod[0m[2m=[0mPOST [3mquery[0m[2m=[0mRawQuery(Some("container_id=066ad216-b34d-4fb0-9aeb-0308b5ca9ccb")) [3mheader_map[0m[2m=[0m{"host": "localhost:3000", "user-agent": "Go-http-client/1.1", "content-length": "0", "api-key": "e1f11936-2004-46ee-b310-84ddb8fb8d14", "container": "066ad216-b34d-4fb0-9aeb-0308b5ca9ccb", "content-type": "application/json", "accept-encoding": "gzip"} [3mbody[0m[2m=[0mb""[1m}[0m[2m:[0m [2mhyper_util::client::legacy::client[0m[2m:[0m http1 handshake complete, spawning background dispatcher task
[2m2024-05-18T13:44:45.412535Z[0m [35mTRACE[0m [1mtrigger_container[0m[1m{[0m[3mpool[0m[2m=[0mPool { size: 2, num_idle: 1, is_closed: false, options: PoolOptions { max_connections: 5, min_connections: 0, connect_timeout: 3s, max_lifetime: Some(1800s), idle_timeout: Some(600s), test_before_acquire: true } } [3mcontainer[0m[2m=[0mContainer { container_id: 066ad216-b34d-4fb0-9aeb-0308b5ca9ccb, language: "go", user_id: Some(1990720b-0ba6-4c3f-9a3c-8be8ef391fe3), port: Some(5000) } [3mmethod[0m[2m=[0mPOST [3mquery[0m[2m=[0mRawQuery(Some("container_id=066ad216-b34d-4fb0-9aeb-0308b5ca9ccb")) [3mheader_map[0m[2m=[0m{"host": "localhost:3000", "user-agent": "Go-http-client/1.1", "content-length": "0", "api-key": "e1f11936-2004-46ee-b310-84ddb8fb8d14", "container": "066ad216-b34d-4fb0-9aeb-0308b5ca9ccb", "content-type": "application/json", "accept-encoding": "gzip"} [3mbody[0m[2m=[0mb""[1m}[0m[2m:[0m [2mhyper_util::client::legacy::pool[0m[2m:[0m checkout dropped for ("http", 127.0.0.1:5000)
[2m2024-05-18T13:44:45.412844Z[0m [35mTRACE[0m [1mtrigger_container[0m[1m{[0m[3mpool[0m[2m=[0mPool { size: 2, num_idle: 1, is_closed: false, options: PoolOptions { max_connections: 5, min_connections: 0, connect_timeout: 3s, max_lifetime: Some(1800s), idle_timeout: Some(600s), test_before_acquire: true } } [3mcontainer[0m[2m=[0mContainer { container_id: 066ad216-b34d-4fb0-9aeb-0308b5ca9ccb, language: "go", user_id: Some(1990720b-0ba6-4c3f-9a3c-8be8ef391fe3), port: Some(5000) } [3mmethod[0m[2m=[0mPOST [3mquery[0m[2m=[0mRawQuery(Some("container_id=066ad216-b34d-4fb0-9aeb-0308b5ca9ccb")) [3mheader_map[0m[2m=[0m{"host": "localhost:3000", "user-agent": "Go-http-client/1.1", "content-length": "0", "api-key": "e1f11936-2004-46ee-b310-84ddb8fb8d14", "container": "066ad216-b34d-4fb0-9aeb-0308b5ca9ccb", "content-type": "application/json", "accept-encoding": "gzip"} [3mbody[0m[2m=[0mb""[1m}[0m[2m:[0m [2mhyper_util::client::legacy::pool[0m[2m:[0m put; add idle connection for ("http", 127.0.0.1:5000)
[2m2024-05-18T13:44:45.412895Z[0m [34mDEBUG[0m [1mtrigger_container[0m[1m{[0m[3mpool[0m[2m=[0mPool { size: 2, num_idle: 1, is_closed: false, options: PoolOptions { max_connections: 5, min_connections: 0, connect_timeout: 3s, max_lifetime: Some(1800s), idle_timeout: Some(600s), test_before_acquire: true } } [3mcontainer[0m[2m=[0mContainer { container_id: 066ad216-b34d-4fb0-9aeb-0308b5ca9ccb, language: "go", user_id: Some(1990720b-0ba6-4c3f-9a3c-8be8ef391fe3), port: Some(5000) } [3mmethod[0m[2m=[0mPOST [3mquery[0m[2m=[0mRawQuery(Some("container_id=066ad216-b34d-4fb0-9aeb-0308b5ca9ccb")) [3mheader_map[0m[2m=[0m{"host": "localhost:3000", "user-agent": "Go-http-client/1.1", "content-length": "0", "api-key": "e1f11936-2004-46ee-b310-84ddb8fb8d14", "container": "066ad216-b34d-4fb0-9aeb-0308b5ca9ccb", "content-type": "application/json", "accept-encoding": "gzip"} [3mbody[0m[2m=[0mb""[1m}[0m[2m:[0m [2mhyper_util::client::legacy::pool[0m[2m:[0m pooling idle connection for ("http", 127.0.0.1:5000)
[2m2024-05-18T13:44:45.971809Z[0m [32m INFO[0m [2mkappa::routes::middleware[0m[2m:[0m api key e1f11936-2004-46ee-b310-84ddb8fb8d14
[2m2024-05-18T13:44:45.972690Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT * FROM \"user\" â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  *\nFROM\n  \"user\"\nWHERE\n  api_key = $1\n" [3mrows_affected[0m[2m=[0m0 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m184.971Âµs [3melapsed_secs[0m[2m=[0m0.000184971
[2m2024-05-18T13:44:45.973510Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT * FROM container â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  *\nFROM\n  container\nWHERE\n  user_id = $1\n" [3mrows_affected[0m[2m=[0m1 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m179.851Âµs [3melapsed_secs[0m[2m=[0m0.000179851
[2m2024-05-18T13:44:46.339340Z[0m [32m INFO[0m [2mkappa::routes::middleware[0m[2m:[0m api key e1f11936-2004-46ee-b310-84ddb8fb8d14
[2m2024-05-18T13:44:46.340256Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT * FROM \"user\" â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  *\nFROM\n  \"user\"\nWHERE\n  api_key = $1\n" [3mrows_affected[0m[2m=[0m0 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m230.461Âµs [3melapsed_secs[0m[2m=[0m0.000230461
[2m2024-05-18T13:44:46.341301Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT * FROM container â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  *\nFROM\n  container\nWHERE\n  container_id = $1\n  AND user_id = $2\n" [3mrows_affected[0m[2m=[0m0 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m207.191Âµs [3melapsed_secs[0m[2m=[0m0.000207191
[2m2024-05-18T13:44:46.370107Z[0m [35mTRACE[0m [1mtrigger_container[0m[1m{[0m[3mpool[0m[2m=[0mPool { size: 2, num_idle: 1, is_closed: false, options: PoolOptions { max_connections: 5, min_connections: 0, connect_timeout: 3s, max_lifetime: Some(1800s), idle_timeout: Some(600s), test_before_acquire: true } } [3mcontainer[0m[2m=[0mContainer { container_id: 066ad216-b34d-4fb0-9aeb-0308b5ca9ccb, language: "go", user_id: Some(1990720b-0ba6-4c3f-9a3c-8be8ef391fe3), port: Some(5000) } [3mmethod[0m[2m=[0mPOST [3mquery[0m[2m=[0mRawQuery(Some("container_id=066ad216-b34d-4fb0-9aeb-0308b5ca9ccb")) [3mheader_map[0m[2m=[0m{"host": "localhost:3000", "user-agent": "Go-http-client/1.1", "content-length": "0", "api-key": "e1f11936-2004-46ee-b310-84ddb8fb8d14", "container": "066ad216-b34d-4fb0-9aeb-0308b5ca9ccb", "content-type": "application/json", "accept-encoding": "gzip"} [3mbody[0m[2m=[0mb""[1m}[0m[2m:[0m [2mhyper_util::client::legacy::pool[0m[2m:[0m checkout waiting for idle connection: ("http", 127.0.0.1:5000)
[2m2024-05-18T13:44:46.370169Z[0m [35mTRACE[0m [1mtrigger_container[0m[1m{[0m[3mpool[0m[2m=[0mPool { size: 2, num_idle: 1, is_closed: false, options: PoolOptions { max_connections: 5, min_connections: 0, connect_timeout: 3s, max_lifetime: Some(1800s), idle_timeout: Some(600s), test_before_acquire: true } } [3mcontainer[0m[2m=[0mContainer { container_id: 066ad216-b34d-4fb0-9aeb-0308b5ca9ccb, language: "go", user_id: Some(1990720b-0ba6-4c3f-9a3c-8be8ef391fe3), port: Some(5000) } [3mmethod[0m[2m=[0mPOST [3mquery[0m[2m=[0mRawQuery(Some("container_id=066ad216-b34d-4fb0-9aeb-0308b5ca9ccb")) [3mheader_map[0m[2m=[0m{"host": "localhost:3000", "user-agent": "Go-http-client/1.1", "content-length": "0", "api-key": "e1f11936-2004-46ee-b310-84ddb8fb8d14", "container": "066ad216-b34d-4fb0-9aeb-0308b5ca9ccb", "content-type": "application/json", "accept-encoding": "gzip"} [3mbody[0m[2m=[0mb""[1m}[0m[2m:[0m [2mhyper_util::client::legacy::connect::http[0m[2m:[0m Http::connect; scheme=Some("http"), host=Some("127.0.0.1"), port=Some(Port(5000))
[2m2024-05-18T13:44:46.370214Z[0m [34mDEBUG[0m [1mtrigger_container[0m[1m{[0m[3mpool[0m[2m=[0mPool { size: 2, num_idle: 1, is_closed: false, options: PoolOptions { max_connections: 5, min_connections: 0, connect_timeout: 3s, max_lifetime: Some(1800s), idle_timeout: Some(600s), test_before_acquire: true } } [3mcontainer[0m[2m=[0mContainer { container_id: 066ad216-b34d-4fb0-9aeb-0308b5ca9ccb, language: "go", user_id: Some(1990720b-0ba6-4c3f-9a3c-8be8ef391fe3), port: Some(5000) } [3mmethod[0m[2m=[0mPOST [3mquery[0m[2m=[0mRawQuery(Some("container_id=066ad216-b34d-4fb0-9aeb-0308b5ca9ccb")) [3mheader_map[0m[2m=[0m{"host": "localhost:3000", "user-agent": "Go-http-client/1.1", "content-length": "0", "api-key": "e1f11936-2004-46ee-b310-84ddb8fb8d14", "container": "066ad216-b34d-4fb0-9aeb-0308b5ca9ccb", "content-type": "application/json", "accept-encoding": "gzip"} [3mbody[0m[2m=[0mb""[1m}[0m[2m:[0m [2mhyper_util::client::legacy::connect::http[0m[2m:[0m connecting to 127.0.0.1:5000
[2m2024-05-18T13:44:46.370377Z[0m [34mDEBUG[0m [1mtrigger_container[0m[1m{[0m[3mpool[0m[2m=[0mPool { size: 2, num_idle: 1, is_closed: false, options: PoolOptions { max_connections: 5, min_connections: 0, connect_timeout: 3s, max_lifetime: Some(1800s), idle_timeout: Some(600s), test_before_acquire: true } } [3mcontainer[0m[2m=[0mContainer { container_id: 066ad216-b34d-4fb0-9aeb-0308b5ca9ccb, language: "go", user_id: Some(1990720b-0ba6-4c3f-9a3c-8be8ef391fe3), port: Some(5000) } [3mmethod[0m[2m=[0mPOST [3mquery[0m[2m=[0mRawQuery(Some("container_id=066ad216-b34d-4fb0-9aeb-0308b5ca9ccb")) [3mheader_map[0m[2m=[0m{"host": "localhost:3000", "user-agent": "Go-http-client/1.1", "content-length": "0", "api-key": "e1f11936-2004-46ee-b310-84ddb8fb8d14", "container": "066ad216-b34d-4fb0-9aeb-0308b5ca9ccb", "content-type": "application/json", "accept-encoding": "gzip"} [3mbody[0m[2m=[0mb""[1m}[0m[2m:[0m [2mhyper_util::client::legacy::connect::http[0m[2m:[0m connected to 127.0.0.1:5000
[2m2024-05-18T13:44:46.370419Z[0m [35mTRACE[0m [1mtrigger_container[0m[1m{[0m[3mpool[0m[2m=[0mPool { size: 2, num_idle: 1, is_closed: false, options: PoolOptions { max_connections: 5, min_connections: 0, connect_timeout: 3s, max_lifetime: Some(1800s), idle_timeout: Some(600s), test_before_acquire: true } } [3mcontainer[0m[2m=[0mContainer { container_id: 066ad216-b34d-4fb0-9aeb-0308b5ca9ccb, language: "go", user_id: Some(1990720b-0ba6-4c3f-9a3c-8be8ef391fe3), port: Some(5000) } [3mmethod[0m[2m=[0mPOST [3mquery[0m[2m=[0mRawQuery(Some("container_id=066ad216-b34d-4fb0-9aeb-0308b5ca9ccb")) [3mheader_map[0m[2m=[0m{"host": "localhost:3000", "user-agent": "Go-http-client/1.1", "content-length": "0", "api-key": "e1f11936-2004-46ee-b310-84ddb8fb8d14", "container": "066ad216-b34d-4fb0-9aeb-0308b5ca9ccb", "content-type": "application/json", "accept-encoding": "gzip"} [3mbody[0m[2m=[0mb""[1m}[0m[2m:[0m [2mhyper_util::client::legacy::client[0m[2m:[0m http1 handshake complete, spawning background dispatcher task
[2m2024-05-18T13:44:46.370501Z[0m [35mTRACE[0m [1mtrigger_container[0m[1m{[0m[3mpool[0m[2m=[0mPool { size: 2, num_idle: 1, is_closed: false, options: PoolOptions { max_connections: 5, min_connections: 0, connect_timeout: 3s, max_lifetime: Some(1800s), idle_timeout: Some(600s), test_before_acquire: true } } [3mcontainer[0m[2m=[0mContainer { container_id: 066ad216-b34d-4fb0-9aeb-0308b5ca9ccb, language: "go", user_id: Some(1990720b-0ba6-4c3f-9a3c-8be8ef391fe3), port: Some(5000) } [3mmethod[0m[2m=[0mPOST [3mquery[0m[2m=[0mRawQuery(Some("container_id=066ad216-b34d-4fb0-9aeb-0308b5ca9ccb")) [3mheader_map[0m[2m=[0m{"host": "localhost:3000", "user-agent": "Go-http-client/1.1", "content-length": "0", "api-key": "e1f11936-2004-46ee-b310-84ddb8fb8d14", "container": "066ad216-b34d-4fb0-9aeb-0308b5ca9ccb", "content-type": "application/json", "accept-encoding": "gzip"} [3mbody[0m[2m=[0mb""[1m}[0m[2m:[0m [2mhyper_util::client::legacy::pool[0m[2m:[0m checkout dropped for ("http", 127.0.0.1:5000)
[2m2024-05-18T13:44:46.370793Z[0m [35mTRACE[0m [1mtrigger_container[0m[1m{[0m[3mpool[0m[2m=[0mPool { size: 2, num_idle: 1, is_closed: false, options: PoolOptions { max_connections: 5, min_connections: 0, connect_timeout: 3s, max_lifetime: Some(1800s), idle_timeout: Some(600s), test_before_acquire: true } } [3mcontainer[0m[2m=[0mContainer { container_id: 066ad216-b34d-4fb0-9aeb-0308b5ca9ccb, language: "go", user_id: Some(1990720b-0ba6-4c3f-9a3c-8be8ef391fe3), port: Some(5000) } [3mmethod[0m[2m=[0mPOST [3mquery[0m[2m=[0mRawQuery(Some("container_id=066ad216-b34d-4fb0-9aeb-0308b5ca9ccb")) [3mheader_map[0m[2m=[0m{"host": "localhost:3000", "user-agent": "Go-http-client/1.1", "content-length": "0", "api-key": "e1f11936-2004-46ee-b310-84ddb8fb8d14", "container": "066ad216-b34d-4fb0-9aeb-0308b5ca9ccb", "content-type": "application/json", "accept-encoding": "gzip"} [3mbody[0m[2m=[0mb""[1m}[0m[2m:[0m [2mhyper_util::client::legacy::pool[0m[2m:[0m put; add idle connection for ("http", 127.0.0.1:5000)
[2m2024-05-18T13:44:46.370838Z[0m [34mDEBUG[0m [1mtrigger_container[0m[1m{[0m[3mpool[0m[2m=[0mPool { size: 2, num_idle: 1, is_closed: false, options: PoolOptions { max_connections: 5, min_connections: 0, connect_timeout: 3s, max_lifetime: Some(1800s), idle_timeout: Some(600s), test_before_acquire: true } } [3mcontainer[0m[2m=[0mContainer { container_id: 066ad216-b34d-4fb0-9aeb-0308b5ca9ccb, language: "go", user_id: Some(1990720b-0ba6-4c3f-9a3c-8be8ef391fe3), port: Some(5000) } [3mmethod[0m[2m=[0mPOST [3mquery[0m[2m=[0mRawQuery(Some("container_id=066ad216-b34d-4fb0-9aeb-0308b5ca9ccb")) [3mheader_map[0m[2m=[0m{"host": "localhost:3000", "user-agent": "Go-http-client/1.1", "content-length": "0", "api-key": "e1f11936-2004-46ee-b310-84ddb8fb8d14", "container": "066ad216-b34d-4fb0-9aeb-0308b5ca9ccb", "content-type": "application/json", "accept-encoding": "gzip"} [3mbody[0m[2m=[0mb""[1m}[0m[2m:[0m [2mhyper_util::client::legacy::pool[0m[2m:[0m pooling idle connection for ("http", 127.0.0.1:5000)
[2m2024-05-18T13:44:46.839384Z[0m [32m INFO[0m [2mkappa::routes::middleware[0m[2m:[0m api key e1f11936-2004-46ee-b310-84ddb8fb8d14
[2m2024-05-18T13:44:46.840246Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT * FROM \"user\" â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  *\nFROM\n  \"user\"\nWHERE\n  api_key = $1\n" [3mrows_affected[0m[2m=[0m0 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m148.001Âµs [3melapsed_secs[0m[2m=[0m0.000148001
[2m2024-05-18T13:44:46.841051Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT * FROM container â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  *\nFROM\n  container\nWHERE\n  user_id = $1\n" [3mrows_affected[0m[2m=[0m1 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m170.79Âµs [3melapsed_secs[0m[2m=[0m0.00017079
[2m2024-05-18T13:44:47.142347Z[0m [32m INFO[0m [2mkappa::routes::middleware[0m[2m:[0m api key e1f11936-2004-46ee-b310-84ddb8fb8d14
[2m2024-05-18T13:44:47.143249Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT * FROM \"user\" â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  *\nFROM\n  \"user\"\nWHERE\n  api_key = $1\n" [3mrows_affected[0m[2m=[0m0 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m193.96Âµs [3melapsed_secs[0m[2m=[0m0.00019396
[2m2024-05-18T13:44:47.144305Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT * FROM container â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  *\nFROM\n  container\nWHERE\n  container_id = $1\n  AND user_id = $2\n" [3mrows_affected[0m[2m=[0m0 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m215.97Âµs [3melapsed_secs[0m[2m=[0m0.00021597
[2m2024-05-18T13:44:47.173179Z[0m [35mTRACE[0m [1mtrigger_container[0m[1m{[0m[3mpool[0m[2m=[0mPool { size: 2, num_idle: 1, is_closed: false, options: PoolOptions { max_connections: 5, min_connections: 0, connect_timeout: 3s, max_lifetime: Some(1800s), idle_timeout: Some(600s), test_before_acquire: true } } [3mcontainer[0m[2m=[0mContainer { container_id: 066ad216-b34d-4fb0-9aeb-0308b5ca9ccb, language: "go", user_id: Some(1990720b-0ba6-4c3f-9a3c-8be8ef391fe3), port: Some(5000) } [3mmethod[0m[2m=[0mPOST [3mquery[0m[2m=[0mRawQuery(Some("container_id=066ad216-b34d-4fb0-9aeb-0308b5ca9ccb")) [3mheader_map[0m[2m=[0m{"host": "localhost:3000", "user-agent": "Go-http-client/1.1", "content-length": "0", "api-key": "e1f11936-2004-46ee-b310-84ddb8fb8d14", "container": "066ad216-b34d-4fb0-9aeb-0308b5ca9ccb", "content-type": "application/json", "accept-encoding": "gzip"} [3mbody[0m[2m=[0mb""[1m}[0m[2m:[0m [2mhyper_util::client::legacy::pool[0m[2m:[0m checkout waiting for idle connection: ("http", 127.0.0.1:5000)
[2m2024-05-18T13:44:47.173233Z[0m [35mTRACE[0m [1mtrigger_container[0m[1m{[0m[3mpool[0m[2m=[0mPool { size: 2, num_idle: 1, is_closed: false, options: PoolOptions { max_connections: 5, min_connections: 0, connect_timeout: 3s, max_lifetime: Some(1800s), idle_timeout: Some(600s), test_before_acquire: true } } [3mcontainer[0m[2m=[0mContainer { container_id: 066ad216-b34d-4fb0-9aeb-0308b5ca9ccb, language: "go", user_id: Some(1990720b-0ba6-4c3f-9a3c-8be8ef391fe3), port: Some(5000) } [3mmethod[0m[2m=[0mPOST [3mquery[0m[2m=[0mRawQuery(Some("container_id=066ad216-b34d-4fb0-9aeb-0308b5ca9ccb")) [3mheader_map[0m[2m=[0m{"host": "localhost:3000", "user-agent": "Go-http-client/1.1", "content-length": "0", "api-key": "e1f11936-2004-46ee-b310-84ddb8fb8d14", "container": "066ad216-b34d-4fb0-9aeb-0308b5ca9ccb", "content-type": "application/json", "accept-encoding": "gzip"} [3mbody[0m[2m=[0mb""[1m}[0m[2m:[0m [2mhyper_util::client::legacy::connect::http[0m[2m:[0m Http::connect; scheme=Some("http"), host=Some("127.0.0.1"), port=Some(Port(5000))
[2m2024-05-18T13:44:47.173276Z[0m [34mDEBUG[0m [1mtrigger_container[0m[1m{[0m[3mpool[0m[2m=[0mPool { size: 2, num_idle: 1, is_closed: false, options: PoolOptions { max_connections: 5, min_connections: 0, connect_timeout: 3s, max_lifetime: Some(1800s), idle_timeout: Some(600s), test_before_acquire: true } } [3mcontainer[0m[2m=[0mContainer { container_id: 066ad216-b34d-4fb0-9aeb-0308b5ca9ccb, language: "go", user_id: Some(1990720b-0ba6-4c3f-9a3c-8be8ef391fe3), port: Some(5000) } [3mmethod[0m[2m=[0mPOST [3mquery[0m[2m=[0mRawQuery(Some("container_id=066ad216-b34d-4fb0-9aeb-0308b5ca9ccb")) [3mheader_map[0m[2m=[0m{"host": "localhost:3000", "user-agent": "Go-http-client/1.1", "content-length": "0", "api-key": "e1f11936-2004-46ee-b310-84ddb8fb8d14", "container": "066ad216-b34d-4fb0-9aeb-0308b5ca9ccb", "content-type": "application/json", "accept-encoding": "gzip"} [3mbody[0m[2m=[0mb""[1m}[0m[2m:[0m [2mhyper_util::client::legacy::connect::http[0m[2m:[0m connecting to 127.0.0.1:5000
[2m2024-05-18T13:44:47.173448Z[0m [34mDEBUG[0m [1mtrigger_container[0m[1m{[0m[3mpool[0m[2m=[0mPool { size: 2, num_idle: 1, is_closed: false, options: PoolOptions { max_connections: 5, min_connections: 0, connect_timeout: 3s, max_lifetime: Some(1800s), idle_timeout: Some(600s), test_before_acquire: true } } [3mcontainer[0m[2m=[0mContainer { container_id: 066ad216-b34d-4fb0-9aeb-0308b5ca9ccb, language: "go", user_id: Some(1990720b-0ba6-4c3f-9a3c-8be8ef391fe3), port: Some(5000) } [3mmethod[0m[2m=[0mPOST [3mquery[0m[2m=[0mRawQuery(Some("container_id=066ad216-b34d-4fb0-9aeb-0308b5ca9ccb")) [3mheader_map[0m[2m=[0m{"host": "localhost:3000", "user-agent": "Go-http-client/1.1", "content-length": "0", "api-key": "e1f11936-2004-46ee-b310-84ddb8fb8d14", "container": "066ad216-b34d-4fb0-9aeb-0308b5ca9ccb", "content-type": "application/json", "accept-encoding": "gzip"} [3mbody[0m[2m=[0mb""[1m}[0m[2m:[0m [2mhyper_util::client::legacy::connect::http[0m[2m:[0m connected to 127.0.0.1:5000
[2m2024-05-18T13:44:47.173490Z[0m [35mTRACE[0m [1mtrigger_container[0m[1m{[0m[3mpool[0m[2m=[0mPool { size: 2, num_idle: 1, is_closed: false, options: PoolOptions { max_connections: 5, min_connections: 0, connect_timeout: 3s, max_lifetime: Some(1800s), idle_timeout: Some(600s), test_before_acquire: true } } [3mcontainer[0m[2m=[0mContainer { container_id: 066ad216-b34d-4fb0-9aeb-0308b5ca9ccb, language: "go", user_id: Some(1990720b-0ba6-4c3f-9a3c-8be8ef391fe3), port: Some(5000) } [3mmethod[0m[2m=[0mPOST [3mquery[0m[2m=[0mRawQuery(Some("container_id=066ad216-b34d-4fb0-9aeb-0308b5ca9ccb")) [3mheader_map[0m[2m=[0m{"host": "localhost:3000", "user-agent": "Go-http-client/1.1", "content-length": "0", "api-key": "e1f11936-2004-46ee-b310-84ddb8fb8d14", "container": "066ad216-b34d-4fb0-9aeb-0308b5ca9ccb", "content-type": "application/json", "accept-encoding": "gzip"} [3mbody[0m[2m=[0mb""[1m}[0m[2m:[0m [2mhyper_util::client::legacy::client[0m[2m:[0m http1 handshake complete, spawning background dispatcher task
[2m2024-05-18T13:44:47.173567Z[0m [35mTRACE[0m [1mtrigger_container[0m[1m{[0m[3mpool[0m[2m=[0mPool { size: 2, num_idle: 1, is_closed: false, options: PoolOptions { max_connections: 5, min_connections: 0, connect_timeout: 3s, max_lifetime: Some(1800s), idle_timeout: Some(600s), test_before_acquire: true } } [3mcontainer[0m[2m=[0mContainer { container_id: 066ad216-b34d-4fb0-9aeb-0308b5ca9ccb, language: "go", user_id: Some(1990720b-0ba6-4c3f-9a3c-8be8ef391fe3), port: Some(5000) } [3mmethod[0m[2m=[0mPOST [3mquery[0m[2m=[0mRawQuery(Some("container_id=066ad216-b34d-4fb0-9aeb-0308b5ca9ccb")) [3mheader_map[0m[2m=[0m{"host": "localhost:3000", "user-agent": "Go-http-client/1.1", "content-length": "0", "api-key": "e1f11936-2004-46ee-b310-84ddb8fb8d14", "container": "066ad216-b34d-4fb0-9aeb-0308b5ca9ccb", "content-type": "application/json", "accept-encoding": "gzip"} [3mbody[0m[2m=[0mb""[1m}[0m[2m:[0m [2mhyper_util::client::legacy::pool[0m[2m:[0m checkout dropped for ("http", 127.0.0.1:5000)
[2m2024-05-18T13:44:47.173860Z[0m [35mTRACE[0m [1mtrigger_container[0m[1m{[0m[3mpool[0m[2m=[0mPool { size: 2, num_idle: 1, is_closed: false, options: PoolOptions { max_connections: 5, min_connections: 0, connect_timeout: 3s, max_lifetime: Some(1800s), idle_timeout: Some(600s), test_before_acquire: true } } [3mcontainer[0m[2m=[0mContainer { container_id: 066ad216-b34d-4fb0-9aeb-0308b5ca9ccb, language: "go", user_id: Some(1990720b-0ba6-4c3f-9a3c-8be8ef391fe3), port: Some(5000) } [3mmethod[0m[2m=[0mPOST [3mquery[0m[2m=[0mRawQuery(Some("container_id=066ad216-b34d-4fb0-9aeb-0308b5ca9ccb")) [3mheader_map[0m[2m=[0m{"host": "localhost:3000", "user-agent": "Go-http-client/1.1", "content-length": "0", "api-key": "e1f11936-2004-46ee-b310-84ddb8fb8d14", "container": "066ad216-b34d-4fb0-9aeb-0308b5ca9ccb", "content-type": "application/json", "accept-encoding": "gzip"} [3mbody[0m[2m=[0mb""[1m}[0m[2m:[0m [2mhyper_util::client::legacy::pool[0m[2m:[0m put; add idle connection for ("http", 127.0.0.1:5000)
[2m2024-05-18T13:44:47.173908Z[0m [34mDEBUG[0m [1mtrigger_container[0m[1m{[0m[3mpool[0m[2m=[0mPool { size: 2, num_idle: 1, is_closed: false, options: PoolOptions { max_connections: 5, min_connections: 0, connect_timeout: 3s, max_lifetime: Some(1800s), idle_timeout: Some(600s), test_before_acquire: true } } [3mcontainer[0m[2m=[0mContainer { container_id: 066ad216-b34d-4fb0-9aeb-0308b5ca9ccb, language: "go", user_id: Some(1990720b-0ba6-4c3f-9a3c-8be8ef391fe3), port: Some(5000) } [3mmethod[0m[2m=[0mPOST [3mquery[0m[2m=[0mRawQuery(Some("container_id=066ad216-b34d-4fb0-9aeb-0308b5ca9ccb")) [3mheader_map[0m[2m=[0m{"host": "localhost:3000", "user-agent": "Go-http-client/1.1", "content-length": "0", "api-key": "e1f11936-2004-46ee-b310-84ddb8fb8d14", "container": "066ad216-b34d-4fb0-9aeb-0308b5ca9ccb", "content-type": "application/json", "accept-encoding": "gzip"} [3mbody[0m[2m=[0mb""[1m}[0m[2m:[0m [2mhyper_util::client::legacy::pool[0m[2m:[0m pooling idle connection for ("http", 127.0.0.1:5000)
[2m2024-05-18T13:44:47.601610Z[0m [32m INFO[0m [2mkappa::routes::middleware[0m[2m:[0m api key e1f11936-2004-46ee-b310-84ddb8fb8d14
[2m2024-05-18T13:44:47.602479Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT * FROM \"user\" â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  *\nFROM\n  \"user\"\nWHERE\n  api_key = $1\n" [3mrows_affected[0m[2m=[0m0 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m182.031Âµs [3melapsed_secs[0m[2m=[0m0.000182031
[2m2024-05-18T13:44:47.603310Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT * FROM container â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  *\nFROM\n  container\nWHERE\n  user_id = $1\n" [3mrows_affected[0m[2m=[0m1 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m193.341Âµs [3melapsed_secs[0m[2m=[0m0.000193341
[2m2024-05-18T13:44:47.898873Z[0m [32m INFO[0m [2mkappa::routes::middleware[0m[2m:[0m api key e1f11936-2004-46ee-b310-84ddb8fb8d14
[2m2024-05-18T13:44:47.899731Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT * FROM \"user\" â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  *\nFROM\n  \"user\"\nWHERE\n  api_key = $1\n" [3mrows_affected[0m[2m=[0m0 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m151.911Âµs [3melapsed_secs[0m[2m=[0m0.000151911
[2m2024-05-18T13:44:47.900746Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT * FROM container â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  *\nFROM\n  container\nWHERE\n  container_id = $1\n  AND user_id = $2\n" [3mrows_affected[0m[2m=[0m0 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m187.691Âµs [3melapsed_secs[0m[2m=[0m0.000187691
[2m2024-05-18T13:44:47.929705Z[0m [35mTRACE[0m [1mtrigger_container[0m[1m{[0m[3mpool[0m[2m=[0mPool { size: 2, num_idle: 1, is_closed: false, options: PoolOptions { max_connections: 5, min_connections: 0, connect_timeout: 3s, max_lifetime: Some(1800s), idle_timeout: Some(600s), test_before_acquire: true } } [3mcontainer[0m[2m=[0mContainer { container_id: 066ad216-b34d-4fb0-9aeb-0308b5ca9ccb, language: "go", user_id: Some(1990720b-0ba6-4c3f-9a3c-8be8ef391fe3), port: Some(5000) } [3mmethod[0m[2m=[0mPOST [3mquery[0m[2m=[0mRawQuery(Some("container_id=066ad216-b34d-4fb0-9aeb-0308b5ca9ccb")) [3mheader_map[0m[2m=[0m{"host": "localhost:3000", "user-agent": "Go-http-client/1.1", "content-length": "0", "api-key": "e1f11936-2004-46ee-b310-84ddb8fb8d14", "container": "066ad216-b34d-4fb0-9aeb-0308b5ca9ccb", "content-type": "application/json", "accept-encoding": "gzip"} [3mbody[0m[2m=[0mb""[1m}[0m[2m:[0m [2mhyper_util::client::legacy::pool[0m[2m:[0m checkout waiting for idle connection: ("http", 127.0.0.1:5000)
[2m2024-05-18T13:44:47.929767Z[0m [35mTRACE[0m [1mtrigger_container[0m[1m{[0m[3mpool[0m[2m=[0mPool { size: 2, num_idle: 1, is_closed: false, options: PoolOptions { max_connections: 5, min_connections: 0, connect_timeout: 3s, max_lifetime: Some(1800s), idle_timeout: Some(600s), test_before_acquire: true } } [3mcontainer[0m[2m=[0mContainer { container_id: 066ad216-b34d-4fb0-9aeb-0308b5ca9ccb, language: "go", user_id: Some(1990720b-0ba6-4c3f-9a3c-8be8ef391fe3), port: Some(5000) } [3mmethod[0m[2m=[0mPOST [3mquery[0m[2m=[0mRawQuery(Some("container_id=066ad216-b34d-4fb0-9aeb-0308b5ca9ccb")) [3mheader_map[0m[2m=[0m{"host": "localhost:3000", "user-agent": "Go-http-client/1.1", "content-length": "0", "api-key": "e1f11936-2004-46ee-b310-84ddb8fb8d14", "container": "066ad216-b34d-4fb0-9aeb-0308b5ca9ccb", "content-type": "application/json", "accept-encoding": "gzip"} [3mbody[0m[2m=[0mb""[1m}[0m[2m:[0m [2mhyper_util::client::legacy::connect::http[0m[2m:[0m Http::connect; scheme=Some("http"), host=Some("127.0.0.1"), port=Some(Port(5000))
[2m2024-05-18T13:44:47.929812Z[0m [34mDEBUG[0m [1mtrigger_container[0m[1m{[0m[3mpool[0m[2m=[0mPool { size: 2, num_idle: 1, is_closed: false, options: PoolOptions { max_connections: 5, min_connections: 0, connect_timeout: 3s, max_lifetime: Some(1800s), idle_timeout: Some(600s), test_before_acquire: true } } [3mcontainer[0m[2m=[0mContainer { container_id: 066ad216-b34d-4fb0-9aeb-0308b5ca9ccb, language: "go", user_id: Some(1990720b-0ba6-4c3f-9a3c-8be8ef391fe3), port: Some(5000) } [3mmethod[0m[2m=[0mPOST [3mquery[0m[2m=[0mRawQuery(Some("container_id=066ad216-b34d-4fb0-9aeb-0308b5ca9ccb")) [3mheader_map[0m[2m=[0m{"host": "localhost:3000", "user-agent": "Go-http-client/1.1", "content-length": "0", "api-key": "e1f11936-2004-46ee-b310-84ddb8fb8d14", "container": "066ad216-b34d-4fb0-9aeb-0308b5ca9ccb", "content-type": "application/json", "accept-encoding": "gzip"} [3mbody[0m[2m=[0mb""[1m}[0m[2m:[0m [2mhyper_util::client::legacy::connect::http[0m[2m:[0m connecting to 127.0.0.1:5000
[2m2024-05-18T13:44:47.929979Z[0m [34mDEBUG[0m [1mtrigger_container[0m[1m{[0m[3mpool[0m[2m=[0mPool { size: 2, num_idle: 1, is_closed: false, options: PoolOptions { max_connections: 5, min_connections: 0, connect_timeout: 3s, max_lifetime: Some(1800s), idle_timeout: Some(600s), test_before_acquire: true } } [3mcontainer[0m[2m=[0mContainer { container_id: 066ad216-b34d-4fb0-9aeb-0308b5ca9ccb, language: "go", user_id: Some(1990720b-0ba6-4c3f-9a3c-8be8ef391fe3), port: Some(5000) } [3mmethod[0m[2m=[0mPOST [3mquery[0m[2m=[0mRawQuery(Some("container_id=066ad216-b34d-4fb0-9aeb-0308b5ca9ccb")) [3mheader_map[0m[2m=[0m{"host": "localhost:3000", "user-agent": "Go-http-client/1.1", "content-length": "0", "api-key": "e1f11936-2004-46ee-b310-84ddb8fb8d14", "container": "066ad216-b34d-4fb0-9aeb-0308b5ca9ccb", "content-type": "application/json", "accept-encoding": "gzip"} [3mbody[0m[2m=[0mb""[1m}[0m[2m:[0m [2mhyper_util::client::legacy::connect::http[0m[2m:[0m connected to 127.0.0.1:5000
[2m2024-05-18T13:44:47.930020Z[0m [35mTRACE[0m [1mtrigger_container[0m[1m{[0m[3mpool[0m[2m=[0mPool { size: 2, num_idle: 1, is_closed: false, options: PoolOptions { max_connections: 5, min_connections: 0, connect_timeout: 3s, max_lifetime: Some(1800s), idle_timeout: Some(600s), test_before_acquire: true } } [3mcontainer[0m[2m=[0mContainer { container_id: 066ad216-b34d-4fb0-9aeb-0308b5ca9ccb, language: "go", user_id: Some(1990720b-0ba6-4c3f-9a3c-8be8ef391fe3), port: Some(5000) } [3mmethod[0m[2m=[0mPOST [3mquery[0m[2m=[0mRawQuery(Some("container_id=066ad216-b34d-4fb0-9aeb-0308b5ca9ccb")) [3mheader_map[0m[2m=[0m{"host": "localhost:3000", "user-agent": "Go-http-client/1.1", "content-length": "0", "api-key": "e1f11936-2004-46ee-b310-84ddb8fb8d14", "container": "066ad216-b34d-4fb0-9aeb-0308b5ca9ccb", "content-type": "application/json", "accept-encoding": "gzip"} [3mbody[0m[2m=[0mb""[1m}[0m[2m:[0m [2mhyper_util::client::legacy::client[0m[2m:[0m http1 handshake complete, spawning background dispatcher task
[2m2024-05-18T13:44:47.930095Z[0m [35mTRACE[0m [1mtrigger_container[0m[1m{[0m[3mpool[0m[2m=[0mPool { size: 2, num_idle: 1, is_closed: false, options: PoolOptions { max_connections: 5, min_connections: 0, connect_timeout: 3s, max_lifetime: Some(1800s), idle_timeout: Some(600s), test_before_acquire: true } } [3mcontainer[0m[2m=[0mContainer { container_id: 066ad216-b34d-4fb0-9aeb-0308b5ca9ccb, language: "go", user_id: Some(1990720b-0ba6-4c3f-9a3c-8be8ef391fe3), port: Some(5000) } [3mmethod[0m[2m=[0mPOST [3mquery[0m[2m=[0mRawQuery(Some("container_id=066ad216-b34d-4fb0-9aeb-0308b5ca9ccb")) [3mheader_map[0m[2m=[0m{"host": "localhost:3000", "user-agent": "Go-http-client/1.1", "content-length": "0", "api-key": "e1f11936-2004-46ee-b310-84ddb8fb8d14", "container": "066ad216-b34d-4fb0-9aeb-0308b5ca9ccb", "content-type": "application/json", "accept-encoding": "gzip"} [3mbody[0m[2m=[0mb""[1m}[0m[2m:[0m [2mhyper_util::client::legacy::pool[0m[2m:[0m checkout dropped for ("http", 127.0.0.1:5000)
[2m2024-05-18T13:44:47.930366Z[0m [35mTRACE[0m [1mtrigger_container[0m[1m{[0m[3mpool[0m[2m=[0mPool { size: 2, num_idle: 1, is_closed: false, options: PoolOptions { max_connections: 5, min_connections: 0, connect_timeout: 3s, max_lifetime: Some(1800s), idle_timeout: Some(600s), test_before_acquire: true } } [3mcontainer[0m[2m=[0mContainer { container_id: 066ad216-b34d-4fb0-9aeb-0308b5ca9ccb, language: "go", user_id: Some(1990720b-0ba6-4c3f-9a3c-8be8ef391fe3), port: Some(5000) } [3mmethod[0m[2m=[0mPOST [3mquery[0m[2m=[0mRawQuery(Some("container_id=066ad216-b34d-4fb0-9aeb-0308b5ca9ccb")) [3mheader_map[0m[2m=[0m{"host": "localhost:3000", "user-agent": "Go-http-client/1.1", "content-length": "0", "api-key": "e1f11936-2004-46ee-b310-84ddb8fb8d14", "container": "066ad216-b34d-4fb0-9aeb-0308b5ca9ccb", "content-type": "application/json", "accept-encoding": "gzip"} [3mbody[0m[2m=[0mb""[1m}[0m[2m:[0m [2mhyper_util::client::legacy::pool[0m[2m:[0m put; add idle connection for ("http", 127.0.0.1:5000)
[2m2024-05-18T13:44:47.930409Z[0m [34mDEBUG[0m [1mtrigger_container[0m[1m{[0m[3mpool[0m[2m=[0mPool { size: 2, num_idle: 1, is_closed: false, options: PoolOptions { max_connections: 5, min_connections: 0, connect_timeout: 3s, max_lifetime: Some(1800s), idle_timeout: Some(600s), test_before_acquire: true } } [3mcontainer[0m[2m=[0mContainer { container_id: 066ad216-b34d-4fb0-9aeb-0308b5ca9ccb, language: "go", user_id: Some(1990720b-0ba6-4c3f-9a3c-8be8ef391fe3), port: Some(5000) } [3mmethod[0m[2m=[0mPOST [3mquery[0m[2m=[0mRawQuery(Some("container_id=066ad216-b34d-4fb0-9aeb-0308b5ca9ccb")) [3mheader_map[0m[2m=[0m{"host": "localhost:3000", "user-agent": "Go-http-client/1.1", "content-length": "0", "api-key": "e1f11936-2004-46ee-b310-84ddb8fb8d14", "container": "066ad216-b34d-4fb0-9aeb-0308b5ca9ccb", "content-type": "application/json", "accept-encoding": "gzip"} [3mbody[0m[2m=[0mb""[1m}[0m[2m:[0m [2mhyper_util::client::legacy::pool[0m[2m:[0m pooling idle connection for ("http", 127.0.0.1:5000)
[2m2024-05-18T13:44:48.371760Z[0m [32m INFO[0m [2mkappa::routes::middleware[0m[2m:[0m api key e1f11936-2004-46ee-b310-84ddb8fb8d14
[2m2024-05-18T13:44:48.372636Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT * FROM \"user\" â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  *\nFROM\n  \"user\"\nWHERE\n  api_key = $1\n" [3mrows_affected[0m[2m=[0m0 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m151.06Âµs [3melapsed_secs[0m[2m=[0m0.00015106
[2m2024-05-18T13:44:48.373432Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT * FROM container â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  *\nFROM\n  container\nWHERE\n  user_id = $1\n" [3mrows_affected[0m[2m=[0m1 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m149.04Âµs [3melapsed_secs[0m[2m=[0m0.00014904
[2m2024-05-18T13:44:48.665348Z[0m [32m INFO[0m [2mkappa::routes::middleware[0m[2m:[0m api key e1f11936-2004-46ee-b310-84ddb8fb8d14
[2m2024-05-18T13:44:48.666285Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT * FROM \"user\" â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  *\nFROM\n  \"user\"\nWHERE\n  api_key = $1\n" [3mrows_affected[0m[2m=[0m0 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m186.211Âµs [3melapsed_secs[0m[2m=[0m0.000186211
[2m2024-05-18T13:44:48.667263Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT * FROM container â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  *\nFROM\n  container\nWHERE\n  container_id = $1\n  AND user_id = $2\n" [3mrows_affected[0m[2m=[0m0 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m138.36Âµs [3melapsed_secs[0m[2m=[0m0.00013836
[2m2024-05-18T13:44:48.696205Z[0m [35mTRACE[0m [1mtrigger_container[0m[1m{[0m[3mpool[0m[2m=[0mPool { size: 2, num_idle: 1, is_closed: false, options: PoolOptions { max_connections: 5, min_connections: 0, connect_timeout: 3s, max_lifetime: Some(1800s), idle_timeout: Some(600s), test_before_acquire: true } } [3mcontainer[0m[2m=[0mContainer { container_id: 066ad216-b34d-4fb0-9aeb-0308b5ca9ccb, language: "go", user_id: Some(1990720b-0ba6-4c3f-9a3c-8be8ef391fe3), port: Some(5000) } [3mmethod[0m[2m=[0mPOST [3mquery[0m[2m=[0mRawQuery(Some("container_id=066ad216-b34d-4fb0-9aeb-0308b5ca9ccb")) [3mheader_map[0m[2m=[0m{"host": "localhost:3000", "user-agent": "Go-http-client/1.1", "content-length": "0", "api-key": "e1f11936-2004-46ee-b310-84ddb8fb8d14", "container": "066ad216-b34d-4fb0-9aeb-0308b5ca9ccb", "content-type": "application/json", "accept-encoding": "gzip"} [3mbody[0m[2m=[0mb""[1m}[0m[2m:[0m [2mhyper_util::client::legacy::pool[0m[2m:[0m checkout waiting for idle connection: ("http", 127.0.0.1:5000)
[2m2024-05-18T13:44:48.696259Z[0m [35mTRACE[0m [1mtrigger_container[0m[1m{[0m[3mpool[0m[2m=[0mPool { size: 2, num_idle: 1, is_closed: false, options: PoolOptions { max_connections: 5, min_connections: 0, connect_timeout: 3s, max_lifetime: Some(1800s), idle_timeout: Some(600s), test_before_acquire: true } } [3mcontainer[0m[2m=[0mContainer { container_id: 066ad216-b34d-4fb0-9aeb-0308b5ca9ccb, language: "go", user_id: Some(1990720b-0ba6-4c3f-9a3c-8be8ef391fe3), port: Some(5000) } [3mmethod[0m[2m=[0mPOST [3mquery[0m[2m=[0mRawQuery(Some("container_id=066ad216-b34d-4fb0-9aeb-0308b5ca9ccb")) [3mheader_map[0m[2m=[0m{"host": "localhost:3000", "user-agent": "Go-http-client/1.1", "content-length": "0", "api-key": "e1f11936-2004-46ee-b310-84ddb8fb8d14", "container": "066ad216-b34d-4fb0-9aeb-0308b5ca9ccb", "content-type": "application/json", "accept-encoding": "gzip"} [3mbody[0m[2m=[0mb""[1m}[0m[2m:[0m [2mhyper_util::client::legacy::connect::http[0m[2m:[0m Http::connect; scheme=Some("http"), host=Some("127.0.0.1"), port=Some(Port(5000))
[2m2024-05-18T13:44:48.696304Z[0m [34mDEBUG[0m [1mtrigger_container[0m[1m{[0m[3mpool[0m[2m=[0mPool { size: 2, num_idle: 1, is_closed: false, options: PoolOptions { max_connections: 5, min_connections: 0, connect_timeout: 3s, max_lifetime: Some(1800s), idle_timeout: Some(600s), test_before_acquire: true } } [3mcontainer[0m[2m=[0mContainer { container_id: 066ad216-b34d-4fb0-9aeb-0308b5ca9ccb, language: "go", user_id: Some(1990720b-0ba6-4c3f-9a3c-8be8ef391fe3), port: Some(5000) } [3mmethod[0m[2m=[0mPOST [3mquery[0m[2m=[0mRawQuery(Some("container_id=066ad216-b34d-4fb0-9aeb-0308b5ca9ccb")) [3mheader_map[0m[2m=[0m{"host": "localhost:3000", "user-agent": "Go-http-client/1.1", "content-length": "0", "api-key": "e1f11936-2004-46ee-b310-84ddb8fb8d14", "container": "066ad216-b34d-4fb0-9aeb-0308b5ca9ccb", "content-type": "application/json", "accept-encoding": "gzip"} [3mbody[0m[2m=[0mb""[1m}[0m[2m:[0m [2mhyper_util::client::legacy::connect::http[0m[2m:[0m connecting to 127.0.0.1:5000
[2m2024-05-18T13:44:48.696482Z[0m [34mDEBUG[0m [1mtrigger_container[0m[1m{[0m[3mpool[0m[2m=[0mPool { size: 2, num_idle: 1, is_closed: false, options: PoolOptions { max_connections: 5, min_connections: 0, connect_timeout: 3s, max_lifetime: Some(1800s), idle_timeout: Some(600s), test_before_acquire: true } } [3mcontainer[0m[2m=[0mContainer { container_id: 066ad216-b34d-4fb0-9aeb-0308b5ca9ccb, language: "go", user_id: Some(1990720b-0ba6-4c3f-9a3c-8be8ef391fe3), port: Some(5000) } [3mmethod[0m[2m=[0mPOST [3mquery[0m[2m=[0mRawQuery(Some("container_id=066ad216-b34d-4fb0-9aeb-0308b5ca9ccb")) [3mheader_map[0m[2m=[0m{"host": "localhost:3000", "user-agent": "Go-http-client/1.1", "content-length": "0", "api-key": "e1f11936-2004-46ee-b310-84ddb8fb8d14", "container": "066ad216-b34d-4fb0-9aeb-0308b5ca9ccb", "content-type": "application/json", "accept-encoding": "gzip"} [3mbody[0m[2m=[0mb""[1m}[0m[2m:[0m [2mhyper_util::client::legacy::connect::http[0m[2m:[0m connected to 127.0.0.1:5000
[2m2024-05-18T13:44:48.696522Z[0m [35mTRACE[0m [1mtrigger_container[0m[1m{[0m[3mpool[0m[2m=[0mPool { size: 2, num_idle: 1, is_closed: false, options: PoolOptions { max_connections: 5, min_connections: 0, connect_timeout: 3s, max_lifetime: Some(1800s), idle_timeout: Some(600s), test_before_acquire: true } } [3mcontainer[0m[2m=[0mContainer { container_id: 066ad216-b34d-4fb0-9aeb-0308b5ca9ccb, language: "go", user_id: Some(1990720b-0ba6-4c3f-9a3c-8be8ef391fe3), port: Some(5000) } [3mmethod[0m[2m=[0mPOST [3mquery[0m[2m=[0mRawQuery(Some("container_id=066ad216-b34d-4fb0-9aeb-0308b5ca9ccb")) [3mheader_map[0m[2m=[0m{"host": "localhost:3000", "user-agent": "Go-http-client/1.1", "content-length": "0", "api-key": "e1f11936-2004-46ee-b310-84ddb8fb8d14", "container": "066ad216-b34d-4fb0-9aeb-0308b5ca9ccb", "content-type": "application/json", "accept-encoding": "gzip"} [3mbody[0m[2m=[0mb""[1m}[0m[2m:[0m [2mhyper_util::client::legacy::client[0m[2m:[0m http1 handshake complete, spawning background dispatcher task
[2m2024-05-18T13:44:48.696594Z[0m [35mTRACE[0m [1mtrigger_container[0m[1m{[0m[3mpool[0m[2m=[0mPool { size: 2, num_idle: 1, is_closed: false, options: PoolOptions { max_connections: 5, min_connections: 0, connect_timeout: 3s, max_lifetime: Some(1800s), idle_timeout: Some(600s), test_before_acquire: true } } [3mcontainer[0m[2m=[0mContainer { container_id: 066ad216-b34d-4fb0-9aeb-0308b5ca9ccb, language: "go", user_id: Some(1990720b-0ba6-4c3f-9a3c-8be8ef391fe3), port: Some(5000) } [3mmethod[0m[2m=[0mPOST [3mquery[0m[2m=[0mRawQuery(Some("container_id=066ad216-b34d-4fb0-9aeb-0308b5ca9ccb")) [3mheader_map[0m[2m=[0m{"host": "localhost:3000", "user-agent": "Go-http-client/1.1", "content-length": "0", "api-key": "e1f11936-2004-46ee-b310-84ddb8fb8d14", "container": "066ad216-b34d-4fb0-9aeb-0308b5ca9ccb", "content-type": "application/json", "accept-encoding": "gzip"} [3mbody[0m[2m=[0mb""[1m}[0m[2m:[0m [2mhyper_util::client::legacy::pool[0m[2m:[0m checkout dropped for ("http", 127.0.0.1:5000)
[2m2024-05-18T13:44:48.696897Z[0m [35mTRACE[0m [1mtrigger_container[0m[1m{[0m[3mpool[0m[2m=[0mPool { size: 2, num_idle: 1, is_closed: false, options: PoolOptions { max_connections: 5, min_connections: 0, connect_timeout: 3s, max_lifetime: Some(1800s), idle_timeout: Some(600s), test_before_acquire: true } } [3mcontainer[0m[2m=[0mContainer { container_id: 066ad216-b34d-4fb0-9aeb-0308b5ca9ccb, language: "go", user_id: Some(1990720b-0ba6-4c3f-9a3c-8be8ef391fe3), port: Some(5000) } [3mmethod[0m[2m=[0mPOST [3mquery[0m[2m=[0mRawQuery(Some("container_id=066ad216-b34d-4fb0-9aeb-0308b5ca9ccb")) [3mheader_map[0m[2m=[0m{"host": "localhost:3000", "user-agent": "Go-http-client/1.1", "content-length": "0", "api-key": "e1f11936-2004-46ee-b310-84ddb8fb8d14", "container": "066ad216-b34d-4fb0-9aeb-0308b5ca9ccb", "content-type": "application/json", "accept-encoding": "gzip"} [3mbody[0m[2m=[0mb""[1m}[0m[2m:[0m [2mhyper_util::client::legacy::pool[0m[2m:[0m put; add idle connection for ("http", 127.0.0.1:5000)
[2m2024-05-18T13:44:48.696947Z[0m [34mDEBUG[0m [1mtrigger_container[0m[1m{[0m[3mpool[0m[2m=[0mPool { size: 2, num_idle: 1, is_closed: false, options: PoolOptions { max_connections: 5, min_connections: 0, connect_timeout: 3s, max_lifetime: Some(1800s), idle_timeout: Some(600s), test_before_acquire: true } } [3mcontainer[0m[2m=[0mContainer { container_id: 066ad216-b34d-4fb0-9aeb-0308b5ca9ccb, language: "go", user_id: Some(1990720b-0ba6-4c3f-9a3c-8be8ef391fe3), port: Some(5000) } [3mmethod[0m[2m=[0mPOST [3mquery[0m[2m=[0mRawQuery(Some("container_id=066ad216-b34d-4fb0-9aeb-0308b5ca9ccb")) [3mheader_map[0m[2m=[0m{"host": "localhost:3000", "user-agent": "Go-http-client/1.1", "content-length": "0", "api-key": "e1f11936-2004-46ee-b310-84ddb8fb8d14", "container": "066ad216-b34d-4fb0-9aeb-0308b5ca9ccb", "content-type": "application/json", "accept-encoding": "gzip"} [3mbody[0m[2m=[0mb""[1m}[0m[2m:[0m [2mhyper_util::client::legacy::pool[0m[2m:[0m pooling idle connection for ("http", 127.0.0.1:5000)
[2m2024-05-18T13:44:49.114859Z[0m [32m INFO[0m [2mkappa::routes::middleware[0m[2m:[0m api key e1f11936-2004-46ee-b310-84ddb8fb8d14
[2m2024-05-18T13:44:49.115774Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT * FROM \"user\" â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  *\nFROM\n  \"user\"\nWHERE\n  api_key = $1\n" [3mrows_affected[0m[2m=[0m0 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m174.251Âµs [3melapsed_secs[0m[2m=[0m0.000174251
[2m2024-05-18T13:44:49.116592Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT * FROM container â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  *\nFROM\n  container\nWHERE\n  user_id = $1\n" [3mrows_affected[0m[2m=[0m1 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m130.841Âµs [3melapsed_secs[0m[2m=[0m0.000130841
[2m2024-05-18T13:44:49.403340Z[0m [32m INFO[0m [2mkappa::routes::middleware[0m[2m:[0m api key e1f11936-2004-46ee-b310-84ddb8fb8d14
[2m2024-05-18T13:44:49.404339Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT * FROM \"user\" â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  *\nFROM\n  \"user\"\nWHERE\n  api_key = $1\n" [3mrows_affected[0m[2m=[0m0 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m235.22Âµs [3melapsed_secs[0m[2m=[0m0.00023522
[2m2024-05-18T13:44:49.405299Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT * FROM container â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  *\nFROM\n  container\nWHERE\n  container_id = $1\n  AND user_id = $2\n" [3mrows_affected[0m[2m=[0m0 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m130.01Âµs [3melapsed_secs[0m[2m=[0m0.00013001
[2m2024-05-18T13:44:49.434179Z[0m [35mTRACE[0m [1mtrigger_container[0m[1m{[0m[3mpool[0m[2m=[0mPool { size: 2, num_idle: 1, is_closed: false, options: PoolOptions { max_connections: 5, min_connections: 0, connect_timeout: 3s, max_lifetime: Some(1800s), idle_timeout: Some(600s), test_before_acquire: true } } [3mcontainer[0m[2m=[0mContainer { container_id: 066ad216-b34d-4fb0-9aeb-0308b5ca9ccb, language: "go", user_id: Some(1990720b-0ba6-4c3f-9a3c-8be8ef391fe3), port: Some(5000) } [3mmethod[0m[2m=[0mPOST [3mquery[0m[2m=[0mRawQuery(Some("container_id=066ad216-b34d-4fb0-9aeb-0308b5ca9ccb")) [3mheader_map[0m[2m=[0m{"host": "localhost:3000", "user-agent": "Go-http-client/1.1", "content-length": "0", "api-key": "e1f11936-2004-46ee-b310-84ddb8fb8d14", "container": "066ad216-b34d-4fb0-9aeb-0308b5ca9ccb", "content-type": "application/json", "accept-encoding": "gzip"} [3mbody[0m[2m=[0mb""[1m}[0m[2m:[0m [2mhyper_util::client::legacy::pool[0m[2m:[0m checkout waiting for idle connection: ("http", 127.0.0.1:5000)
[2m2024-05-18T13:44:49.434234Z[0m [35mTRACE[0m [1mtrigger_container[0m[1m{[0m[3mpool[0m[2m=[0mPool { size: 2, num_idle: 1, is_closed: false, options: PoolOptions { max_connections: 5, min_connections: 0, connect_timeout: 3s, max_lifetime: Some(1800s), idle_timeout: Some(600s), test_before_acquire: true } } [3mcontainer[0m[2m=[0mContainer { container_id: 066ad216-b34d-4fb0-9aeb-0308b5ca9ccb, language: "go", user_id: Some(1990720b-0ba6-4c3f-9a3c-8be8ef391fe3), port: Some(5000) } [3mmethod[0m[2m=[0mPOST [3mquery[0m[2m=[0mRawQuery(Some("container_id=066ad216-b34d-4fb0-9aeb-0308b5ca9ccb")) [3mheader_map[0m[2m=[0m{"host": "localhost:3000", "user-agent": "Go-http-client/1.1", "content-length": "0", "api-key": "e1f11936-2004-46ee-b310-84ddb8fb8d14", "container": "066ad216-b34d-4fb0-9aeb-0308b5ca9ccb", "content-type": "application/json", "accept-encoding": "gzip"} [3mbody[0m[2m=[0mb""[1m}[0m[2m:[0m [2mhyper_util::client::legacy::connect::http[0m[2m:[0m Http::connect; scheme=Some("http"), host=Some("127.0.0.1"), port=Some(Port(5000))
[2m2024-05-18T13:44:49.434286Z[0m [34mDEBUG[0m [1mtrigger_container[0m[1m{[0m[3mpool[0m[2m=[0mPool { size: 2, num_idle: 1, is_closed: false, options: PoolOptions { max_connections: 5, min_connections: 0, connect_timeout: 3s, max_lifetime: Some(1800s), idle_timeout: Some(600s), test_before_acquire: true } } [3mcontainer[0m[2m=[0mContainer { container_id: 066ad216-b34d-4fb0-9aeb-0308b5ca9ccb, language: "go", user_id: Some(1990720b-0ba6-4c3f-9a3c-8be8ef391fe3), port: Some(5000) } [3mmethod[0m[2m=[0mPOST [3mquery[0m[2m=[0mRawQuery(Some("container_id=066ad216-b34d-4fb0-9aeb-0308b5ca9ccb")) [3mheader_map[0m[2m=[0m{"host": "localhost:3000", "user-agent": "Go-http-client/1.1", "content-length": "0", "api-key": "e1f11936-2004-46ee-b310-84ddb8fb8d14", "container": "066ad216-b34d-4fb0-9aeb-0308b5ca9ccb", "content-type": "application/json", "accept-encoding": "gzip"} [3mbody[0m[2m=[0mb""[1m}[0m[2m:[0m [2mhyper_util::client::legacy::connect::http[0m[2m:[0m connecting to 127.0.0.1:5000
[2m2024-05-18T13:44:49.434457Z[0m [34mDEBUG[0m [1mtrigger_container[0m[1m{[0m[3mpool[0m[2m=[0mPool { size: 2, num_idle: 1, is_closed: false, options: PoolOptions { max_connections: 5, min_connections: 0, connect_timeout: 3s, max_lifetime: Some(1800s), idle_timeout: Some(600s), test_before_acquire: true } } [3mcontainer[0m[2m=[0mContainer { container_id: 066ad216-b34d-4fb0-9aeb-0308b5ca9ccb, language: "go", user_id: Some(1990720b-0ba6-4c3f-9a3c-8be8ef391fe3), port: Some(5000) } [3mmethod[0m[2m=[0mPOST [3mquery[0m[2m=[0mRawQuery(Some("container_id=066ad216-b34d-4fb0-9aeb-0308b5ca9ccb")) [3mheader_map[0m[2m=[0m{"host": "localhost:3000", "user-agent": "Go-http-client/1.1", "content-length": "0", "api-key": "e1f11936-2004-46ee-b310-84ddb8fb8d14", "container": "066ad216-b34d-4fb0-9aeb-0308b5ca9ccb", "content-type": "application/json", "accept-encoding": "gzip"} [3mbody[0m[2m=[0mb""[1m}[0m[2m:[0m [2mhyper_util::client::legacy::connect::http[0m[2m:[0m connected to 127.0.0.1:5000
[2m2024-05-18T13:44:49.434498Z[0m [35mTRACE[0m [1mtrigger_container[0m[1m{[0m[3mpool[0m[2m=[0mPool { size: 2, num_idle: 1, is_closed: false, options: PoolOptions { max_connections: 5, min_connections: 0, connect_timeout: 3s, max_lifetime: Some(1800s), idle_timeout: Some(600s), test_before_acquire: true } } [3mcontainer[0m[2m=[0mContainer { container_id: 066ad216-b34d-4fb0-9aeb-0308b5ca9ccb, language: "go", user_id: Some(1990720b-0ba6-4c3f-9a3c-8be8ef391fe3), port: Some(5000) } [3mmethod[0m[2m=[0mPOST [3mquery[0m[2m=[0mRawQuery(Some("container_id=066ad216-b34d-4fb0-9aeb-0308b5ca9ccb")) [3mheader_map[0m[2m=[0m{"host": "localhost:3000", "user-agent": "Go-http-client/1.1", "content-length": "0", "api-key": "e1f11936-2004-46ee-b310-84ddb8fb8d14", "container": "066ad216-b34d-4fb0-9aeb-0308b5ca9ccb", "content-type": "application/json", "accept-encoding": "gzip"} [3mbody[0m[2m=[0mb""[1m}[0m[2m:[0m [2mhyper_util::client::legacy::client[0m[2m:[0m http1 handshake complete, spawning background dispatcher task
[2m2024-05-18T13:44:49.434570Z[0m [35mTRACE[0m [1mtrigger_container[0m[1m{[0m[3mpool[0m[2m=[0mPool { size: 2, num_idle: 1, is_closed: false, options: PoolOptions { max_connections: 5, min_connections: 0, connect_timeout: 3s, max_lifetime: Some(1800s), idle_timeout: Some(600s), test_before_acquire: true } } [3mcontainer[0m[2m=[0mContainer { container_id: 066ad216-b34d-4fb0-9aeb-0308b5ca9ccb, language: "go", user_id: Some(1990720b-0ba6-4c3f-9a3c-8be8ef391fe3), port: Some(5000) } [3mmethod[0m[2m=[0mPOST [3mquery[0m[2m=[0mRawQuery(Some("container_id=066ad216-b34d-4fb0-9aeb-0308b5ca9ccb")) [3mheader_map[0m[2m=[0m{"host": "localhost:3000", "user-agent": "Go-http-client/1.1", "content-length": "0", "api-key": "e1f11936-2004-46ee-b310-84ddb8fb8d14", "container": "066ad216-b34d-4fb0-9aeb-0308b5ca9ccb", "content-type": "application/json", "accept-encoding": "gzip"} [3mbody[0m[2m=[0mb""[1m}[0m[2m:[0m [2mhyper_util::client::legacy::pool[0m[2m:[0m checkout dropped for ("http", 127.0.0.1:5000)
[2m2024-05-18T13:44:49.434859Z[0m [35mTRACE[0m [1mtrigger_container[0m[1m{[0m[3mpool[0m[2m=[0mPool { size: 2, num_idle: 1, is_closed: false, options: PoolOptions { max_connections: 5, min_connections: 0, connect_timeout: 3s, max_lifetime: Some(1800s), idle_timeout: Some(600s), test_before_acquire: true } } [3mcontainer[0m[2m=[0mContainer { container_id: 066ad216-b34d-4fb0-9aeb-0308b5ca9ccb, language: "go", user_id: Some(1990720b-0ba6-4c3f-9a3c-8be8ef391fe3), port: Some(5000) } [3mmethod[0m[2m=[0mPOST [3mquery[0m[2m=[0mRawQuery(Some("container_id=066ad216-b34d-4fb0-9aeb-0308b5ca9ccb")) [3mheader_map[0m[2m=[0m{"host": "localhost:3000", "user-agent": "Go-http-client/1.1", "content-length": "0", "api-key": "e1f11936-2004-46ee-b310-84ddb8fb8d14", "container": "066ad216-b34d-4fb0-9aeb-0308b5ca9ccb", "content-type": "application/json", "accept-encoding": "gzip"} [3mbody[0m[2m=[0mb""[1m}[0m[2m:[0m [2mhyper_util::client::legacy::pool[0m[2m:[0m put; add idle connection for ("http", 127.0.0.1:5000)
[2m2024-05-18T13:44:49.434903Z[0m [34mDEBUG[0m [1mtrigger_container[0m[1m{[0m[3mpool[0m[2m=[0mPool { size: 2, num_idle: 1, is_closed: false, options: PoolOptions { max_connections: 5, min_connections: 0, connect_timeout: 3s, max_lifetime: Some(1800s), idle_timeout: Some(600s), test_before_acquire: true } } [3mcontainer[0m[2m=[0mContainer { container_id: 066ad216-b34d-4fb0-9aeb-0308b5ca9ccb, language: "go", user_id: Some(1990720b-0ba6-4c3f-9a3c-8be8ef391fe3), port: Some(5000) } [3mmethod[0m[2m=[0mPOST [3mquery[0m[2m=[0mRawQuery(Some("container_id=066ad216-b34d-4fb0-9aeb-0308b5ca9ccb")) [3mheader_map[0m[2m=[0m{"host": "localhost:3000", "user-agent": "Go-http-client/1.1", "content-length": "0", "api-key": "e1f11936-2004-46ee-b310-84ddb8fb8d14", "container": "066ad216-b34d-4fb0-9aeb-0308b5ca9ccb", "content-type": "application/json", "accept-encoding": "gzip"} [3mbody[0m[2m=[0mb""[1m}[0m[2m:[0m [2mhyper_util::client::legacy::pool[0m[2m:[0m pooling idle connection for ("http", 127.0.0.1:5000)
[2m2024-05-18T13:44:49.833849Z[0m [32m INFO[0m [2mkappa::routes::middleware[0m[2m:[0m api key e1f11936-2004-46ee-b310-84ddb8fb8d14
[2m2024-05-18T13:44:49.834775Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT * FROM \"user\" â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  *\nFROM\n  \"user\"\nWHERE\n  api_key = $1\n" [3mrows_affected[0m[2m=[0m0 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m178.39Âµs [3melapsed_secs[0m[2m=[0m0.00017839
[2m2024-05-18T13:44:49.835551Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT * FROM container â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  *\nFROM\n  container\nWHERE\n  user_id = $1\n" [3mrows_affected[0m[2m=[0m1 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m135.75Âµs [3melapsed_secs[0m[2m=[0m0.00013575
[2m2024-05-18T13:44:50.137343Z[0m [32m INFO[0m [2mkappa::routes::middleware[0m[2m:[0m api key e1f11936-2004-46ee-b310-84ddb8fb8d14
[2m2024-05-18T13:44:50.138281Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT * FROM \"user\" â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  *\nFROM\n  \"user\"\nWHERE\n  api_key = $1\n" [3mrows_affected[0m[2m=[0m0 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m190.031Âµs [3melapsed_secs[0m[2m=[0m0.000190031
[2m2024-05-18T13:44:50.139248Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT * FROM container â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  *\nFROM\n  container\nWHERE\n  container_id = $1\n  AND user_id = $2\n" [3mrows_affected[0m[2m=[0m0 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m125.48Âµs [3melapsed_secs[0m[2m=[0m0.00012548
[2m2024-05-18T13:44:50.168027Z[0m [35mTRACE[0m [1mtrigger_container[0m[1m{[0m[3mpool[0m[2m=[0mPool { size: 2, num_idle: 1, is_closed: false, options: PoolOptions { max_connections: 5, min_connections: 0, connect_timeout: 3s, max_lifetime: Some(1800s), idle_timeout: Some(600s), test_before_acquire: true } } [3mcontainer[0m[2m=[0mContainer { container_id: 066ad216-b34d-4fb0-9aeb-0308b5ca9ccb, language: "go", user_id: Some(1990720b-0ba6-4c3f-9a3c-8be8ef391fe3), port: Some(5000) } [3mmethod[0m[2m=[0mPOST [3mquery[0m[2m=[0mRawQuery(Some("container_id=066ad216-b34d-4fb0-9aeb-0308b5ca9ccb")) [3mheader_map[0m[2m=[0m{"host": "localhost:3000", "user-agent": "Go-http-client/1.1", "content-length": "0", "api-key": "e1f11936-2004-46ee-b310-84ddb8fb8d14", "container": "066ad216-b34d-4fb0-9aeb-0308b5ca9ccb", "content-type": "application/json", "accept-encoding": "gzip"} [3mbody[0m[2m=[0mb""[1m}[0m[2m:[0m [2mhyper_util::client::legacy::pool[0m[2m:[0m checkout waiting for idle connection: ("http", 127.0.0.1:5000)
[2m2024-05-18T13:44:50.168081Z[0m [35mTRACE[0m [1mtrigger_container[0m[1m{[0m[3mpool[0m[2m=[0mPool { size: 2, num_idle: 1, is_closed: false, options: PoolOptions { max_connections: 5, min_connections: 0, connect_timeout: 3s, max_lifetime: Some(1800s), idle_timeout: Some(600s), test_before_acquire: true } } [3mcontainer[0m[2m=[0mContainer { container_id: 066ad216-b34d-4fb0-9aeb-0308b5ca9ccb, language: "go", user_id: Some(1990720b-0ba6-4c3f-9a3c-8be8ef391fe3), port: Some(5000) } [3mmethod[0m[2m=[0mPOST [3mquery[0m[2m=[0mRawQuery(Some("container_id=066ad216-b34d-4fb0-9aeb-0308b5ca9ccb")) [3mheader_map[0m[2m=[0m{"host": "localhost:3000", "user-agent": "Go-http-client/1.1", "content-length": "0", "api-key": "e1f11936-2004-46ee-b310-84ddb8fb8d14", "container": "066ad216-b34d-4fb0-9aeb-0308b5ca9ccb", "content-type": "application/json", "accept-encoding": "gzip"} [3mbody[0m[2m=[0mb""[1m}[0m[2m:[0m [2mhyper_util::client::legacy::connect::http[0m[2m:[0m Http::connect; scheme=Some("http"), host=Some("127.0.0.1"), port=Some(Port(5000))
[2m2024-05-18T13:44:50.168126Z[0m [34mDEBUG[0m [1mtrigger_container[0m[1m{[0m[3mpool[0m[2m=[0mPool { size: 2, num_idle: 1, is_closed: false, options: PoolOptions { max_connections: 5, min_connections: 0, connect_timeout: 3s, max_lifetime: Some(1800s), idle_timeout: Some(600s), test_before_acquire: true } } [3mcontainer[0m[2m=[0mContainer { container_id: 066ad216-b34d-4fb0-9aeb-0308b5ca9ccb, language: "go", user_id: Some(1990720b-0ba6-4c3f-9a3c-8be8ef391fe3), port: Some(5000) } [3mmethod[0m[2m=[0mPOST [3mquery[0m[2m=[0mRawQuery(Some("container_id=066ad216-b34d-4fb0-9aeb-0308b5ca9ccb")) [3mheader_map[0m[2m=[0m{"host": "localhost:3000", "user-agent": "Go-http-client/1.1", "content-length": "0", "api-key": "e1f11936-2004-46ee-b310-84ddb8fb8d14", "container": "066ad216-b34d-4fb0-9aeb-0308b5ca9ccb", "content-type": "application/json", "accept-encoding": "gzip"} [3mbody[0m[2m=[0mb""[1m}[0m[2m:[0m [2mhyper_util::client::legacy::connect::http[0m[2m:[0m connecting to 127.0.0.1:5000
[2m2024-05-18T13:44:50.168296Z[0m [34mDEBUG[0m [1mtrigger_container[0m[1m{[0m[3mpool[0m[2m=[0mPool { size: 2, num_idle: 1, is_closed: false, options: PoolOptions { max_connections: 5, min_connections: 0, connect_timeout: 3s, max_lifetime: Some(1800s), idle_timeout: Some(600s), test_before_acquire: true } } [3mcontainer[0m[2m=[0mContainer { container_id: 066ad216-b34d-4fb0-9aeb-0308b5ca9ccb, language: "go", user_id: Some(1990720b-0ba6-4c3f-9a3c-8be8ef391fe3), port: Some(5000) } [3mmethod[0m[2m=[0mPOST [3mquery[0m[2m=[0mRawQuery(Some("container_id=066ad216-b34d-4fb0-9aeb-0308b5ca9ccb")) [3mheader_map[0m[2m=[0m{"host": "localhost:3000", "user-agent": "Go-http-client/1.1", "content-length": "0", "api-key": "e1f11936-2004-46ee-b310-84ddb8fb8d14", "container": "066ad216-b34d-4fb0-9aeb-0308b5ca9ccb", "content-type": "application/json", "accept-encoding": "gzip"} [3mbody[0m[2m=[0mb""[1m}[0m[2m:[0m [2mhyper_util::client::legacy::connect::http[0m[2m:[0m connected to 127.0.0.1:5000
[2m2024-05-18T13:44:50.168341Z[0m [35mTRACE[0m [1mtrigger_container[0m[1m{[0m[3mpool[0m[2m=[0mPool { size: 2, num_idle: 1, is_closed: false, options: PoolOptions { max_connections: 5, min_connections: 0, connect_timeout: 3s, max_lifetime: Some(1800s), idle_timeout: Some(600s), test_before_acquire: true } } [3mcontainer[0m[2m=[0mContainer { container_id: 066ad216-b34d-4fb0-9aeb-0308b5ca9ccb, language: "go", user_id: Some(1990720b-0ba6-4c3f-9a3c-8be8ef391fe3), port: Some(5000) } [3mmethod[0m[2m=[0mPOST [3mquery[0m[2m=[0mRawQuery(Some("container_id=066ad216-b34d-4fb0-9aeb-0308b5ca9ccb")) [3mheader_map[0m[2m=[0m{"host": "localhost:3000", "user-agent": "Go-http-client/1.1", "content-length": "0", "api-key": "e1f11936-2004-46ee-b310-84ddb8fb8d14", "container": "066ad216-b34d-4fb0-9aeb-0308b5ca9ccb", "content-type": "application/json", "accept-encoding": "gzip"} [3mbody[0m[2m=[0mb""[1m}[0m[2m:[0m [2mhyper_util::client::legacy::client[0m[2m:[0m http1 handshake complete, spawning background dispatcher task
[2m2024-05-18T13:44:50.168409Z[0m [35mTRACE[0m [1mtrigger_container[0m[1m{[0m[3mpool[0m[2m=[0mPool { size: 2, num_idle: 1, is_closed: false, options: PoolOptions { max_connections: 5, min_connections: 0, connect_timeout: 3s, max_lifetime: Some(1800s), idle_timeout: Some(600s), test_before_acquire: true } } [3mcontainer[0m[2m=[0mContainer { container_id: 066ad216-b34d-4fb0-9aeb-0308b5ca9ccb, language: "go", user_id: Some(1990720b-0ba6-4c3f-9a3c-8be8ef391fe3), port: Some(5000) } [3mmethod[0m[2m=[0mPOST [3mquery[0m[2m=[0mRawQuery(Some("container_id=066ad216-b34d-4fb0-9aeb-0308b5ca9ccb")) [3mheader_map[0m[2m=[0m{"host": "localhost:3000", "user-agent": "Go-http-client/1.1", "content-length": "0", "api-key": "e1f11936-2004-46ee-b310-84ddb8fb8d14", "container": "066ad216-b34d-4fb0-9aeb-0308b5ca9ccb", "content-type": "application/json", "accept-encoding": "gzip"} [3mbody[0m[2m=[0mb""[1m}[0m[2m:[0m [2mhyper_util::client::legacy::pool[0m[2m:[0m checkout dropped for ("http", 127.0.0.1:5000)
[2m2024-05-18T13:44:50.168711Z[0m [35mTRACE[0m [1mtrigger_container[0m[1m{[0m[3mpool[0m[2m=[0mPool { size: 2, num_idle: 1, is_closed: false, options: PoolOptions { max_connections: 5, min_connections: 0, connect_timeout: 3s, max_lifetime: Some(1800s), idle_timeout: Some(600s), test_before_acquire: true } } [3mcontainer[0m[2m=[0mContainer { container_id: 066ad216-b34d-4fb0-9aeb-0308b5ca9ccb, language: "go", user_id: Some(1990720b-0ba6-4c3f-9a3c-8be8ef391fe3), port: Some(5000) } [3mmethod[0m[2m=[0mPOST [3mquery[0m[2m=[0mRawQuery(Some("container_id=066ad216-b34d-4fb0-9aeb-0308b5ca9ccb")) [3mheader_map[0m[2m=[0m{"host": "localhost:3000", "user-agent": "Go-http-client/1.1", "content-length": "0", "api-key": "e1f11936-2004-46ee-b310-84ddb8fb8d14", "container": "066ad216-b34d-4fb0-9aeb-0308b5ca9ccb", "content-type": "application/json", "accept-encoding": "gzip"} [3mbody[0m[2m=[0mb""[1m}[0m[2m:[0m [2mhyper_util::client::legacy::pool[0m[2m:[0m put; add idle connection for ("http", 127.0.0.1:5000)
[2m2024-05-18T13:44:50.168769Z[0m [34mDEBUG[0m [1mtrigger_container[0m[1m{[0m[3mpool[0m[2m=[0mPool { size: 2, num_idle: 1, is_closed: false, options: PoolOptions { max_connections: 5, min_connections: 0, connect_timeout: 3s, max_lifetime: Some(1800s), idle_timeout: Some(600s), test_before_acquire: true } } [3mcontainer[0m[2m=[0mContainer { container_id: 066ad216-b34d-4fb0-9aeb-0308b5ca9ccb, language: "go", user_id: Some(1990720b-0ba6-4c3f-9a3c-8be8ef391fe3), port: Some(5000) } [3mmethod[0m[2m=[0mPOST [3mquery[0m[2m=[0mRawQuery(Some("container_id=066ad216-b34d-4fb0-9aeb-0308b5ca9ccb")) [3mheader_map[0m[2m=[0m{"host": "localhost:3000", "user-agent": "Go-http-client/1.1", "content-length": "0", "api-key": "e1f11936-2004-46ee-b310-84ddb8fb8d14", "container": "066ad216-b34d-4fb0-9aeb-0308b5ca9ccb", "content-type": "application/json", "accept-encoding": "gzip"} [3mbody[0m[2m=[0mb""[1m}[0m[2m:[0m [2mhyper_util::client::legacy::pool[0m[2m:[0m pooling idle connection for ("http", 127.0.0.1:5000)
[2m2024-05-18T13:44:51.802595Z[0m [32m INFO[0m [2mkappa::routes::middleware[0m[2m:[0m api key e1f11936-2004-46ee-b310-84ddb8fb8d14
[2m2024-05-18T13:44:51.803588Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT * FROM \"user\" â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  *\nFROM\n  \"user\"\nWHERE\n  api_key = $1\n" [3mrows_affected[0m[2m=[0m0 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m215.11Âµs [3melapsed_secs[0m[2m=[0m0.00021511
[2m2024-05-18T13:44:51.804438Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT * FROM container â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  *\nFROM\n  container\nWHERE\n  user_id = $1\n" [3mrows_affected[0m[2m=[0m1 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m176.071Âµs [3melapsed_secs[0m[2m=[0m0.000176071
[2m2024-05-18T13:44:52.066380Z[0m [32m INFO[0m [2mkappa::routes::middleware[0m[2m:[0m api key e1f11936-2004-46ee-b310-84ddb8fb8d14
[2m2024-05-18T13:44:52.067473Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT * FROM \"user\" â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  *\nFROM\n  \"user\"\nWHERE\n  api_key = $1\n" [3mrows_affected[0m[2m=[0m0 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m235.3Âµs [3melapsed_secs[0m[2m=[0m0.0002353
[2m2024-05-18T13:44:52.068454Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT * FROM container â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  *\nFROM\n  container\nWHERE\n  container_id = $1\n  AND user_id = $2\n" [3mrows_affected[0m[2m=[0m0 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m120.98Âµs [3melapsed_secs[0m[2m=[0m0.00012098
[2m2024-05-18T13:44:52.097351Z[0m [35mTRACE[0m [1mtrigger_container[0m[1m{[0m[3mpool[0m[2m=[0mPool { size: 2, num_idle: 1, is_closed: false, options: PoolOptions { max_connections: 5, min_connections: 0, connect_timeout: 3s, max_lifetime: Some(1800s), idle_timeout: Some(600s), test_before_acquire: true } } [3mcontainer[0m[2m=[0mContainer { container_id: 066ad216-b34d-4fb0-9aeb-0308b5ca9ccb, language: "go", user_id: Some(1990720b-0ba6-4c3f-9a3c-8be8ef391fe3), port: Some(5000) } [3mmethod[0m[2m=[0mPOST [3mquery[0m[2m=[0mRawQuery(Some("container_id=066ad216-b34d-4fb0-9aeb-0308b5ca9ccb")) [3mheader_map[0m[2m=[0m{"host": "localhost:3000", "user-agent": "Go-http-client/1.1", "content-length": "0", "api-key": "e1f11936-2004-46ee-b310-84ddb8fb8d14", "container": "066ad216-b34d-4fb0-9aeb-0308b5ca9ccb", "content-type": "application/json", "accept-encoding": "gzip"} [3mbody[0m[2m=[0mb""[1m}[0m[2m:[0m [2mhyper_util::client::legacy::pool[0m[2m:[0m checkout waiting for idle connection: ("http", 127.0.0.1:5000)
[2m2024-05-18T13:44:52.097405Z[0m [35mTRACE[0m [1mtrigger_container[0m[1m{[0m[3mpool[0m[2m=[0mPool { size: 2, num_idle: 1, is_closed: false, options: PoolOptions { max_connections: 5, min_connections: 0, connect_timeout: 3s, max_lifetime: Some(1800s), idle_timeout: Some(600s), test_before_acquire: true } } [3mcontainer[0m[2m=[0mContainer { container_id: 066ad216-b34d-4fb0-9aeb-0308b5ca9ccb, language: "go", user_id: Some(1990720b-0ba6-4c3f-9a3c-8be8ef391fe3), port: Some(5000) } [3mmethod[0m[2m=[0mPOST [3mquery[0m[2m=[0mRawQuery(Some("container_id=066ad216-b34d-4fb0-9aeb-0308b5ca9ccb")) [3mheader_map[0m[2m=[0m{"host": "localhost:3000", "user-agent": "Go-http-client/1.1", "content-length": "0", "api-key": "e1f11936-2004-46ee-b310-84ddb8fb8d14", "container": "066ad216-b34d-4fb0-9aeb-0308b5ca9ccb", "content-type": "application/json", "accept-encoding": "gzip"} [3mbody[0m[2m=[0mb""[1m}[0m[2m:[0m [2mhyper_util::client::legacy::connect::http[0m[2m:[0m Http::connect; scheme=Some("http"), host=Some("127.0.0.1"), port=Some(Port(5000))
[2m2024-05-18T13:44:52.097456Z[0m [34mDEBUG[0m [1mtrigger_container[0m[1m{[0m[3mpool[0m[2m=[0mPool { size: 2, num_idle: 1, is_closed: false, options: PoolOptions { max_connections: 5, min_connections: 0, connect_timeout: 3s, max_lifetime: Some(1800s), idle_timeout: Some(600s), test_before_acquire: true } } [3mcontainer[0m[2m=[0mContainer { container_id: 066ad216-b34d-4fb0-9aeb-0308b5ca9ccb, language: "go", user_id: Some(1990720b-0ba6-4c3f-9a3c-8be8ef391fe3), port: Some(5000) } [3mmethod[0m[2m=[0mPOST [3mquery[0m[2m=[0mRawQuery(Some("container_id=066ad216-b34d-4fb0-9aeb-0308b5ca9ccb")) [3mheader_map[0m[2m=[0m{"host": "localhost:3000", "user-agent": "Go-http-client/1.1", "content-length": "0", "api-key": "e1f11936-2004-46ee-b310-84ddb8fb8d14", "container": "066ad216-b34d-4fb0-9aeb-0308b5ca9ccb", "content-type": "application/json", "accept-encoding": "gzip"} [3mbody[0m[2m=[0mb""[1m}[0m[2m:[0m [2mhyper_util::client::legacy::connect::http[0m[2m:[0m connecting to 127.0.0.1:5000
[2m2024-05-18T13:44:52.097631Z[0m [34mDEBUG[0m [1mtrigger_container[0m[1m{[0m[3mpool[0m[2m=[0mPool { size: 2, num_idle: 1, is_closed: false, options: PoolOptions { max_connections: 5, min_connections: 0, connect_timeout: 3s, max_lifetime: Some(1800s), idle_timeout: Some(600s), test_before_acquire: true } } [3mcontainer[0m[2m=[0mContainer { container_id: 066ad216-b34d-4fb0-9aeb-0308b5ca9ccb, language: "go", user_id: Some(1990720b-0ba6-4c3f-9a3c-8be8ef391fe3), port: Some(5000) } [3mmethod[0m[2m=[0mPOST [3mquery[0m[2m=[0mRawQuery(Some("container_id=066ad216-b34d-4fb0-9aeb-0308b5ca9ccb")) [3mheader_map[0m[2m=[0m{"host": "localhost:3000", "user-agent": "Go-http-client/1.1", "content-length": "0", "api-key": "e1f11936-2004-46ee-b310-84ddb8fb8d14", "container": "066ad216-b34d-4fb0-9aeb-0308b5ca9ccb", "content-type": "application/json", "accept-encoding": "gzip"} [3mbody[0m[2m=[0mb""[1m}[0m[2m:[0m [2mhyper_util::client::legacy::connect::http[0m[2m:[0m connected to 127.0.0.1:5000
[2m2024-05-18T13:44:52.097670Z[0m [35mTRACE[0m [1mtrigger_container[0m[1m{[0m[3mpool[0m[2m=[0mPool { size: 2, num_idle: 1, is_closed: false, options: PoolOptions { max_connections: 5, min_connections: 0, connect_timeout: 3s, max_lifetime: Some(1800s), idle_timeout: Some(600s), test_before_acquire: true } } [3mcontainer[0m[2m=[0mContainer { container_id: 066ad216-b34d-4fb0-9aeb-0308b5ca9ccb, language: "go", user_id: Some(1990720b-0ba6-4c3f-9a3c-8be8ef391fe3), port: Some(5000) } [3mmethod[0m[2m=[0mPOST [3mquery[0m[2m=[0mRawQuery(Some("container_id=066ad216-b34d-4fb0-9aeb-0308b5ca9ccb")) [3mheader_map[0m[2m=[0m{"host": "localhost:3000", "user-agent": "Go-http-client/1.1", "content-length": "0", "api-key": "e1f11936-2004-46ee-b310-84ddb8fb8d14", "container": "066ad216-b34d-4fb0-9aeb-0308b5ca9ccb", "content-type": "application/json", "accept-encoding": "gzip"} [3mbody[0m[2m=[0mb""[1m}[0m[2m:[0m [2mhyper_util::client::legacy::client[0m[2m:[0m http1 handshake complete, spawning background dispatcher task
[2m2024-05-18T13:44:52.097738Z[0m [35mTRACE[0m [1mtrigger_container[0m[1m{[0m[3mpool[0m[2m=[0mPool { size: 2, num_idle: 1, is_closed: false, options: PoolOptions { max_connections: 5, min_connections: 0, connect_timeout: 3s, max_lifetime: Some(1800s), idle_timeout: Some(600s), test_before_acquire: true } } [3mcontainer[0m[2m=[0mContainer { container_id: 066ad216-b34d-4fb0-9aeb-0308b5ca9ccb, language: "go", user_id: Some(1990720b-0ba6-4c3f-9a3c-8be8ef391fe3), port: Some(5000) } [3mmethod[0m[2m=[0mPOST [3mquery[0m[2m=[0mRawQuery(Some("container_id=066ad216-b34d-4fb0-9aeb-0308b5ca9ccb")) [3mheader_map[0m[2m=[0m{"host": "localhost:3000", "user-agent": "Go-http-client/1.1", "content-length": "0", "api-key": "e1f11936-2004-46ee-b310-84ddb8fb8d14", "container": "066ad216-b34d-4fb0-9aeb-0308b5ca9ccb", "content-type": "application/json", "accept-encoding": "gzip"} [3mbody[0m[2m=[0mb""[1m}[0m[2m:[0m [2mhyper_util::client::legacy::pool[0m[2m:[0m checkout dropped for ("http", 127.0.0.1:5000)
[2m2024-05-18T13:44:52.098048Z[0m [35mTRACE[0m [1mtrigger_container[0m[1m{[0m[3mpool[0m[2m=[0mPool { size: 2, num_idle: 1, is_closed: false, options: PoolOptions { max_connections: 5, min_connections: 0, connect_timeout: 3s, max_lifetime: Some(1800s), idle_timeout: Some(600s), test_before_acquire: true } } [3mcontainer[0m[2m=[0mContainer { container_id: 066ad216-b34d-4fb0-9aeb-0308b5ca9ccb, language: "go", user_id: Some(1990720b-0ba6-4c3f-9a3c-8be8ef391fe3), port: Some(5000) } [3mmethod[0m[2m=[0mPOST [3mquery[0m[2m=[0mRawQuery(Some("container_id=066ad216-b34d-4fb0-9aeb-0308b5ca9ccb")) [3mheader_map[0m[2m=[0m{"host": "localhost:3000", "user-agent": "Go-http-client/1.1", "content-length": "0", "api-key": "e1f11936-2004-46ee-b310-84ddb8fb8d14", "container": "066ad216-b34d-4fb0-9aeb-0308b5ca9ccb", "content-type": "application/json", "accept-encoding": "gzip"} [3mbody[0m[2m=[0mb""[1m}[0m[2m:[0m [2mhyper_util::client::legacy::pool[0m[2m:[0m put; add idle connection for ("http", 127.0.0.1:5000)
[2m2024-05-18T13:44:52.098100Z[0m [34mDEBUG[0m [1mtrigger_container[0m[1m{[0m[3mpool[0m[2m=[0mPool { size: 2, num_idle: 1, is_closed: false, options: PoolOptions { max_connections: 5, min_connections: 0, connect_timeout: 3s, max_lifetime: Some(1800s), idle_timeout: Some(600s), test_before_acquire: true } } [3mcontainer[0m[2m=[0mContainer { container_id: 066ad216-b34d-4fb0-9aeb-0308b5ca9ccb, language: "go", user_id: Some(1990720b-0ba6-4c3f-9a3c-8be8ef391fe3), port: Some(5000) } [3mmethod[0m[2m=[0mPOST [3mquery[0m[2m=[0mRawQuery(Some("container_id=066ad216-b34d-4fb0-9aeb-0308b5ca9ccb")) [3mheader_map[0m[2m=[0m{"host": "localhost:3000", "user-agent": "Go-http-client/1.1", "content-length": "0", "api-key": "e1f11936-2004-46ee-b310-84ddb8fb8d14", "container": "066ad216-b34d-4fb0-9aeb-0308b5ca9ccb", "content-type": "application/json", "accept-encoding": "gzip"} [3mbody[0m[2m=[0mb""[1m}[0m[2m:[0m [2mhyper_util::client::legacy::pool[0m[2m:[0m pooling idle connection for ("http", 127.0.0.1:5000)
[2m2024-05-18T13:44:53.005327Z[0m [32m INFO[0m [2mkappa::routes::middleware[0m[2m:[0m api key e1f11936-2004-46ee-b310-84ddb8fb8d14
[2m2024-05-18T13:44:53.006160Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT * FROM \"user\" â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  *\nFROM\n  \"user\"\nWHERE\n  api_key = $1\n" [3mrows_affected[0m[2m=[0m0 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m157.12Âµs [3melapsed_secs[0m[2m=[0m0.00015712
[2m2024-05-18T13:44:53.006917Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT * FROM container â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  *\nFROM\n  container\nWHERE\n  user_id = $1\n" [3mrows_affected[0m[2m=[0m1 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m127.59Âµs [3melapsed_secs[0m[2m=[0m0.00012759
[2m2024-05-18T13:44:53.255356Z[0m [32m INFO[0m [2mkappa::routes::middleware[0m[2m:[0m api key e1f11936-2004-46ee-b310-84ddb8fb8d14
[2m2024-05-18T13:44:53.256375Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT * FROM \"user\" â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  *\nFROM\n  \"user\"\nWHERE\n  api_key = $1\n" [3mrows_affected[0m[2m=[0m0 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m228.491Âµs [3melapsed_secs[0m[2m=[0m0.000228491
[2m2024-05-18T13:44:53.257346Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT * FROM container â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  *\nFROM\n  container\nWHERE\n  container_id = $1\n  AND user_id = $2\n" [3mrows_affected[0m[2m=[0m0 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m130.101Âµs [3melapsed_secs[0m[2m=[0m0.000130101
[2m2024-05-18T13:44:53.286233Z[0m [35mTRACE[0m [1mtrigger_container[0m[1m{[0m[3mpool[0m[2m=[0mPool { size: 2, num_idle: 1, is_closed: false, options: PoolOptions { max_connections: 5, min_connections: 0, connect_timeout: 3s, max_lifetime: Some(1800s), idle_timeout: Some(600s), test_before_acquire: true } } [3mcontainer[0m[2m=[0mContainer { container_id: 066ad216-b34d-4fb0-9aeb-0308b5ca9ccb, language: "go", user_id: Some(1990720b-0ba6-4c3f-9a3c-8be8ef391fe3), port: Some(5000) } [3mmethod[0m[2m=[0mPOST [3mquery[0m[2m=[0mRawQuery(Some("container_id=066ad216-b34d-4fb0-9aeb-0308b5ca9ccb")) [3mheader_map[0m[2m=[0m{"host": "localhost:3000", "user-agent": "Go-http-client/1.1", "content-length": "0", "api-key": "e1f11936-2004-46ee-b310-84ddb8fb8d14", "container": "066ad216-b34d-4fb0-9aeb-0308b5ca9ccb", "content-type": "application/json", "accept-encoding": "gzip"} [3mbody[0m[2m=[0mb""[1m}[0m[2m:[0m [2mhyper_util::client::legacy::pool[0m[2m:[0m checkout waiting for idle connection: ("http", 127.0.0.1:5000)
[2m2024-05-18T13:44:53.286287Z[0m [35mTRACE[0m [1mtrigger_container[0m[1m{[0m[3mpool[0m[2m=[0mPool { size: 2, num_idle: 1, is_closed: false, options: PoolOptions { max_connections: 5, min_connections: 0, connect_timeout: 3s, max_lifetime: Some(1800s), idle_timeout: Some(600s), test_before_acquire: true } } [3mcontainer[0m[2m=[0mContainer { container_id: 066ad216-b34d-4fb0-9aeb-0308b5ca9ccb, language: "go", user_id: Some(1990720b-0ba6-4c3f-9a3c-8be8ef391fe3), port: Some(5000) } [3mmethod[0m[2m=[0mPOST [3mquery[0m[2m=[0mRawQuery(Some("container_id=066ad216-b34d-4fb0-9aeb-0308b5ca9ccb")) [3mheader_map[0m[2m=[0m{"host": "localhost:3000", "user-agent": "Go-http-client/1.1", "content-length": "0", "api-key": "e1f11936-2004-46ee-b310-84ddb8fb8d14", "container": "066ad216-b34d-4fb0-9aeb-0308b5ca9ccb", "content-type": "application/json", "accept-encoding": "gzip"} [3mbody[0m[2m=[0mb""[1m}[0m[2m:[0m [2mhyper_util::client::legacy::connect::http[0m[2m:[0m Http::connect; scheme=Some("http"), host=Some("127.0.0.1"), port=Some(Port(5000))
[2m2024-05-18T13:44:53.286332Z[0m [34mDEBUG[0m [1mtrigger_container[0m[1m{[0m[3mpool[0m[2m=[0mPool { size: 2, num_idle: 1, is_closed: false, options: PoolOptions { max_connections: 5, min_connections: 0, connect_timeout: 3s, max_lifetime: Some(1800s), idle_timeout: Some(600s), test_before_acquire: true } } [3mcontainer[0m[2m=[0mContainer { container_id: 066ad216-b34d-4fb0-9aeb-0308b5ca9ccb, language: "go", user_id: Some(1990720b-0ba6-4c3f-9a3c-8be8ef391fe3), port: Some(5000) } [3mmethod[0m[2m=[0mPOST [3mquery[0m[2m=[0mRawQuery(Some("container_id=066ad216-b34d-4fb0-9aeb-0308b5ca9ccb")) [3mheader_map[0m[2m=[0m{"host": "localhost:3000", "user-agent": "Go-http-client/1.1", "content-length": "0", "api-key": "e1f11936-2004-46ee-b310-84ddb8fb8d14", "container": "066ad216-b34d-4fb0-9aeb-0308b5ca9ccb", "content-type": "application/json", "accept-encoding": "gzip"} [3mbody[0m[2m=[0mb""[1m}[0m[2m:[0m [2mhyper_util::client::legacy::connect::http[0m[2m:[0m connecting to 127.0.0.1:5000
[2m2024-05-18T13:44:53.286501Z[0m [34mDEBUG[0m [1mtrigger_container[0m[1m{[0m[3mpool[0m[2m=[0mPool { size: 2, num_idle: 1, is_closed: false, options: PoolOptions { max_connections: 5, min_connections: 0, connect_timeout: 3s, max_lifetime: Some(1800s), idle_timeout: Some(600s), test_before_acquire: true } } [3mcontainer[0m[2m=[0mContainer { container_id: 066ad216-b34d-4fb0-9aeb-0308b5ca9ccb, language: "go", user_id: Some(1990720b-0ba6-4c3f-9a3c-8be8ef391fe3), port: Some(5000) } [3mmethod[0m[2m=[0mPOST [3mquery[0m[2m=[0mRawQuery(Some("container_id=066ad216-b34d-4fb0-9aeb-0308b5ca9ccb")) [3mheader_map[0m[2m=[0m{"host": "localhost:3000", "user-agent": "Go-http-client/1.1", "content-length": "0", "api-key": "e1f11936-2004-46ee-b310-84ddb8fb8d14", "container": "066ad216-b34d-4fb0-9aeb-0308b5ca9ccb", "content-type": "application/json", "accept-encoding": "gzip"} [3mbody[0m[2m=[0mb""[1m}[0m[2m:[0m [2mhyper_util::client::legacy::connect::http[0m[2m:[0m connected to 127.0.0.1:5000
[2m2024-05-18T13:44:53.286547Z[0m [35mTRACE[0m [1mtrigger_container[0m[1m{[0m[3mpool[0m[2m=[0mPool { size: 2, num_idle: 1, is_closed: false, options: PoolOptions { max_connections: 5, min_connections: 0, connect_timeout: 3s, max_lifetime: Some(1800s), idle_timeout: Some(600s), test_before_acquire: true } } [3mcontainer[0m[2m=[0mContainer { container_id: 066ad216-b34d-4fb0-9aeb-0308b5ca9ccb, language: "go", user_id: Some(1990720b-0ba6-4c3f-9a3c-8be8ef391fe3), port: Some(5000) } [3mmethod[0m[2m=[0mPOST [3mquery[0m[2m=[0mRawQuery(Some("container_id=066ad216-b34d-4fb0-9aeb-0308b5ca9ccb")) [3mheader_map[0m[2m=[0m{"host": "localhost:3000", "user-agent": "Go-http-client/1.1", "content-length": "0", "api-key": "e1f11936-2004-46ee-b310-84ddb8fb8d14", "container": "066ad216-b34d-4fb0-9aeb-0308b5ca9ccb", "content-type": "application/json", "accept-encoding": "gzip"} [3mbody[0m[2m=[0mb""[1m}[0m[2m:[0m [2mhyper_util::client::legacy::client[0m[2m:[0m http1 handshake complete, spawning background dispatcher task
[2m2024-05-18T13:44:53.286619Z[0m [35mTRACE[0m [1mtrigger_container[0m[1m{[0m[3mpool[0m[2m=[0mPool { size: 2, num_idle: 1, is_closed: false, options: PoolOptions { max_connections: 5, min_connections: 0, connect_timeout: 3s, max_lifetime: Some(1800s), idle_timeout: Some(600s), test_before_acquire: true } } [3mcontainer[0m[2m=[0mContainer { container_id: 066ad216-b34d-4fb0-9aeb-0308b5ca9ccb, language: "go", user_id: Some(1990720b-0ba6-4c3f-9a3c-8be8ef391fe3), port: Some(5000) } [3mmethod[0m[2m=[0mPOST [3mquery[0m[2m=[0mRawQuery(Some("container_id=066ad216-b34d-4fb0-9aeb-0308b5ca9ccb")) [3mheader_map[0m[2m=[0m{"host": "localhost:3000", "user-agent": "Go-http-client/1.1", "content-length": "0", "api-key": "e1f11936-2004-46ee-b310-84ddb8fb8d14", "container": "066ad216-b34d-4fb0-9aeb-0308b5ca9ccb", "content-type": "application/json", "accept-encoding": "gzip"} [3mbody[0m[2m=[0mb""[1m}[0m[2m:[0m [2mhyper_util::client::legacy::pool[0m[2m:[0m checkout dropped for ("http", 127.0.0.1:5000)
[2m2024-05-18T13:44:53.286907Z[0m [35mTRACE[0m [1mtrigger_container[0m[1m{[0m[3mpool[0m[2m=[0mPool { size: 2, num_idle: 1, is_closed: false, options: PoolOptions { max_connections: 5, min_connections: 0, connect_timeout: 3s, max_lifetime: Some(1800s), idle_timeout: Some(600s), test_before_acquire: true } } [3mcontainer[0m[2m=[0mContainer { container_id: 066ad216-b34d-4fb0-9aeb-0308b5ca9ccb, language: "go", user_id: Some(1990720b-0ba6-4c3f-9a3c-8be8ef391fe3), port: Some(5000) } [3mmethod[0m[2m=[0mPOST [3mquery[0m[2m=[0mRawQuery(Some("container_id=066ad216-b34d-4fb0-9aeb-0308b5ca9ccb")) [3mheader_map[0m[2m=[0m{"host": "localhost:3000", "user-agent": "Go-http-client/1.1", "content-length": "0", "api-key": "e1f11936-2004-46ee-b310-84ddb8fb8d14", "container": "066ad216-b34d-4fb0-9aeb-0308b5ca9ccb", "content-type": "application/json", "accept-encoding": "gzip"} [3mbody[0m[2m=[0mb""[1m}[0m[2m:[0m [2mhyper_util::client::legacy::pool[0m[2m:[0m put; add idle connection for ("http", 127.0.0.1:5000)
[2m2024-05-18T13:44:53.286950Z[0m [34mDEBUG[0m [1mtrigger_container[0m[1m{[0m[3mpool[0m[2m=[0mPool { size: 2, num_idle: 1, is_closed: false, options: PoolOptions { max_connections: 5, min_connections: 0, connect_timeout: 3s, max_lifetime: Some(1800s), idle_timeout: Some(600s), test_before_acquire: true } } [3mcontainer[0m[2m=[0mContainer { container_id: 066ad216-b34d-4fb0-9aeb-0308b5ca9ccb, language: "go", user_id: Some(1990720b-0ba6-4c3f-9a3c-8be8ef391fe3), port: Some(5000) } [3mmethod[0m[2m=[0mPOST [3mquery[0m[2m=[0mRawQuery(Some("container_id=066ad216-b34d-4fb0-9aeb-0308b5ca9ccb")) [3mheader_map[0m[2m=[0m{"host": "localhost:3000", "user-agent": "Go-http-client/1.1", "content-length": "0", "api-key": "e1f11936-2004-46ee-b310-84ddb8fb8d14", "container": "066ad216-b34d-4fb0-9aeb-0308b5ca9ccb", "content-type": "application/json", "accept-encoding": "gzip"} [3mbody[0m[2m=[0mb""[1m}[0m[2m:[0m [2mhyper_util::client::legacy::pool[0m[2m:[0m pooling idle connection for ("http", 127.0.0.1:5000)
[2m2024-05-18T13:45:50.377622Z[0m [32m INFO[0m [2mkappa::routes::user[0m[2m:[0m Creating user with username 5
[2m2024-05-18T13:45:50.380187Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"insert into \"user\"(api_key, username) â€¦" [3mdb.statement[0m[2m=[0m"\n\ninsert into\n  \"user\"(api_key, username)\nvalues\n  ($1, $2)\n" [3mrows_affected[0m[2m=[0m1 [3mrows_returned[0m[2m=[0m0 [3melapsed[0m[2m=[0m1.278496ms [3melapsed_secs[0m[2m=[0m0.001278496
[2m2024-05-18T13:45:56.087677Z[0m [32m INFO[0m [2mkappa::routes::middleware[0m[2m:[0m api key 008eb662-7cce-41bb-a242-c18421283469
[2m2024-05-18T13:45:56.089039Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT * FROM \"user\" â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  *\nFROM\n  \"user\"\nWHERE\n  api_key = $1\n" [3mrows_affected[0m[2m=[0m0 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m558.863Âµs [3melapsed_secs[0m[2m=[0m0.000558863
[2m2024-05-18T13:45:56.090088Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT * FROM container â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  *\nFROM\n  container\nWHERE\n  user_id = $1\n" [3mrows_affected[0m[2m=[0m0 [3mrows_returned[0m[2m=[0m0 [3melapsed[0m[2m=[0m400.982Âµs [3melapsed_secs[0m[2m=[0m0.000400982
[2m2024-05-18T13:46:20.763632Z[0m [32m INFO[0m [2mkappa::routes::middleware[0m[2m:[0m api key e1f11936-2004-46ee-b310-84ddb8fb8d14
[2m2024-05-18T13:46:20.764480Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT * FROM \"user\" â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  *\nFROM\n  \"user\"\nWHERE\n  api_key = $1\n" [3mrows_affected[0m[2m=[0m0 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m184.73Âµs [3melapsed_secs[0m[2m=[0m0.00018473
[2m2024-05-18T13:46:20.765337Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT * FROM container â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  *\nFROM\n  container\nWHERE\n  user_id = $1\n" [3mrows_affected[0m[2m=[0m1 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m136.801Âµs [3melapsed_secs[0m[2m=[0m0.000136801
[2m2024-05-18T13:46:23.688546Z[0m [32m INFO[0m [2mkappa::routes::middleware[0m[2m:[0m api key e1f11936-2004-46ee-b310-84ddb8fb8d14
[2m2024-05-18T13:46:23.689566Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT * FROM \"user\" â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  *\nFROM\n  \"user\"\nWHERE\n  api_key = $1\n" [3mrows_affected[0m[2m=[0m0 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m287.381Âµs [3melapsed_secs[0m[2m=[0m0.000287381
[2m2024-05-18T13:46:23.690713Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT * FROM container â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  *\nFROM\n  container\nWHERE\n  container_id = $1\n  AND user_id = $2\n" [3mrows_affected[0m[2m=[0m0 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m336.362Âµs [3melapsed_secs[0m[2m=[0m0.000336362
[2m2024-05-18T13:46:23.719651Z[0m [35mTRACE[0m [1mtrigger_container[0m[1m{[0m[3mpool[0m[2m=[0mPool { size: 2, num_idle: 1, is_closed: false, options: PoolOptions { max_connections: 5, min_connections: 0, connect_timeout: 3s, max_lifetime: Some(1800s), idle_timeout: Some(600s), test_before_acquire: true } } [3mcontainer[0m[2m=[0mContainer { container_id: 066ad216-b34d-4fb0-9aeb-0308b5ca9ccb, language: "go", user_id: Some(1990720b-0ba6-4c3f-9a3c-8be8ef391fe3), port: Some(5000) } [3mmethod[0m[2m=[0mPOST [3mquery[0m[2m=[0mRawQuery(Some("container_id=066ad216-b34d-4fb0-9aeb-0308b5ca9ccb")) [3mheader_map[0m[2m=[0m{"host": "localhost:3000", "user-agent": "Go-http-client/1.1", "content-length": "0", "api-key": "e1f11936-2004-46ee-b310-84ddb8fb8d14", "container": "066ad216-b34d-4fb0-9aeb-0308b5ca9ccb", "content-type": "application/json", "accept-encoding": "gzip"} [3mbody[0m[2m=[0mb""[1m}[0m[2m:[0m [2mhyper_util::client::legacy::pool[0m[2m:[0m checkout waiting for idle connection: ("http", 127.0.0.1:5000)
[2m2024-05-18T13:46:23.719711Z[0m [35mTRACE[0m [1mtrigger_container[0m[1m{[0m[3mpool[0m[2m=[0mPool { size: 2, num_idle: 1, is_closed: false, options: PoolOptions { max_connections: 5, min_connections: 0, connect_timeout: 3s, max_lifetime: Some(1800s), idle_timeout: Some(600s), test_before_acquire: true } } [3mcontainer[0m[2m=[0mContainer { container_id: 066ad216-b34d-4fb0-9aeb-0308b5ca9ccb, language: "go", user_id: Some(1990720b-0ba6-4c3f-9a3c-8be8ef391fe3), port: Some(5000) } [3mmethod[0m[2m=[0mPOST [3mquery[0m[2m=[0mRawQuery(Some("container_id=066ad216-b34d-4fb0-9aeb-0308b5ca9ccb")) [3mheader_map[0m[2m=[0m{"host": "localhost:3000", "user-agent": "Go-http-client/1.1", "content-length": "0", "api-key": "e1f11936-2004-46ee-b310-84ddb8fb8d14", "container": "066ad216-b34d-4fb0-9aeb-0308b5ca9ccb", "content-type": "application/json", "accept-encoding": "gzip"} [3mbody[0m[2m=[0mb""[1m}[0m[2m:[0m [2mhyper_util::client::legacy::connect::http[0m[2m:[0m Http::connect; scheme=Some("http"), host=Some("127.0.0.1"), port=Some(Port(5000))
[2m2024-05-18T13:46:23.719758Z[0m [34mDEBUG[0m [1mtrigger_container[0m[1m{[0m[3mpool[0m[2m=[0mPool { size: 2, num_idle: 1, is_closed: false, options: PoolOptions { max_connections: 5, min_connections: 0, connect_timeout: 3s, max_lifetime: Some(1800s), idle_timeout: Some(600s), test_before_acquire: true } } [3mcontainer[0m[2m=[0mContainer { container_id: 066ad216-b34d-4fb0-9aeb-0308b5ca9ccb, language: "go", user_id: Some(1990720b-0ba6-4c3f-9a3c-8be8ef391fe3), port: Some(5000) } [3mmethod[0m[2m=[0mPOST [3mquery[0m[2m=[0mRawQuery(Some("container_id=066ad216-b34d-4fb0-9aeb-0308b5ca9ccb")) [3mheader_map[0m[2m=[0m{"host": "localhost:3000", "user-agent": "Go-http-client/1.1", "content-length": "0", "api-key": "e1f11936-2004-46ee-b310-84ddb8fb8d14", "container": "066ad216-b34d-4fb0-9aeb-0308b5ca9ccb", "content-type": "application/json", "accept-encoding": "gzip"} [3mbody[0m[2m=[0mb""[1m}[0m[2m:[0m [2mhyper_util::client::legacy::connect::http[0m[2m:[0m connecting to 127.0.0.1:5000
[2m2024-05-18T13:46:23.719937Z[0m [34mDEBUG[0m [1mtrigger_container[0m[1m{[0m[3mpool[0m[2m=[0mPool { size: 2, num_idle: 1, is_closed: false, options: PoolOptions { max_connections: 5, min_connections: 0, connect_timeout: 3s, max_lifetime: Some(1800s), idle_timeout: Some(600s), test_before_acquire: true } } [3mcontainer[0m[2m=[0mContainer { container_id: 066ad216-b34d-4fb0-9aeb-0308b5ca9ccb, language: "go", user_id: Some(1990720b-0ba6-4c3f-9a3c-8be8ef391fe3), port: Some(5000) } [3mmethod[0m[2m=[0mPOST [3mquery[0m[2m=[0mRawQuery(Some("container_id=066ad216-b34d-4fb0-9aeb-0308b5ca9ccb")) [3mheader_map[0m[2m=[0m{"host": "localhost:3000", "user-agent": "Go-http-client/1.1", "content-length": "0", "api-key": "e1f11936-2004-46ee-b310-84ddb8fb8d14", "container": "066ad216-b34d-4fb0-9aeb-0308b5ca9ccb", "content-type": "application/json", "accept-encoding": "gzip"} [3mbody[0m[2m=[0mb""[1m}[0m[2m:[0m [2mhyper_util::client::legacy::connect::http[0m[2m:[0m connected to 127.0.0.1:5000
[2m2024-05-18T13:46:23.719985Z[0m [35mTRACE[0m [1mtrigger_container[0m[1m{[0m[3mpool[0m[2m=[0mPool { size: 2, num_idle: 1, is_closed: false, options: PoolOptions { max_connections: 5, min_connections: 0, connect_timeout: 3s, max_lifetime: Some(1800s), idle_timeout: Some(600s), test_before_acquire: true } } [3mcontainer[0m[2m=[0mContainer { container_id: 066ad216-b34d-4fb0-9aeb-0308b5ca9ccb, language: "go", user_id: Some(1990720b-0ba6-4c3f-9a3c-8be8ef391fe3), port: Some(5000) } [3mmethod[0m[2m=[0mPOST [3mquery[0m[2m=[0mRawQuery(Some("container_id=066ad216-b34d-4fb0-9aeb-0308b5ca9ccb")) [3mheader_map[0m[2m=[0m{"host": "localhost:3000", "user-agent": "Go-http-client/1.1", "content-length": "0", "api-key": "e1f11936-2004-46ee-b310-84ddb8fb8d14", "container": "066ad216-b34d-4fb0-9aeb-0308b5ca9ccb", "content-type": "application/json", "accept-encoding": "gzip"} [3mbody[0m[2m=[0mb""[1m}[0m[2m:[0m [2mhyper_util::client::legacy::client[0m[2m:[0m http1 handshake complete, spawning background dispatcher task
[2m2024-05-18T13:46:23.720061Z[0m [35mTRACE[0m [1mtrigger_container[0m[1m{[0m[3mpool[0m[2m=[0mPool { size: 2, num_idle: 1, is_closed: false, options: PoolOptions { max_connections: 5, min_connections: 0, connect_timeout: 3s, max_lifetime: Some(1800s), idle_timeout: Some(600s), test_before_acquire: true } } [3mcontainer[0m[2m=[0mContainer { container_id: 066ad216-b34d-4fb0-9aeb-0308b5ca9ccb, language: "go", user_id: Some(1990720b-0ba6-4c3f-9a3c-8be8ef391fe3), port: Some(5000) } [3mmethod[0m[2m=[0mPOST [3mquery[0m[2m=[0mRawQuery(Some("container_id=066ad216-b34d-4fb0-9aeb-0308b5ca9ccb")) [3mheader_map[0m[2m=[0m{"host": "localhost:3000", "user-agent": "Go-http-client/1.1", "content-length": "0", "api-key": "e1f11936-2004-46ee-b310-84ddb8fb8d14", "container": "066ad216-b34d-4fb0-9aeb-0308b5ca9ccb", "content-type": "application/json", "accept-encoding": "gzip"} [3mbody[0m[2m=[0mb""[1m}[0m[2m:[0m [2mhyper_util::client::legacy::pool[0m[2m:[0m checkout dropped for ("http", 127.0.0.1:5000)
[2m2024-05-18T13:46:23.720382Z[0m [35mTRACE[0m [1mtrigger_container[0m[1m{[0m[3mpool[0m[2m=[0mPool { size: 2, num_idle: 1, is_closed: false, options: PoolOptions { max_connections: 5, min_connections: 0, connect_timeout: 3s, max_lifetime: Some(1800s), idle_timeout: Some(600s), test_before_acquire: true } } [3mcontainer[0m[2m=[0mContainer { container_id: 066ad216-b34d-4fb0-9aeb-0308b5ca9ccb, language: "go", user_id: Some(1990720b-0ba6-4c3f-9a3c-8be8ef391fe3), port: Some(5000) } [3mmethod[0m[2m=[0mPOST [3mquery[0m[2m=[0mRawQuery(Some("container_id=066ad216-b34d-4fb0-9aeb-0308b5ca9ccb")) [3mheader_map[0m[2m=[0m{"host": "localhost:3000", "user-agent": "Go-http-client/1.1", "content-length": "0", "api-key": "e1f11936-2004-46ee-b310-84ddb8fb8d14", "container": "066ad216-b34d-4fb0-9aeb-0308b5ca9ccb", "content-type": "application/json", "accept-encoding": "gzip"} [3mbody[0m[2m=[0mb""[1m}[0m[2m:[0m [2mhyper_util::client::legacy::pool[0m[2m:[0m put; add idle connection for ("http", 127.0.0.1:5000)
[2m2024-05-18T13:46:23.720425Z[0m [34mDEBUG[0m [1mtrigger_container[0m[1m{[0m[3mpool[0m[2m=[0mPool { size: 2, num_idle: 1, is_closed: false, options: PoolOptions { max_connections: 5, min_connections: 0, connect_timeout: 3s, max_lifetime: Some(1800s), idle_timeout: Some(600s), test_before_acquire: true } } [3mcontainer[0m[2m=[0mContainer { container_id: 066ad216-b34d-4fb0-9aeb-0308b5ca9ccb, language: "go", user_id: Some(1990720b-0ba6-4c3f-9a3c-8be8ef391fe3), port: Some(5000) } [3mmethod[0m[2m=[0mPOST [3mquery[0m[2m=[0mRawQuery(Some("container_id=066ad216-b34d-4fb0-9aeb-0308b5ca9ccb")) [3mheader_map[0m[2m=[0m{"host": "localhost:3000", "user-agent": "Go-http-client/1.1", "content-length": "0", "api-key": "e1f11936-2004-46ee-b310-84ddb8fb8d14", "container": "066ad216-b34d-4fb0-9aeb-0308b5ca9ccb", "content-type": "application/json", "accept-encoding": "gzip"} [3mbody[0m[2m=[0mb""[1m}[0m[2m:[0m [2mhyper_util::client::legacy::pool[0m[2m:[0m pooling idle connection for ("http", 127.0.0.1:5000)
[2m2024-05-18T13:46:25.029781Z[0m [32m INFO[0m [2mkappa::routes::user[0m[2m:[0m Creating user with username 5
[2m2024-05-18T13:46:25.031713Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"insert into \"user\"(api_key, username) â€¦" [3mdb.statement[0m[2m=[0m"\n\ninsert into\n  \"user\"(api_key, username)\nvalues\n  ($1, $2)\n" [3mrows_affected[0m[2m=[0m0 [3mrows_returned[0m[2m=[0m0 [3melapsed[0m[2m=[0m516.242Âµs [3melapsed_secs[0m[2m=[0m0.000516242
[2m2024-05-18T13:46:25.031865Z[0m [32m INFO[0m [2mkappa::routes::user[0m[2m:[0m Error inserting user: error returned from database: duplicate key value violates unique constraint "unique_username"
[2m2024-05-18T13:46:29.665795Z[0m [32m INFO[0m [2mkappa::routes::middleware[0m[2m:[0m api key e1f11936-2004-46ee-b310-84ddb8fb8d14
[2m2024-05-18T13:46:29.666668Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT * FROM \"user\" â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  *\nFROM\n  \"user\"\nWHERE\n  api_key = $1\n" [3mrows_affected[0m[2m=[0m0 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m185.601Âµs [3melapsed_secs[0m[2m=[0m0.000185601
[2m2024-05-18T13:46:29.667445Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT * FROM container â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  *\nFROM\n  container\nWHERE\n  user_id = $1\n" [3mrows_affected[0m[2m=[0m1 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m123.16Âµs [3melapsed_secs[0m[2m=[0m0.00012316
[2m2024-05-18T13:46:30.272785Z[0m [32m INFO[0m [2mkappa::routes::middleware[0m[2m:[0m api key e1f11936-2004-46ee-b310-84ddb8fb8d14
[2m2024-05-18T13:46:30.273718Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT * FROM \"user\" â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  *\nFROM\n  \"user\"\nWHERE\n  api_key = $1\n" [3mrows_affected[0m[2m=[0m0 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m215.421Âµs [3melapsed_secs[0m[2m=[0m0.000215421
[2m2024-05-18T13:46:30.274683Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT * FROM container â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  *\nFROM\n  container\nWHERE\n  container_id = $1\n  AND user_id = $2\n" [3mrows_affected[0m[2m=[0m0 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m137.011Âµs [3melapsed_secs[0m[2m=[0m0.000137011
[2m2024-05-18T13:46:30.303756Z[0m [35mTRACE[0m [1mtrigger_container[0m[1m{[0m[3mpool[0m[2m=[0mPool { size: 2, num_idle: 1, is_closed: false, options: PoolOptions { max_connections: 5, min_connections: 0, connect_timeout: 3s, max_lifetime: Some(1800s), idle_timeout: Some(600s), test_before_acquire: true } } [3mcontainer[0m[2m=[0mContainer { container_id: 066ad216-b34d-4fb0-9aeb-0308b5ca9ccb, language: "go", user_id: Some(1990720b-0ba6-4c3f-9a3c-8be8ef391fe3), port: Some(5000) } [3mmethod[0m[2m=[0mPOST [3mquery[0m[2m=[0mRawQuery(Some("container_id=066ad216-b34d-4fb0-9aeb-0308b5ca9ccb")) [3mheader_map[0m[2m=[0m{"host": "localhost:3000", "user-agent": "Go-http-client/1.1", "content-length": "0", "api-key": "e1f11936-2004-46ee-b310-84ddb8fb8d14", "container": "066ad216-b34d-4fb0-9aeb-0308b5ca9ccb", "content-type": "application/json", "accept-encoding": "gzip"} [3mbody[0m[2m=[0mb""[1m}[0m[2m:[0m [2mhyper_util::client::legacy::pool[0m[2m:[0m checkout waiting for idle connection: ("http", 127.0.0.1:5000)
[2m2024-05-18T13:46:30.303811Z[0m [35mTRACE[0m [1mtrigger_container[0m[1m{[0m[3mpool[0m[2m=[0mPool { size: 2, num_idle: 1, is_closed: false, options: PoolOptions { max_connections: 5, min_connections: 0, connect_timeout: 3s, max_lifetime: Some(1800s), idle_timeout: Some(600s), test_before_acquire: true } } [3mcontainer[0m[2m=[0mContainer { container_id: 066ad216-b34d-4fb0-9aeb-0308b5ca9ccb, language: "go", user_id: Some(1990720b-0ba6-4c3f-9a3c-8be8ef391fe3), port: Some(5000) } [3mmethod[0m[2m=[0mPOST [3mquery[0m[2m=[0mRawQuery(Some("container_id=066ad216-b34d-4fb0-9aeb-0308b5ca9ccb")) [3mheader_map[0m[2m=[0m{"host": "localhost:3000", "user-agent": "Go-http-client/1.1", "content-length": "0", "api-key": "e1f11936-2004-46ee-b310-84ddb8fb8d14", "container": "066ad216-b34d-4fb0-9aeb-0308b5ca9ccb", "content-type": "application/json", "accept-encoding": "gzip"} [3mbody[0m[2m=[0mb""[1m}[0m[2m:[0m [2mhyper_util::client::legacy::connect::http[0m[2m:[0m Http::connect; scheme=Some("http"), host=Some("127.0.0.1"), port=Some(Port(5000))
[2m2024-05-18T13:46:30.303863Z[0m [34mDEBUG[0m [1mtrigger_container[0m[1m{[0m[3mpool[0m[2m=[0mPool { size: 2, num_idle: 1, is_closed: false, options: PoolOptions { max_connections: 5, min_connections: 0, connect_timeout: 3s, max_lifetime: Some(1800s), idle_timeout: Some(600s), test_before_acquire: true } } [3mcontainer[0m[2m=[0mContainer { container_id: 066ad216-b34d-4fb0-9aeb-0308b5ca9ccb, language: "go", user_id: Some(1990720b-0ba6-4c3f-9a3c-8be8ef391fe3), port: Some(5000) } [3mmethod[0m[2m=[0mPOST [3mquery[0m[2m=[0mRawQuery(Some("container_id=066ad216-b34d-4fb0-9aeb-0308b5ca9ccb")) [3mheader_map[0m[2m=[0m{"host": "localhost:3000", "user-agent": "Go-http-client/1.1", "content-length": "0", "api-key": "e1f11936-2004-46ee-b310-84ddb8fb8d14", "container": "066ad216-b34d-4fb0-9aeb-0308b5ca9ccb", "content-type": "application/json", "accept-encoding": "gzip"} [3mbody[0m[2m=[0mb""[1m}[0m[2m:[0m [2mhyper_util::client::legacy::connect::http[0m[2m:[0m connecting to 127.0.0.1:5000
[2m2024-05-18T13:46:30.304057Z[0m [34mDEBUG[0m [1mtrigger_container[0m[1m{[0m[3mpool[0m[2m=[0mPool { size: 2, num_idle: 1, is_closed: false, options: PoolOptions { max_connections: 5, min_connections: 0, connect_timeout: 3s, max_lifetime: Some(1800s), idle_timeout: Some(600s), test_before_acquire: true } } [3mcontainer[0m[2m=[0mContainer { container_id: 066ad216-b34d-4fb0-9aeb-0308b5ca9ccb, language: "go", user_id: Some(1990720b-0ba6-4c3f-9a3c-8be8ef391fe3), port: Some(5000) } [3mmethod[0m[2m=[0mPOST [3mquery[0m[2m=[0mRawQuery(Some("container_id=066ad216-b34d-4fb0-9aeb-0308b5ca9ccb")) [3mheader_map[0m[2m=[0m{"host": "localhost:3000", "user-agent": "Go-http-client/1.1", "content-length": "0", "api-key": "e1f11936-2004-46ee-b310-84ddb8fb8d14", "container": "066ad216-b34d-4fb0-9aeb-0308b5ca9ccb", "content-type": "application/json", "accept-encoding": "gzip"} [3mbody[0m[2m=[0mb""[1m}[0m[2m:[0m [2mhyper_util::client::legacy::connect::http[0m[2m:[0m connected to 127.0.0.1:5000
[2m2024-05-18T13:46:30.304118Z[0m [35mTRACE[0m [1mtrigger_container[0m[1m{[0m[3mpool[0m[2m=[0mPool { size: 2, num_idle: 1, is_closed: false, options: PoolOptions { max_connections: 5, min_connections: 0, connect_timeout: 3s, max_lifetime: Some(1800s), idle_timeout: Some(600s), test_before_acquire: true } } [3mcontainer[0m[2m=[0mContainer { container_id: 066ad216-b34d-4fb0-9aeb-0308b5ca9ccb, language: "go", user_id: Some(1990720b-0ba6-4c3f-9a3c-8be8ef391fe3), port: Some(5000) } [3mmethod[0m[2m=[0mPOST [3mquery[0m[2m=[0mRawQuery(Some("container_id=066ad216-b34d-4fb0-9aeb-0308b5ca9ccb")) [3mheader_map[0m[2m=[0m{"host": "localhost:3000", "user-agent": "Go-http-client/1.1", "content-length": "0", "api-key": "e1f11936-2004-46ee-b310-84ddb8fb8d14", "container": "066ad216-b34d-4fb0-9aeb-0308b5ca9ccb", "content-type": "application/json", "accept-encoding": "gzip"} [3mbody[0m[2m=[0mb""[1m}[0m[2m:[0m [2mhyper_util::client::legacy::client[0m[2m:[0m http1 handshake complete, spawning background dispatcher task
[2m2024-05-18T13:46:30.304194Z[0m [35mTRACE[0m [1mtrigger_container[0m[1m{[0m[3mpool[0m[2m=[0mPool { size: 2, num_idle: 1, is_closed: false, options: PoolOptions { max_connections: 5, min_connections: 0, connect_timeout: 3s, max_lifetime: Some(1800s), idle_timeout: Some(600s), test_before_acquire: true } } [3mcontainer[0m[2m=[0mContainer { container_id: 066ad216-b34d-4fb0-9aeb-0308b5ca9ccb, language: "go", user_id: Some(1990720b-0ba6-4c3f-9a3c-8be8ef391fe3), port: Some(5000) } [3mmethod[0m[2m=[0mPOST [3mquery[0m[2m=[0mRawQuery(Some("container_id=066ad216-b34d-4fb0-9aeb-0308b5ca9ccb")) [3mheader_map[0m[2m=[0m{"host": "localhost:3000", "user-agent": "Go-http-client/1.1", "content-length": "0", "api-key": "e1f11936-2004-46ee-b310-84ddb8fb8d14", "container": "066ad216-b34d-4fb0-9aeb-0308b5ca9ccb", "content-type": "application/json", "accept-encoding": "gzip"} [3mbody[0m[2m=[0mb""[1m}[0m[2m:[0m [2mhyper_util::client::legacy::pool[0m[2m:[0m checkout dropped for ("http", 127.0.0.1:5000)
[2m2024-05-18T13:46:30.304534Z[0m [35mTRACE[0m [1mtrigger_container[0m[1m{[0m[3mpool[0m[2m=[0mPool { size: 2, num_idle: 1, is_closed: false, options: PoolOptions { max_connections: 5, min_connections: 0, connect_timeout: 3s, max_lifetime: Some(1800s), idle_timeout: Some(600s), test_before_acquire: true } } [3mcontainer[0m[2m=[0mContainer { container_id: 066ad216-b34d-4fb0-9aeb-0308b5ca9ccb, language: "go", user_id: Some(1990720b-0ba6-4c3f-9a3c-8be8ef391fe3), port: Some(5000) } [3mmethod[0m[2m=[0mPOST [3mquery[0m[2m=[0mRawQuery(Some("container_id=066ad216-b34d-4fb0-9aeb-0308b5ca9ccb")) [3mheader_map[0m[2m=[0m{"host": "localhost:3000", "user-agent": "Go-http-client/1.1", "content-length": "0", "api-key": "e1f11936-2004-46ee-b310-84ddb8fb8d14", "container": "066ad216-b34d-4fb0-9aeb-0308b5ca9ccb", "content-type": "application/json", "accept-encoding": "gzip"} [3mbody[0m[2m=[0mb""[1m}[0m[2m:[0m [2mhyper_util::client::legacy::pool[0m[2m:[0m put; add idle connection for ("http", 127.0.0.1:5000)
[2m2024-05-18T13:46:30.304581Z[0m [34mDEBUG[0m [1mtrigger_container[0m[1m{[0m[3mpool[0m[2m=[0mPool { size: 2, num_idle: 1, is_closed: false, options: PoolOptions { max_connections: 5, min_connections: 0, connect_timeout: 3s, max_lifetime: Some(1800s), idle_timeout: Some(600s), test_before_acquire: true } } [3mcontainer[0m[2m=[0mContainer { container_id: 066ad216-b34d-4fb0-9aeb-0308b5ca9ccb, language: "go", user_id: Some(1990720b-0ba6-4c3f-9a3c-8be8ef391fe3), port: Some(5000) } [3mmethod[0m[2m=[0mPOST [3mquery[0m[2m=[0mRawQuery(Some("container_id=066ad216-b34d-4fb0-9aeb-0308b5ca9ccb")) [3mheader_map[0m[2m=[0m{"host": "localhost:3000", "user-agent": "Go-http-client/1.1", "content-length": "0", "api-key": "e1f11936-2004-46ee-b310-84ddb8fb8d14", "container": "066ad216-b34d-4fb0-9aeb-0308b5ca9ccb", "content-type": "application/json", "accept-encoding": "gzip"} [3mbody[0m[2m=[0mb""[1m}[0m[2m:[0m [2mhyper_util::client::legacy::pool[0m[2m:[0m pooling idle connection for ("http", 127.0.0.1:5000)
[2m2024-05-18T13:46:31.658032Z[0m [32m INFO[0m [2mkappa::routes::middleware[0m[2m:[0m api key e1f11936-2004-46ee-b310-84ddb8fb8d14
[2m2024-05-18T13:46:31.659009Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT * FROM \"user\" â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  *\nFROM\n  \"user\"\nWHERE\n  api_key = $1\n" [3mrows_affected[0m[2m=[0m0 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m241.501Âµs [3melapsed_secs[0m[2m=[0m0.000241501
[2m2024-05-18T13:46:31.659877Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT * FROM container â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  *\nFROM\n  container\nWHERE\n  user_id = $1\n" [3mrows_affected[0m[2m=[0m1 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m181.891Âµs [3melapsed_secs[0m[2m=[0m0.000181891
[2m2024-05-18T13:46:32.019822Z[0m [32m INFO[0m [2mkappa::routes::middleware[0m[2m:[0m api key e1f11936-2004-46ee-b310-84ddb8fb8d14
[2m2024-05-18T13:46:32.020738Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT * FROM \"user\" â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  *\nFROM\n  \"user\"\nWHERE\n  api_key = $1\n" [3mrows_affected[0m[2m=[0m0 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m165.021Âµs [3melapsed_secs[0m[2m=[0m0.000165021
[2m2024-05-18T13:46:32.021729Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT * FROM container â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  *\nFROM\n  container\nWHERE\n  container_id = $1\n  AND user_id = $2\n" [3mrows_affected[0m[2m=[0m0 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m134.191Âµs [3melapsed_secs[0m[2m=[0m0.000134191
[2m2024-05-18T13:46:32.050677Z[0m [35mTRACE[0m [1mtrigger_container[0m[1m{[0m[3mpool[0m[2m=[0mPool { size: 2, num_idle: 1, is_closed: false, options: PoolOptions { max_connections: 5, min_connections: 0, connect_timeout: 3s, max_lifetime: Some(1800s), idle_timeout: Some(600s), test_before_acquire: true } } [3mcontainer[0m[2m=[0mContainer { container_id: 066ad216-b34d-4fb0-9aeb-0308b5ca9ccb, language: "go", user_id: Some(1990720b-0ba6-4c3f-9a3c-8be8ef391fe3), port: Some(5000) } [3mmethod[0m[2m=[0mPOST [3mquery[0m[2m=[0mRawQuery(Some("container_id=066ad216-b34d-4fb0-9aeb-0308b5ca9ccb")) [3mheader_map[0m[2m=[0m{"host": "localhost:3000", "user-agent": "Go-http-client/1.1", "content-length": "0", "api-key": "e1f11936-2004-46ee-b310-84ddb8fb8d14", "container": "066ad216-b34d-4fb0-9aeb-0308b5ca9ccb", "content-type": "application/json", "accept-encoding": "gzip"} [3mbody[0m[2m=[0mb""[1m}[0m[2m:[0m [2mhyper_util::client::legacy::pool[0m[2m:[0m checkout waiting for idle connection: ("http", 127.0.0.1:5000)
[2m2024-05-18T13:46:32.050731Z[0m [35mTRACE[0m [1mtrigger_container[0m[1m{[0m[3mpool[0m[2m=[0mPool { size: 2, num_idle: 1, is_closed: false, options: PoolOptions { max_connections: 5, min_connections: 0, connect_timeout: 3s, max_lifetime: Some(1800s), idle_timeout: Some(600s), test_before_acquire: true } } [3mcontainer[0m[2m=[0mContainer { container_id: 066ad216-b34d-4fb0-9aeb-0308b5ca9ccb, language: "go", user_id: Some(1990720b-0ba6-4c3f-9a3c-8be8ef391fe3), port: Some(5000) } [3mmethod[0m[2m=[0mPOST [3mquery[0m[2m=[0mRawQuery(Some("container_id=066ad216-b34d-4fb0-9aeb-0308b5ca9ccb")) [3mheader_map[0m[2m=[0m{"host": "localhost:3000", "user-agent": "Go-http-client/1.1", "content-length": "0", "api-key": "e1f11936-2004-46ee-b310-84ddb8fb8d14", "container": "066ad216-b34d-4fb0-9aeb-0308b5ca9ccb", "content-type": "application/json", "accept-encoding": "gzip"} [3mbody[0m[2m=[0mb""[1m}[0m[2m:[0m [2mhyper_util::client::legacy::connect::http[0m[2m:[0m Http::connect; scheme=Some("http"), host=Some("127.0.0.1"), port=Some(Port(5000))
[2m2024-05-18T13:46:32.050776Z[0m [34mDEBUG[0m [1mtrigger_container[0m[1m{[0m[3mpool[0m[2m=[0mPool { size: 2, num_idle: 1, is_closed: false, options: PoolOptions { max_connections: 5, min_connections: 0, connect_timeout: 3s, max_lifetime: Some(1800s), idle_timeout: Some(600s), test_before_acquire: true } } [3mcontainer[0m[2m=[0mContainer { container_id: 066ad216-b34d-4fb0-9aeb-0308b5ca9ccb, language: "go", user_id: Some(1990720b-0ba6-4c3f-9a3c-8be8ef391fe3), port: Some(5000) } [3mmethod[0m[2m=[0mPOST [3mquery[0m[2m=[0mRawQuery(Some("container_id=066ad216-b34d-4fb0-9aeb-0308b5ca9ccb")) [3mheader_map[0m[2m=[0m{"host": "localhost:3000", "user-agent": "Go-http-client/1.1", "content-length": "0", "api-key": "e1f11936-2004-46ee-b310-84ddb8fb8d14", "container": "066ad216-b34d-4fb0-9aeb-0308b5ca9ccb", "content-type": "application/json", "accept-encoding": "gzip"} [3mbody[0m[2m=[0mb""[1m}[0m[2m:[0m [2mhyper_util::client::legacy::connect::http[0m[2m:[0m connecting to 127.0.0.1:5000
[2m2024-05-18T13:46:32.050942Z[0m [34mDEBUG[0m [1mtrigger_container[0m[1m{[0m[3mpool[0m[2m=[0mPool { size: 2, num_idle: 1, is_closed: false, options: PoolOptions { max_connections: 5, min_connections: 0, connect_timeout: 3s, max_lifetime: Some(1800s), idle_timeout: Some(600s), test_before_acquire: true } } [3mcontainer[0m[2m=[0mContainer { container_id: 066ad216-b34d-4fb0-9aeb-0308b5ca9ccb, language: "go", user_id: Some(1990720b-0ba6-4c3f-9a3c-8be8ef391fe3), port: Some(5000) } [3mmethod[0m[2m=[0mPOST [3mquery[0m[2m=[0mRawQuery(Some("container_id=066ad216-b34d-4fb0-9aeb-0308b5ca9ccb")) [3mheader_map[0m[2m=[0m{"host": "localhost:3000", "user-agent": "Go-http-client/1.1", "content-length": "0", "api-key": "e1f11936-2004-46ee-b310-84ddb8fb8d14", "container": "066ad216-b34d-4fb0-9aeb-0308b5ca9ccb", "content-type": "application/json", "accept-encoding": "gzip"} [3mbody[0m[2m=[0mb""[1m}[0m[2m:[0m [2mhyper_util::client::legacy::connect::http[0m[2m:[0m connected to 127.0.0.1:5000
[2m2024-05-18T13:46:32.050988Z[0m [35mTRACE[0m [1mtrigger_container[0m[1m{[0m[3mpool[0m[2m=[0mPool { size: 2, num_idle: 1, is_closed: false, options: PoolOptions { max_connections: 5, min_connections: 0, connect_timeout: 3s, max_lifetime: Some(1800s), idle_timeout: Some(600s), test_before_acquire: true } } [3mcontainer[0m[2m=[0mContainer { container_id: 066ad216-b34d-4fb0-9aeb-0308b5ca9ccb, language: "go", user_id: Some(1990720b-0ba6-4c3f-9a3c-8be8ef391fe3), port: Some(5000) } [3mmethod[0m[2m=[0mPOST [3mquery[0m[2m=[0mRawQuery(Some("container_id=066ad216-b34d-4fb0-9aeb-0308b5ca9ccb")) [3mheader_map[0m[2m=[0m{"host": "localhost:3000", "user-agent": "Go-http-client/1.1", "content-length": "0", "api-key": "e1f11936-2004-46ee-b310-84ddb8fb8d14", "container": "066ad216-b34d-4fb0-9aeb-0308b5ca9ccb", "content-type": "application/json", "accept-encoding": "gzip"} [3mbody[0m[2m=[0mb""[1m}[0m[2m:[0m [2mhyper_util::client::legacy::client[0m[2m:[0m http1 handshake complete, spawning background dispatcher task
[2m2024-05-18T13:46:32.051057Z[0m [35mTRACE[0m [1mtrigger_container[0m[1m{[0m[3mpool[0m[2m=[0mPool { size: 2, num_idle: 1, is_closed: false, options: PoolOptions { max_connections: 5, min_connections: 0, connect_timeout: 3s, max_lifetime: Some(1800s), idle_timeout: Some(600s), test_before_acquire: true } } [3mcontainer[0m[2m=[0mContainer { container_id: 066ad216-b34d-4fb0-9aeb-0308b5ca9ccb, language: "go", user_id: Some(1990720b-0ba6-4c3f-9a3c-8be8ef391fe3), port: Some(5000) } [3mmethod[0m[2m=[0mPOST [3mquery[0m[2m=[0mRawQuery(Some("container_id=066ad216-b34d-4fb0-9aeb-0308b5ca9ccb")) [3mheader_map[0m[2m=[0m{"host": "localhost:3000", "user-agent": "Go-http-client/1.1", "content-length": "0", "api-key": "e1f11936-2004-46ee-b310-84ddb8fb8d14", "container": "066ad216-b34d-4fb0-9aeb-0308b5ca9ccb", "content-type": "application/json", "accept-encoding": "gzip"} [3mbody[0m[2m=[0mb""[1m}[0m[2m:[0m [2mhyper_util::client::legacy::pool[0m[2m:[0m checkout dropped for ("http", 127.0.0.1:5000)
[2m2024-05-18T13:46:32.051333Z[0m [35mTRACE[0m [1mtrigger_container[0m[1m{[0m[3mpool[0m[2m=[0mPool { size: 2, num_idle: 1, is_closed: false, options: PoolOptions { max_connections: 5, min_connections: 0, connect_timeout: 3s, max_lifetime: Some(1800s), idle_timeout: Some(600s), test_before_acquire: true } } [3mcontainer[0m[2m=[0mContainer { container_id: 066ad216-b34d-4fb0-9aeb-0308b5ca9ccb, language: "go", user_id: Some(1990720b-0ba6-4c3f-9a3c-8be8ef391fe3), port: Some(5000) } [3mmethod[0m[2m=[0mPOST [3mquery[0m[2m=[0mRawQuery(Some("container_id=066ad216-b34d-4fb0-9aeb-0308b5ca9ccb")) [3mheader_map[0m[2m=[0m{"host": "localhost:3000", "user-agent": "Go-http-client/1.1", "content-length": "0", "api-key": "e1f11936-2004-46ee-b310-84ddb8fb8d14", "container": "066ad216-b34d-4fb0-9aeb-0308b5ca9ccb", "content-type": "application/json", "accept-encoding": "gzip"} [3mbody[0m[2m=[0mb""[1m}[0m[2m:[0m [2mhyper_util::client::legacy::pool[0m[2m:[0m put; add idle connection for ("http", 127.0.0.1:5000)
[2m2024-05-18T13:46:32.051376Z[0m [34mDEBUG[0m [1mtrigger_container[0m[1m{[0m[3mpool[0m[2m=[0mPool { size: 2, num_idle: 1, is_closed: false, options: PoolOptions { max_connections: 5, min_connections: 0, connect_timeout: 3s, max_lifetime: Some(1800s), idle_timeout: Some(600s), test_before_acquire: true } } [3mcontainer[0m[2m=[0mContainer { container_id: 066ad216-b34d-4fb0-9aeb-0308b5ca9ccb, language: "go", user_id: Some(1990720b-0ba6-4c3f-9a3c-8be8ef391fe3), port: Some(5000) } [3mmethod[0m[2m=[0mPOST [3mquery[0m[2m=[0mRawQuery(Some("container_id=066ad216-b34d-4fb0-9aeb-0308b5ca9ccb")) [3mheader_map[0m[2m=[0m{"host": "localhost:3000", "user-agent": "Go-http-client/1.1", "content-length": "0", "api-key": "e1f11936-2004-46ee-b310-84ddb8fb8d14", "container": "066ad216-b34d-4fb0-9aeb-0308b5ca9ccb", "content-type": "application/json", "accept-encoding": "gzip"} [3mbody[0m[2m=[0mb""[1m}[0m[2m:[0m [2mhyper_util::client::legacy::pool[0m[2m:[0m pooling idle connection for ("http", 127.0.0.1:5000)
[2m2024-05-18T13:46:32.632283Z[0m [32m INFO[0m [2mkappa::routes::middleware[0m[2m:[0m api key e1f11936-2004-46ee-b310-84ddb8fb8d14
[2m2024-05-18T13:46:32.633185Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT * FROM \"user\" â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  *\nFROM\n  \"user\"\nWHERE\n  api_key = $1\n" [3mrows_affected[0m[2m=[0m0 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m209.52Âµs [3melapsed_secs[0m[2m=[0m0.00020952
[2m2024-05-18T13:46:32.633978Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT * FROM container â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  *\nFROM\n  container\nWHERE\n  user_id = $1\n" [3mrows_affected[0m[2m=[0m1 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m139.911Âµs [3melapsed_secs[0m[2m=[0m0.000139911
[2m2024-05-18T13:46:32.921817Z[0m [32m INFO[0m [2mkappa::routes::middleware[0m[2m:[0m api key e1f11936-2004-46ee-b310-84ddb8fb8d14
[2m2024-05-18T13:46:32.922767Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT * FROM \"user\" â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  *\nFROM\n  \"user\"\nWHERE\n  api_key = $1\n" [3mrows_affected[0m[2m=[0m0 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m165.85Âµs [3melapsed_secs[0m[2m=[0m0.00016585
[2m2024-05-18T13:46:32.923727Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT * FROM container â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  *\nFROM\n  container\nWHERE\n  container_id = $1\n  AND user_id = $2\n" [3mrows_affected[0m[2m=[0m0 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m134.081Âµs [3melapsed_secs[0m[2m=[0m0.000134081
[2m2024-05-18T13:46:32.952679Z[0m [35mTRACE[0m [1mtrigger_container[0m[1m{[0m[3mpool[0m[2m=[0mPool { size: 2, num_idle: 1, is_closed: false, options: PoolOptions { max_connections: 5, min_connections: 0, connect_timeout: 3s, max_lifetime: Some(1800s), idle_timeout: Some(600s), test_before_acquire: true } } [3mcontainer[0m[2m=[0mContainer { container_id: 066ad216-b34d-4fb0-9aeb-0308b5ca9ccb, language: "go", user_id: Some(1990720b-0ba6-4c3f-9a3c-8be8ef391fe3), port: Some(5000) } [3mmethod[0m[2m=[0mPOST [3mquery[0m[2m=[0mRawQuery(Some("container_id=066ad216-b34d-4fb0-9aeb-0308b5ca9ccb")) [3mheader_map[0m[2m=[0m{"host": "localhost:3000", "user-agent": "Go-http-client/1.1", "content-length": "0", "api-key": "e1f11936-2004-46ee-b310-84ddb8fb8d14", "container": "066ad216-b34d-4fb0-9aeb-0308b5ca9ccb", "content-type": "application/json", "accept-encoding": "gzip"} [3mbody[0m[2m=[0mb""[1m}[0m[2m:[0m [2mhyper_util::client::legacy::pool[0m[2m:[0m checkout waiting for idle connection: ("http", 127.0.0.1:5000)
[2m2024-05-18T13:46:32.952734Z[0m [35mTRACE[0m [1mtrigger_container[0m[1m{[0m[3mpool[0m[2m=[0mPool { size: 2, num_idle: 1, is_closed: false, options: PoolOptions { max_connections: 5, min_connections: 0, connect_timeout: 3s, max_lifetime: Some(1800s), idle_timeout: Some(600s), test_before_acquire: true } } [3mcontainer[0m[2m=[0mContainer { container_id: 066ad216-b34d-4fb0-9aeb-0308b5ca9ccb, language: "go", user_id: Some(1990720b-0ba6-4c3f-9a3c-8be8ef391fe3), port: Some(5000) } [3mmethod[0m[2m=[0mPOST [3mquery[0m[2m=[0mRawQuery(Some("container_id=066ad216-b34d-4fb0-9aeb-0308b5ca9ccb")) [3mheader_map[0m[2m=[0m{"host": "localhost:3000", "user-agent": "Go-http-client/1.1", "content-length": "0", "api-key": "e1f11936-2004-46ee-b310-84ddb8fb8d14", "container": "066ad216-b34d-4fb0-9aeb-0308b5ca9ccb", "content-type": "application/json", "accept-encoding": "gzip"} [3mbody[0m[2m=[0mb""[1m}[0m[2m:[0m [2mhyper_util::client::legacy::connect::http[0m[2m:[0m Http::connect; scheme=Some("http"), host=Some("127.0.0.1"), port=Some(Port(5000))
[2m2024-05-18T13:46:32.952789Z[0m [34mDEBUG[0m [1mtrigger_container[0m[1m{[0m[3mpool[0m[2m=[0mPool { size: 2, num_idle: 1, is_closed: false, options: PoolOptions { max_connections: 5, min_connections: 0, connect_timeout: 3s, max_lifetime: Some(1800s), idle_timeout: Some(600s), test_before_acquire: true } } [3mcontainer[0m[2m=[0mContainer { container_id: 066ad216-b34d-4fb0-9aeb-0308b5ca9ccb, language: "go", user_id: Some(1990720b-0ba6-4c3f-9a3c-8be8ef391fe3), port: Some(5000) } [3mmethod[0m[2m=[0mPOST [3mquery[0m[2m=[0mRawQuery(Some("container_id=066ad216-b34d-4fb0-9aeb-0308b5ca9ccb")) [3mheader_map[0m[2m=[0m{"host": "localhost:3000", "user-agent": "Go-http-client/1.1", "content-length": "0", "api-key": "e1f11936-2004-46ee-b310-84ddb8fb8d14", "container": "066ad216-b34d-4fb0-9aeb-0308b5ca9ccb", "content-type": "application/json", "accept-encoding": "gzip"} [3mbody[0m[2m=[0mb""[1m}[0m[2m:[0m [2mhyper_util::client::legacy::connect::http[0m[2m:[0m connecting to 127.0.0.1:5000
[2m2024-05-18T13:46:32.952962Z[0m [34mDEBUG[0m [1mtrigger_container[0m[1m{[0m[3mpool[0m[2m=[0mPool { size: 2, num_idle: 1, is_closed: false, options: PoolOptions { max_connections: 5, min_connections: 0, connect_timeout: 3s, max_lifetime: Some(1800s), idle_timeout: Some(600s), test_before_acquire: true } } [3mcontainer[0m[2m=[0mContainer { container_id: 066ad216-b34d-4fb0-9aeb-0308b5ca9ccb, language: "go", user_id: Some(1990720b-0ba6-4c3f-9a3c-8be8ef391fe3), port: Some(5000) } [3mmethod[0m[2m=[0mPOST [3mquery[0m[2m=[0mRawQuery(Some("container_id=066ad216-b34d-4fb0-9aeb-0308b5ca9ccb")) [3mheader_map[0m[2m=[0m{"host": "localhost:3000", "user-agent": "Go-http-client/1.1", "content-length": "0", "api-key": "e1f11936-2004-46ee-b310-84ddb8fb8d14", "container": "066ad216-b34d-4fb0-9aeb-0308b5ca9ccb", "content-type": "application/json", "accept-encoding": "gzip"} [3mbody[0m[2m=[0mb""[1m}[0m[2m:[0m [2mhyper_util::client::legacy::connect::http[0m[2m:[0m connected to 127.0.0.1:5000
[2m2024-05-18T13:46:32.953001Z[0m [35mTRACE[0m [1mtrigger_container[0m[1m{[0m[3mpool[0m[2m=[0mPool { size: 2, num_idle: 1, is_closed: false, options: PoolOptions { max_connections: 5, min_connections: 0, connect_timeout: 3s, max_lifetime: Some(1800s), idle_timeout: Some(600s), test_before_acquire: true } } [3mcontainer[0m[2m=[0mContainer { container_id: 066ad216-b34d-4fb0-9aeb-0308b5ca9ccb, language: "go", user_id: Some(1990720b-0ba6-4c3f-9a3c-8be8ef391fe3), port: Some(5000) } [3mmethod[0m[2m=[0mPOST [3mquery[0m[2m=[0mRawQuery(Some("container_id=066ad216-b34d-4fb0-9aeb-0308b5ca9ccb")) [3mheader_map[0m[2m=[0m{"host": "localhost:3000", "user-agent": "Go-http-client/1.1", "content-length": "0", "api-key": "e1f11936-2004-46ee-b310-84ddb8fb8d14", "container": "066ad216-b34d-4fb0-9aeb-0308b5ca9ccb", "content-type": "application/json", "accept-encoding": "gzip"} [3mbody[0m[2m=[0mb""[1m}[0m[2m:[0m [2mhyper_util::client::legacy::client[0m[2m:[0m http1 handshake complete, spawning background dispatcher task
[2m2024-05-18T13:46:32.953067Z[0m [35mTRACE[0m [1mtrigger_container[0m[1m{[0m[3mpool[0m[2m=[0mPool { size: 2, num_idle: 1, is_closed: false, options: PoolOptions { max_connections: 5, min_connections: 0, connect_timeout: 3s, max_lifetime: Some(1800s), idle_timeout: Some(600s), test_before_acquire: true } } [3mcontainer[0m[2m=[0mContainer { container_id: 066ad216-b34d-4fb0-9aeb-0308b5ca9ccb, language: "go", user_id: Some(1990720b-0ba6-4c3f-9a3c-8be8ef391fe3), port: Some(5000) } [3mmethod[0m[2m=[0mPOST [3mquery[0m[2m=[0mRawQuery(Some("container_id=066ad216-b34d-4fb0-9aeb-0308b5ca9ccb")) [3mheader_map[0m[2m=[0m{"host": "localhost:3000", "user-agent": "Go-http-client/1.1", "content-length": "0", "api-key": "e1f11936-2004-46ee-b310-84ddb8fb8d14", "container": "066ad216-b34d-4fb0-9aeb-0308b5ca9ccb", "content-type": "application/json", "accept-encoding": "gzip"} [3mbody[0m[2m=[0mb""[1m}[0m[2m:[0m [2mhyper_util::client::legacy::pool[0m[2m:[0m checkout dropped for ("http", 127.0.0.1:5000)
[2m2024-05-18T13:46:32.953364Z[0m [35mTRACE[0m [1mtrigger_container[0m[1m{[0m[3mpool[0m[2m=[0mPool { size: 2, num_idle: 1, is_closed: false, options: PoolOptions { max_connections: 5, min_connections: 0, connect_timeout: 3s, max_lifetime: Some(1800s), idle_timeout: Some(600s), test_before_acquire: true } } [3mcontainer[0m[2m=[0mContainer { container_id: 066ad216-b34d-4fb0-9aeb-0308b5ca9ccb, language: "go", user_id: Some(1990720b-0ba6-4c3f-9a3c-8be8ef391fe3), port: Some(5000) } [3mmethod[0m[2m=[0mPOST [3mquery[0m[2m=[0mRawQuery(Some("container_id=066ad216-b34d-4fb0-9aeb-0308b5ca9ccb")) [3mheader_map[0m[2m=[0m{"host": "localhost:3000", "user-agent": "Go-http-client/1.1", "content-length": "0", "api-key": "e1f11936-2004-46ee-b310-84ddb8fb8d14", "container": "066ad216-b34d-4fb0-9aeb-0308b5ca9ccb", "content-type": "application/json", "accept-encoding": "gzip"} [3mbody[0m[2m=[0mb""[1m}[0m[2m:[0m [2mhyper_util::client::legacy::pool[0m[2m:[0m put; add idle connection for ("http", 127.0.0.1:5000)
[2m2024-05-18T13:46:32.953410Z[0m [34mDEBUG[0m [1mtrigger_container[0m[1m{[0m[3mpool[0m[2m=[0mPool { size: 2, num_idle: 1, is_closed: false, options: PoolOptions { max_connections: 5, min_connections: 0, connect_timeout: 3s, max_lifetime: Some(1800s), idle_timeout: Some(600s), test_before_acquire: true } } [3mcontainer[0m[2m=[0mContainer { container_id: 066ad216-b34d-4fb0-9aeb-0308b5ca9ccb, language: "go", user_id: Some(1990720b-0ba6-4c3f-9a3c-8be8ef391fe3), port: Some(5000) } [3mmethod[0m[2m=[0mPOST [3mquery[0m[2m=[0mRawQuery(Some("container_id=066ad216-b34d-4fb0-9aeb-0308b5ca9ccb")) [3mheader_map[0m[2m=[0m{"host": "localhost:3000", "user-agent": "Go-http-client/1.1", "content-length": "0", "api-key": "e1f11936-2004-46ee-b310-84ddb8fb8d14", "container": "066ad216-b34d-4fb0-9aeb-0308b5ca9ccb", "content-type": "application/json", "accept-encoding": "gzip"} [3mbody[0m[2m=[0mb""[1m}[0m[2m:[0m [2mhyper_util::client::legacy::pool[0m[2m:[0m pooling idle connection for ("http", 127.0.0.1:5000)
[2m2024-05-18T13:47:07.556516Z[0m [32m INFO[0m [2mkappa::routes::middleware[0m[2m:[0m api key e1f11936-2004-46ee-b310-84ddb8fb8d14
[2m2024-05-18T13:47:07.557431Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT * FROM \"user\" â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  *\nFROM\n  \"user\"\nWHERE\n  api_key = $1\n" [3mrows_affected[0m[2m=[0m0 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m200.171Âµs [3melapsed_secs[0m[2m=[0m0.000200171
[2m2024-05-18T13:47:07.558212Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT * FROM container â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  *\nFROM\n  container\nWHERE\n  user_id = $1\n" [3mrows_affected[0m[2m=[0m1 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m130.621Âµs [3melapsed_secs[0m[2m=[0m0.000130621
[2m2024-05-18T13:47:08.168990Z[0m [32m INFO[0m [2mkappa::routes::middleware[0m[2m:[0m api key e1f11936-2004-46ee-b310-84ddb8fb8d14
[2m2024-05-18T13:47:08.169874Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT * FROM \"user\" â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  *\nFROM\n  \"user\"\nWHERE\n  api_key = $1\n" [3mrows_affected[0m[2m=[0m0 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m182.32Âµs [3melapsed_secs[0m[2m=[0m0.00018232
[2m2024-05-18T13:47:08.171024Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT * FROM container â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  *\nFROM\n  container\nWHERE\n  container_id = $1\n  AND user_id = $2\n" [3mrows_affected[0m[2m=[0m0 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m322.852Âµs [3melapsed_secs[0m[2m=[0m0.000322852
[2m2024-05-18T13:47:08.172615Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"DELETE FROM container WHERE â€¦" [3mdb.statement[0m[2m=[0m"\n\nDELETE FROM\n  container\nWHERE\n  container_id = $1\n" [3mrows_affected[0m[2m=[0m1 [3mrows_returned[0m[2m=[0m0 [3melapsed[0m[2m=[0m1.094935ms [3melapsed_secs[0m[2m=[0m0.001094935
[2m2024-05-18T13:47:24.984353Z[0m [32m INFO[0m [2mkappa::routes::middleware[0m[2m:[0m api key e1f11936-2004-46ee-b310-84ddb8fb8d14
[2m2024-05-18T13:47:24.985255Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT * FROM \"user\" â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  *\nFROM\n  \"user\"\nWHERE\n  api_key = $1\n" [3mrows_affected[0m[2m=[0m0 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m204.041Âµs [3melapsed_secs[0m[2m=[0m0.000204041
[2m2024-05-18T13:47:24.985445Z[0m [32m INFO[0m [2mkappa::routes::containers[0m[2m:[0m Received file with bytes length of 574

[2m2024-05-18T13:47:24.985629Z[0m [32m INFO[0m [2mkappa::routes::containers[0m[2m:[0m File extracted to "zip/ce075d79-3b07-4ad0-a0e3-a236a10fcc52/main.go" (748 bytes)
[2m2024-05-18T13:47:24.985868Z[0m [32m INFO[0m [2mkappa::docker::docker[0m[2m:[0m Created docker file with UUID:ce075d79-3b07-4ad0-a0e3-a236a10fcc52
[2m2024-05-18T13:47:24.986133Z[0m [35mTRACE[0m [2mhyper_util::client::legacy::client[0m[2m:[0m http1 handshake complete, spawning background dispatcher task
[2m2024-05-18T13:47:24.986639Z[0m [35mTRACE[0m [2mhyper_util::client::legacy::pool[0m[2m:[0m pool dropped, dropping pooled (("unix", 2f7661722f72756e2f646f636b65722e736f636b))
[2m2024-05-18T13:47:24.986930Z[0m [35mTRACE[0m [2mhyper_util::client::legacy::client[0m[2m:[0m http1 handshake complete, spawning background dispatcher task
[2m2024-05-18T13:47:25.009470Z[0m [32m INFO[0m [2mkappa::docker::docker[0m[2m:[0m Building container ce075d79-3b07-4ad0-a0e3-a236a10fcc52 progress : No progress
[2m2024-05-18T13:47:25.009776Z[0m [35mTRACE[0m [2mhyper_util::client::legacy::client[0m[2m:[0m http1 handshake complete, spawning background dispatcher task
[2m2024-05-18T13:47:25.019058Z[0m [35mTRACE[0m [2mhyper_util::client::legacy::pool[0m[2m:[0m pool dropped, dropping pooled (("unix", 2f7661722f72756e2f646f636b65722e736f636b))
[2m2024-05-18T13:47:25.019291Z[0m [35mTRACE[0m [2mhyper_util::client::legacy::client[0m[2m:[0m http1 handshake complete, spawning background dispatcher task
[2m2024-05-18T13:47:25.162951Z[0m [35mTRACE[0m [2mhyper_util::client::legacy::pool[0m[2m:[0m pool dropped, dropping pooled (("unix", 2f7661722f72756e2f646f636b65722e736f636b))
[2m2024-05-18T13:47:25.163054Z[0m [32m INFO[0m [2mkappa::docker::docker[0m[2m:[0m Successfully built and started docker container
[2m2024-05-18T13:47:25.165882Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"insert into \"container\"(container_id, language, â€¦" [3mdb.statement[0m[2m=[0m"\n\ninsert into\n  \"container\"(container_id, language, user_id, port)\nvalues\n  ($1 :: UUID, $2 :: TEXT, $3 :: UUID, $4 :: INTEGER)\n" [3mrows_affected[0m[2m=[0m1 [3mrows_returned[0m[2m=[0m0 [3melapsed[0m[2m=[0m1.029025ms [3melapsed_secs[0m[2m=[0m0.001029025
[2m2024-05-18T13:47:26.782028Z[0m [32m INFO[0m [2mkappa::routes::middleware[0m[2m:[0m api key e1f11936-2004-46ee-b310-84ddb8fb8d14
[2m2024-05-18T13:47:26.782979Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT * FROM \"user\" â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  *\nFROM\n  \"user\"\nWHERE\n  api_key = $1\n" [3mrows_affected[0m[2m=[0m0 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m239.701Âµs [3melapsed_secs[0m[2m=[0m0.000239701
[2m2024-05-18T13:47:26.783821Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT * FROM container â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  *\nFROM\n  container\nWHERE\n  user_id = $1\n" [3mrows_affected[0m[2m=[0m1 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m197.8Âµs [3melapsed_secs[0m[2m=[0m0.0001978
[2m2024-05-18T13:47:28.621076Z[0m [32m INFO[0m [2mkappa::routes::middleware[0m[2m:[0m api key e1f11936-2004-46ee-b310-84ddb8fb8d14
[2m2024-05-18T13:47:28.622068Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT * FROM \"user\" â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  *\nFROM\n  \"user\"\nWHERE\n  api_key = $1\n" [3mrows_affected[0m[2m=[0m0 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m238.471Âµs [3melapsed_secs[0m[2m=[0m0.000238471
[2m2024-05-18T13:47:28.623059Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT * FROM container â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  *\nFROM\n  container\nWHERE\n  container_id = $1\n  AND user_id = $2\n" [3mrows_affected[0m[2m=[0m0 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m175.58Âµs [3melapsed_secs[0m[2m=[0m0.00017558
[2m2024-05-18T13:47:28.652090Z[0m [35mTRACE[0m [1mtrigger_container[0m[1m{[0m[3mpool[0m[2m=[0mPool { size: 2, num_idle: 1, is_closed: false, options: PoolOptions { max_connections: 5, min_connections: 0, connect_timeout: 3s, max_lifetime: Some(1800s), idle_timeout: Some(600s), test_before_acquire: true } } [3mcontainer[0m[2m=[0mContainer { container_id: ce075d79-3b07-4ad0-a0e3-a236a10fcc52, language: "go", user_id: Some(1990720b-0ba6-4c3f-9a3c-8be8ef391fe3), port: Some(5002) } [3mmethod[0m[2m=[0mPOST [3mquery[0m[2m=[0mRawQuery(Some("container_id=ce075d79-3b07-4ad0-a0e3-a236a10fcc52")) [3mheader_map[0m[2m=[0m{"host": "localhost:3000", "user-agent": "Go-http-client/1.1", "content-length": "0", "api-key": "e1f11936-2004-46ee-b310-84ddb8fb8d14", "container": "ce075d79-3b07-4ad0-a0e3-a236a10fcc52", "content-type": "application/json", "accept-encoding": "gzip"} [3mbody[0m[2m=[0mb""[1m}[0m[2m:[0m [2mhyper_util::client::legacy::pool[0m[2m:[0m checkout waiting for idle connection: ("http", 127.0.0.1:5002)
[2m2024-05-18T13:47:28.652144Z[0m [35mTRACE[0m [1mtrigger_container[0m[1m{[0m[3mpool[0m[2m=[0mPool { size: 2, num_idle: 1, is_closed: false, options: PoolOptions { max_connections: 5, min_connections: 0, connect_timeout: 3s, max_lifetime: Some(1800s), idle_timeout: Some(600s), test_before_acquire: true } } [3mcontainer[0m[2m=[0mContainer { container_id: ce075d79-3b07-4ad0-a0e3-a236a10fcc52, language: "go", user_id: Some(1990720b-0ba6-4c3f-9a3c-8be8ef391fe3), port: Some(5002) } [3mmethod[0m[2m=[0mPOST [3mquery[0m[2m=[0mRawQuery(Some("container_id=ce075d79-3b07-4ad0-a0e3-a236a10fcc52")) [3mheader_map[0m[2m=[0m{"host": "localhost:3000", "user-agent": "Go-http-client/1.1", "content-length": "0", "api-key": "e1f11936-2004-46ee-b310-84ddb8fb8d14", "container": "ce075d79-3b07-4ad0-a0e3-a236a10fcc52", "content-type": "application/json", "accept-encoding": "gzip"} [3mbody[0m[2m=[0mb""[1m}[0m[2m:[0m [2mhyper_util::client::legacy::connect::http[0m[2m:[0m Http::connect; scheme=Some("http"), host=Some("127.0.0.1"), port=Some(Port(5002))
[2m2024-05-18T13:47:28.652190Z[0m [34mDEBUG[0m [1mtrigger_container[0m[1m{[0m[3mpool[0m[2m=[0mPool { size: 2, num_idle: 1, is_closed: false, options: PoolOptions { max_connections: 5, min_connections: 0, connect_timeout: 3s, max_lifetime: Some(1800s), idle_timeout: Some(600s), test_before_acquire: true } } [3mcontainer[0m[2m=[0mContainer { container_id: ce075d79-3b07-4ad0-a0e3-a236a10fcc52, language: "go", user_id: Some(1990720b-0ba6-4c3f-9a3c-8be8ef391fe3), port: Some(5002) } [3mmethod[0m[2m=[0mPOST [3mquery[0m[2m=[0mRawQuery(Some("container_id=ce075d79-3b07-4ad0-a0e3-a236a10fcc52")) [3mheader_map[0m[2m=[0m{"host": "localhost:3000", "user-agent": "Go-http-client/1.1", "content-length": "0", "api-key": "e1f11936-2004-46ee-b310-84ddb8fb8d14", "container": "ce075d79-3b07-4ad0-a0e3-a236a10fcc52", "content-type": "application/json", "accept-encoding": "gzip"} [3mbody[0m[2m=[0mb""[1m}[0m[2m:[0m [2mhyper_util::client::legacy::connect::http[0m[2m:[0m connecting to 127.0.0.1:5002
[2m2024-05-18T13:47:28.652380Z[0m [34mDEBUG[0m [1mtrigger_container[0m[1m{[0m[3mpool[0m[2m=[0mPool { size: 2, num_idle: 1, is_closed: false, options: PoolOptions { max_connections: 5, min_connections: 0, connect_timeout: 3s, max_lifetime: Some(1800s), idle_timeout: Some(600s), test_before_acquire: true } } [3mcontainer[0m[2m=[0mContainer { container_id: ce075d79-3b07-4ad0-a0e3-a236a10fcc52, language: "go", user_id: Some(1990720b-0ba6-4c3f-9a3c-8be8ef391fe3), port: Some(5002) } [3mmethod[0m[2m=[0mPOST [3mquery[0m[2m=[0mRawQuery(Some("container_id=ce075d79-3b07-4ad0-a0e3-a236a10fcc52")) [3mheader_map[0m[2m=[0m{"host": "localhost:3000", "user-agent": "Go-http-client/1.1", "content-length": "0", "api-key": "e1f11936-2004-46ee-b310-84ddb8fb8d14", "container": "ce075d79-3b07-4ad0-a0e3-a236a10fcc52", "content-type": "application/json", "accept-encoding": "gzip"} [3mbody[0m[2m=[0mb""[1m}[0m[2m:[0m [2mhyper_util::client::legacy::connect::http[0m[2m:[0m connected to 127.0.0.1:5002
[2m2024-05-18T13:47:28.652418Z[0m [35mTRACE[0m [1mtrigger_container[0m[1m{[0m[3mpool[0m[2m=[0mPool { size: 2, num_idle: 1, is_closed: false, options: PoolOptions { max_connections: 5, min_connections: 0, connect_timeout: 3s, max_lifetime: Some(1800s), idle_timeout: Some(600s), test_before_acquire: true } } [3mcontainer[0m[2m=[0mContainer { container_id: ce075d79-3b07-4ad0-a0e3-a236a10fcc52, language: "go", user_id: Some(1990720b-0ba6-4c3f-9a3c-8be8ef391fe3), port: Some(5002) } [3mmethod[0m[2m=[0mPOST [3mquery[0m[2m=[0mRawQuery(Some("container_id=ce075d79-3b07-4ad0-a0e3-a236a10fcc52")) [3mheader_map[0m[2m=[0m{"host": "localhost:3000", "user-agent": "Go-http-client/1.1", "content-length": "0", "api-key": "e1f11936-2004-46ee-b310-84ddb8fb8d14", "container": "ce075d79-3b07-4ad0-a0e3-a236a10fcc52", "content-type": "application/json", "accept-encoding": "gzip"} [3mbody[0m[2m=[0mb""[1m}[0m[2m:[0m [2mhyper_util::client::legacy::client[0m[2m:[0m http1 handshake complete, spawning background dispatcher task
[2m2024-05-18T13:47:28.652485Z[0m [35mTRACE[0m [1mtrigger_container[0m[1m{[0m[3mpool[0m[2m=[0mPool { size: 2, num_idle: 1, is_closed: false, options: PoolOptions { max_connections: 5, min_connections: 0, connect_timeout: 3s, max_lifetime: Some(1800s), idle_timeout: Some(600s), test_before_acquire: true } } [3mcontainer[0m[2m=[0mContainer { container_id: ce075d79-3b07-4ad0-a0e3-a236a10fcc52, language: "go", user_id: Some(1990720b-0ba6-4c3f-9a3c-8be8ef391fe3), port: Some(5002) } [3mmethod[0m[2m=[0mPOST [3mquery[0m[2m=[0mRawQuery(Some("container_id=ce075d79-3b07-4ad0-a0e3-a236a10fcc52")) [3mheader_map[0m[2m=[0m{"host": "localhost:3000", "user-agent": "Go-http-client/1.1", "content-length": "0", "api-key": "e1f11936-2004-46ee-b310-84ddb8fb8d14", "container": "ce075d79-3b07-4ad0-a0e3-a236a10fcc52", "content-type": "application/json", "accept-encoding": "gzip"} [3mbody[0m[2m=[0mb""[1m}[0m[2m:[0m [2mhyper_util::client::legacy::pool[0m[2m:[0m checkout dropped for ("http", 127.0.0.1:5002)
[2m2024-05-18T13:47:28.710323Z[0m [35mTRACE[0m [1mtrigger_container[0m[1m{[0m[3mpool[0m[2m=[0mPool { size: 2, num_idle: 1, is_closed: false, options: PoolOptions { max_connections: 5, min_connections: 0, connect_timeout: 3s, max_lifetime: Some(1800s), idle_timeout: Some(600s), test_before_acquire: true } } [3mcontainer[0m[2m=[0mContainer { container_id: ce075d79-3b07-4ad0-a0e3-a236a10fcc52, language: "go", user_id: Some(1990720b-0ba6-4c3f-9a3c-8be8ef391fe3), port: Some(5002) } [3mmethod[0m[2m=[0mPOST [3mquery[0m[2m=[0mRawQuery(Some("container_id=ce075d79-3b07-4ad0-a0e3-a236a10fcc52")) [3mheader_map[0m[2m=[0m{"host": "localhost:3000", "user-agent": "Go-http-client/1.1", "content-length": "0", "api-key": "e1f11936-2004-46ee-b310-84ddb8fb8d14", "container": "ce075d79-3b07-4ad0-a0e3-a236a10fcc52", "content-type": "application/json", "accept-encoding": "gzip"} [3mbody[0m[2m=[0mb""[1m}[0m[2m:[0m [2mhyper_util::client::legacy::pool[0m[2m:[0m put; add idle connection for ("http", 127.0.0.1:5002)
[2m2024-05-18T13:47:28.710407Z[0m [34mDEBUG[0m [1mtrigger_container[0m[1m{[0m[3mpool[0m[2m=[0mPool { size: 2, num_idle: 1, is_closed: false, options: PoolOptions { max_connections: 5, min_connections: 0, connect_timeout: 3s, max_lifetime: Some(1800s), idle_timeout: Some(600s), test_before_acquire: true } } [3mcontainer[0m[2m=[0mContainer { container_id: ce075d79-3b07-4ad0-a0e3-a236a10fcc52, language: "go", user_id: Some(1990720b-0ba6-4c3f-9a3c-8be8ef391fe3), port: Some(5002) } [3mmethod[0m[2m=[0mPOST [3mquery[0m[2m=[0mRawQuery(Some("container_id=ce075d79-3b07-4ad0-a0e3-a236a10fcc52")) [3mheader_map[0m[2m=[0m{"host": "localhost:3000", "user-agent": "Go-http-client/1.1", "content-length": "0", "api-key": "e1f11936-2004-46ee-b310-84ddb8fb8d14", "container": "ce075d79-3b07-4ad0-a0e3-a236a10fcc52", "content-type": "application/json", "accept-encoding": "gzip"} [3mbody[0m[2m=[0mb""[1m}[0m[2m:[0m [2mhyper_util::client::legacy::pool[0m[2m:[0m pooling idle connection for ("http", 127.0.0.1:5002)
[2m2024-05-18T13:53:46.940388Z[0m [32m INFO[0m [2mkappa::routes::middleware[0m[2m:[0m api key e1f11936-2004-46ee-b310-84ddb8fb8d14
[2m2024-05-18T13:53:46.941508Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT * FROM \"user\" â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  *\nFROM\n  \"user\"\nWHERE\n  api_key = $1\n" [3mrows_affected[0m[2m=[0m0 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m210.361Âµs [3melapsed_secs[0m[2m=[0m0.000210361
[2m2024-05-18T13:53:46.942357Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT * FROM container â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  *\nFROM\n  container\nWHERE\n  user_id = $1\n" [3mrows_affected[0m[2m=[0m1 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m169.581Âµs [3melapsed_secs[0m[2m=[0m0.000169581
[2m2024-05-18T13:53:47.370400Z[0m [32m INFO[0m [2mkappa::routes::middleware[0m[2m:[0m api key e1f11936-2004-46ee-b310-84ddb8fb8d14
[2m2024-05-18T13:53:47.371308Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT * FROM \"user\" â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  *\nFROM\n  \"user\"\nWHERE\n  api_key = $1\n" [3mrows_affected[0m[2m=[0m0 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m187.441Âµs [3melapsed_secs[0m[2m=[0m0.000187441
[2m2024-05-18T13:53:47.372545Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT * FROM container â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  *\nFROM\n  container\nWHERE\n  container_id = $1\n  AND user_id = $2\n" [3mrows_affected[0m[2m=[0m0 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m368.582Âµs [3melapsed_secs[0m[2m=[0m0.000368582
[2m2024-05-18T13:53:47.374039Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"DELETE FROM container WHERE â€¦" [3mdb.statement[0m[2m=[0m"\n\nDELETE FROM\n  container\nWHERE\n  container_id = $1\n" [3mrows_affected[0m[2m=[0m1 [3mrows_returned[0m[2m=[0m0 [3melapsed[0m[2m=[0m977.313Âµs [3melapsed_secs[0m[2m=[0m0.000977313
[2m2024-05-18T13:53:55.803729Z[0m [32m INFO[0m [2mkappa::routes::middleware[0m[2m:[0m api key e1f11936-2004-46ee-b310-84ddb8fb8d14
[2m2024-05-18T13:53:55.804693Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT * FROM \"user\" â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  *\nFROM\n  \"user\"\nWHERE\n  api_key = $1\n" [3mrows_affected[0m[2m=[0m0 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m240.591Âµs [3melapsed_secs[0m[2m=[0m0.000240591
[2m2024-05-18T13:53:55.804887Z[0m [32m INFO[0m [2mkappa::routes::containers[0m[2m:[0m Received file with bytes length of 166

[2m2024-05-18T13:53:55.805072Z[0m [32m INFO[0m [2mkappa::routes::containers[0m[2m:[0m File extracted to "zip/cfbc7eb4-8acc-4cfc-bca8-ff90828cf759/context" (0 bytes)
[2m2024-05-18T13:53:55.805200Z[0m [32m INFO[0m [2mkappa::docker::docker[0m[2m:[0m Created docker file with UUID:cfbc7eb4-8acc-4cfc-bca8-ff90828cf759
[2m2024-05-18T13:53:55.805451Z[0m [35mTRACE[0m [2mhyper_util::client::legacy::client[0m[2m:[0m http1 handshake complete, spawning background dispatcher task
[2m2024-05-18T13:53:55.806048Z[0m [35mTRACE[0m [2mhyper_util::client::legacy::pool[0m[2m:[0m pool dropped, dropping pooled (("unix", 2f7661722f72756e2f646f636b65722e736f636b))
[2m2024-05-18T13:53:55.806342Z[0m [35mTRACE[0m [2mhyper_util::client::legacy::client[0m[2m:[0m http1 handshake complete, spawning background dispatcher task
[2m2024-05-18T13:53:56.098331Z[0m [32m INFO[0m [2mkappa::docker::docker[0m[2m:[0m Building container cfbc7eb4-8acc-4cfc-bca8-ff90828cf759 progress : No progress
[2m2024-05-18T13:53:56.098381Z[0m [32m INFO[0m [2mkappa::docker::docker[0m[2m:[0m Building container cfbc7eb4-8acc-4cfc-bca8-ff90828cf759 progress : No progress
[2m2024-05-18T13:53:56.098417Z[0m [32m INFO[0m [2mkappa::docker::docker[0m[2m:[0m Building container cfbc7eb4-8acc-4cfc-bca8-ff90828cf759 progress : No progress
[2m2024-05-18T13:53:56.098447Z[0m [32m INFO[0m [2mkappa::docker::docker[0m[2m:[0m Building container cfbc7eb4-8acc-4cfc-bca8-ff90828cf759 progress : No progress
[2m2024-05-18T13:53:56.098477Z[0m [32m INFO[0m [2mkappa::docker::docker[0m[2m:[0m Building container cfbc7eb4-8acc-4cfc-bca8-ff90828cf759 progress : No progress
[2m2024-05-18T13:53:56.098509Z[0m [32m INFO[0m [2mkappa::docker::docker[0m[2m:[0m Building container cfbc7eb4-8acc-4cfc-bca8-ff90828cf759 progress : No progress
[2m2024-05-18T13:53:56.098540Z[0m [32m INFO[0m [2mkappa::docker::docker[0m[2m:[0m Building container cfbc7eb4-8acc-4cfc-bca8-ff90828cf759 progress : No progress
[2m2024-05-18T13:53:56.098570Z[0m [32m INFO[0m [2mkappa::docker::docker[0m[2m:[0m Building container cfbc7eb4-8acc-4cfc-bca8-ff90828cf759 progress : No progress
[2m2024-05-18T13:53:56.098599Z[0m [32m INFO[0m [2mkappa::docker::docker[0m[2m:[0m Building container cfbc7eb4-8acc-4cfc-bca8-ff90828cf759 progress : No progress
[2m2024-05-18T13:53:56.098656Z[0m [32m INFO[0m [2mkappa::docker::docker[0m[2m:[0m Building container cfbc7eb4-8acc-4cfc-bca8-ff90828cf759 progress : No progress
[2m2024-05-18T13:53:56.098691Z[0m [32m INFO[0m [2mkappa::docker::docker[0m[2m:[0m Building container cfbc7eb4-8acc-4cfc-bca8-ff90828cf759 progress : No progress
[2m2024-05-18T13:53:56.098723Z[0m [32m INFO[0m [2mkappa::docker::docker[0m[2m:[0m Building container cfbc7eb4-8acc-4cfc-bca8-ff90828cf759 progress : No progress
[2m2024-05-18T13:53:56.098754Z[0m [32m INFO[0m [2mkappa::docker::docker[0m[2m:[0m Building container cfbc7eb4-8acc-4cfc-bca8-ff90828cf759 progress : No progress
[2m2024-05-18T13:53:56.098782Z[0m [32m INFO[0m [2mkappa::docker::docker[0m[2m:[0m Building container cfbc7eb4-8acc-4cfc-bca8-ff90828cf759 progress : No progress
[2m2024-05-18T13:53:56.098810Z[0m [32m INFO[0m [2mkappa::docker::docker[0m[2m:[0m Building container cfbc7eb4-8acc-4cfc-bca8-ff90828cf759 progress : No progress
[2m2024-05-18T13:53:56.098838Z[0m [32m INFO[0m [2mkappa::docker::docker[0m[2m:[0m Building container cfbc7eb4-8acc-4cfc-bca8-ff90828cf759 progress : No progress
[2m2024-05-18T13:53:56.640684Z[0m [31mERROR[0m [2mkappa::errors::error[0m[2m:[0m [3merror.cause[0m[2m=[0mDockeriseContainerError("Error running Docker image: Error building Docker image: Docker stream error") [3merror.backtrace[0m[2m=[0m   0: <kappa::errors::error::AppError as core::convert::From<kappa::errors::error::CustomError>>::from
             at /home/will/rust/kappa/src/errors/error.rs:96:25
   1: <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
             at /rustc/9b00956e56009bab2aa15d7bff10916599e3d6d6/library/core/src/result.rs:1964:27
   2: kappa::routes::containers::new_container::{{closure}}
             at /home/will/rust/kappa/src/routes/containers.rs:303:16
   3: <F as axum::handler::Handler<(M,T1,T2,T3,T4),S>>::call::{{closure}}
             at /home/will/.cargo/registry/src/index.crates.io-6f17d22bba15001f/axum-0.7.5/src/handler/mod.rs:241:53
   4: <core::pin::Pin<P> as core::future::future::Future>::poll
             at /rustc/9b00956e56009bab2aa15d7bff10916599e3d6d6/library/core/src/future/future.rs:123:9
   5: <futures_util::future::future::map::Map<Fut,F> as core::future::future::Future>::poll
             at /home/will/.cargo/registry/src/index.crates.io-6f17d22bba15001f/futures-util-0.3.30/src/future/future/map.rs:55:37
   6: <futures_util::future::future::Map<Fut,F> as core::future::future::Future>::poll
             at /home/will/.cargo/registry/src/index.crates.io-6f17d22bba15001f/futures-util-0.3.30/src/lib.rs:91:13
   7: <axum::handler::future::IntoServiceFuture<F> as core::future::future::Future>::poll
             at /home/will/.cargo/registry/src/index.crates.io-6f17d22bba15001f/axum-0.7.5/src/macros.rs:42:17
   8: <F as futures_core::future::TryFuture>::try_poll
             at /home/will/.cargo/registry/src/index.crates.io-6f17d22bba15001f/futures-core-0.3.30/src/future.rs:82:9
   9: <futures_util::future::try_future::into_future::IntoFuture<Fut> as core::future::future::Future>::poll
             at /home/will/.cargo/registry/src/index.crates.io-6f17d22bba15001f/futures-util-0.3.30/src/future/try_future/into_future.rs:34:9
  10: <futures_util::future::future::map::Map<Fut,F> as core::future::future::Future>::poll
             at /home/will/.cargo/registry/src/index.crates.io-6f17d22bba15001f/futures-util-0.3.30/src/future/future/map.rs:55:37
  11: <futures_util::future::future::Map<Fut,F> as core::future::future::Future>::poll
             at /home/will/.cargo/registry/src/index.crates.io-6f17d22bba15001f/futures-util-0.3.30/src/lib.rs:91:13
  12: <futures_util::future::try_future::MapOk<Fut,F> as core::future::future::Future>::poll
             at /home/will/.cargo/registry/src/index.crates.io-6f17d22bba15001f/futures-util-0.3.30/src/lib.rs:91:13
  13: <tower::util::map_response::MapResponseFuture<F,N> as core::future::future::Future>::poll
             at /home/will/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tower-0.4.13/src/macros.rs:38:17
  14: <core::pin::Pin<P> as core::future::future::Future>::poll
             at /rustc/9b00956e56009bab2aa15d7bff10916599e3d6d6/library/core/src/future/future.rs:123:9
  15: <tower::util::oneshot::Oneshot<S,Req> as core::future::future::Future>::poll
             at /home/will/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tower-0.4.13/src/util/oneshot.rs:97:38
  16: <axum::routing::route::RouteFuture<E> as core::future::future::Future>::poll
             at /home/will/.cargo/registry/src/index.crates.io-6f17d22bba15001f/axum-0.7.5/src/routing/route.rs:162:61
  17: <F as futures_core::future::TryFuture>::try_poll
             at /home/will/.cargo/registry/src/index.crates.io-6f17d22bba15001f/futures-core-0.3.30/src/future.rs:82:9
  18: <futures_util::future::try_future::into_future::IntoFuture<Fut> as core::future::future::Future>::poll
             at /home/will/.cargo/registry/src/index.crates.io-6f17d22bba15001f/futures-util-0.3.30/src/future/try_future/into_future.rs:34:9
  19: <futures_util::future::future::map::Map<Fut,F> as core::future::future::Future>::poll
             at /home/will/.cargo/registry/src/index.crates.io-6f17d22bba15001f/futures-util-0.3.30/src/future/future/map.rs:55:37
  20: <futures_util::future::future::Map<Fut,F> as core::future::future::Future>::poll
             at /home/will/.cargo/registry/src/index.crates.io-6f17d22bba15001f/futures-util-0.3.30/src/lib.rs:91:13
  21: <futures_util::future::try_future::MapOk<Fut,F> as core::future::future::Future>::poll
             at /home/will/.cargo/registry/src/index.crates.io-6f17d22bba15001f/futures-util-0.3.30/src/lib.rs:91:13
  22: <tower::util::map_response::MapResponseFuture<F,N> as core::future::future::Future>::poll
             at /home/will/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tower-0.4.13/src/macros.rs:38:17
  23: <core::pin::Pin<P> as core::future::future::Future>::poll
             at /rustc/9b00956e56009bab2aa15d7bff10916599e3d6d6/library/core/src/future/future.rs:123:9
  24: axum::middleware::from_fn::Next::run::{{closure}}
             at /home/will/.cargo/registry/src/index.crates.io-6f17d22bba15001f/axum-0.7.5/src/middleware/from_fn.rs:341:36
  25: kappa::routes::middleware::api_key_auth::{{closure}}
             at /home/will/rust/kappa/src/routes/middleware.rs:140:26
  26: <axum::middleware::from_fn::FromFn<F,S,I,(T1,T2)> as tower_service::Service<http::request::Request<axum_core::body::Body>>>::call::{{closure}}
             at /home/will/.cargo/registry/src/index.crates.io-6f17d22bba15001f/axum-0.7.5/src/middleware/from_fn.rs:305:45
  27: <axum::middleware::from_fn::ResponseFuture as core::future::future::Future>::poll
             at /home/will/.cargo/registry/src/index.crates.io-6f17d22bba15001f/axum-0.7.5/src/middleware/from_fn.rs:371:9
  28: <F as futures_core::future::TryFuture>::try_poll
             at /home/will/.cargo/registry/src/index.crates.io-6f17d22bba15001f/futures-core-0.3.30/src/future.rs:82:9
  29: <futures_util::future::try_future::into_future::IntoFuture<Fut> as core::future::future::Future>::poll
             at /home/will/.cargo/registry/src/index.crates.io-6f17d22bba15001f/futures-util-0.3.30/src/future/try_future/into_future.rs:34:9
  30: <futures_util::future::future::map::Map<Fut,F> as core::future::future::Future>::poll
             at /home/will/.cargo/registry/src/index.crates.io-6f17d22bba15001f/futures-util-0.3.30/src/future/future/map.rs:55:37
  31: <futures_util::future::future::Map<Fut,F> as core::future::future::Future>::poll
             at /home/will/.cargo/registry/src/index.crates.io-6f17d22bba15001f/futures-util-0.3.30/src/lib.rs:91:13
  32: <futures_util::future::try_future::MapOk<Fut,F> as core::future::future::Future>::poll
             at /home/will/.cargo/registry/src/index.crates.io-6f17d22bba15001f/futures-util-0.3.30/src/lib.rs:91:13
  33: <tower::util::map_response::MapResponseFuture<F,N> as core::future::future::Future>::poll
             at /home/will/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tower-0.4.13/src/macros.rs:38:17
  34: <F as futures_core::future::TryFuture>::try_poll
             at /home/will/.cargo/registry/src/index.crates.io-6f17d22bba15001f/futures-core-0.3.30/src/future.rs:82:9
  35: <futures_util::future::try_future::into_future::IntoFuture<Fut> as core::future::future::Future>::poll
             at /home/will/.cargo/registry/src/index.crates.io-6f17d22bba15001f/futures-util-0.3.30/src/future/try_future/into_future.rs:34:9
  36: <futures_util::future::future::map::Map<Fut,F> as core::future::future::Future>::poll
             at /home/will/.cargo/registry/src/index.crates.io-6f17d22bba15001f/futures-util-0.3.30/src/future/future/map.rs:55:37
  37: <futures_util::future::future::Map<Fut,F> as core::future::future::Future>::poll
             at /home/will/.cargo/registry/src/index.crates.io-6f17d22bba15001f/futures-util-0.3.30/src/lib.rs:91:13
  38: <futures_util::future::try_future::MapErr<Fut,F> as core::future::future::Future>::poll
             at /home/will/.cargo/registry/src/index.crates.io-6f17d22bba15001f/futures-util-0.3.30/src/lib.rs:91:13
  39: <tower::util::map_err::MapErrFuture<F,N> as core::future::future::Future>::poll
             at /home/will/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tower-0.4.13/src/macros.rs:38:17
  40: <F as futures_core::future::TryFuture>::try_poll
             at /home/will/.cargo/registry/src/index.crates.io-6f17d22bba15001f/futures-core-0.3.30/src/future.rs:82:9
  41: <futures_util::future::try_future::into_future::IntoFuture<Fut> as core::future::future::Future>::poll
             at /home/will/.cargo/registry/src/index.crates.io-6f17d22bba15001f/futures-util-0.3.30/src/future/try_future/into_future.rs:34:9
  42: <futures_util::future::future::map::Map<Fut,F> as core::future::future::Future>::poll
             at /home/will/.cargo/registry/src/index.crates.io-6f17d22bba15001f/futures-util-0.3.30/src/future/future/map.rs:55:37
  43: <futures_util::future::future::Map<Fut,F> as core::future::future::Future>::poll
             at /home/will/.cargo/registry/src/index.crates.io-6f17d22bba15001f/futures-util-0.3.30/src/lib.rs:91:13
  44: <futures_util::future::try_future::MapOk<Fut,F> as core::future::future::Future>::poll
             at /home/will/.cargo/registry/src/index.crates.io-6f17d22bba15001f/futures-util-0.3.30/src/lib.rs:91:13
  45: <tower::util::map_response::MapResponseFuture<F,N> as core::future::future::Future>::poll
             at /home/will/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tower-0.4.13/src/macros.rs:38:17
  46: <core::pin::Pin<P> as core::future::future::Future>::poll
             at /rustc/9b00956e56009bab2aa15d7bff10916599e3d6d6/library/core/src/future/future.rs:123:9
  47: <tower::util::oneshot::Oneshot<S,Req> as core::future::future::Future>::poll
             at /home/will/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tower-0.4.13/src/util/oneshot.rs:97:38
  48: <axum::routing::route::RouteFuture<E> as core::future::future::Future>::poll
             at /home/will/.cargo/registry/src/index.crates.io-6f17d22bba15001f/axum-0.7.5/src/routing/route.rs:162:61
  49: <tower::util::oneshot::Oneshot<S,Req> as core::future::future::Future>::poll
             at /home/will/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tower-0.4.13/src/util/oneshot.rs:97:38
  50: <axum::serve::TowerToHyperServiceFuture<S,R> as core::future::future::Future>::poll
             at /home/will/.cargo/registry/src/index.crates.io-6f17d22bba15001f/axum-0.7.5/src/serve.rs:479:9
  51: <hyper::proto::h1::dispatch::Server<S,hyper::body::incoming::Incoming> as hyper::proto::h1::dispatch::Dispatch>::poll_msg
             at /home/will/.cargo/registry/src/index.crates.io-6f17d22bba15001f/hyper-1.3.1/src/proto/h1/dispatch.rs:514:35
  52: hyper::proto::h1::dispatch::Dispatcher<D,Bs,I,T>::poll_write
             at /home/will/.cargo/registry/src/index.crates.io-6f17d22bba15001f/hyper-1.3.1/src/proto/h1/dispatch.rs:312:43
  53: hyper::proto::h1::dispatch::Dispatcher<D,Bs,I,T>::poll_loop
             at /home/will/.cargo/registry/src/index.crates.io-6f17d22bba15001f/hyper-1.3.1/src/proto/h1/dispatch.rs:171:21
  54: hyper::proto::h1::dispatch::Dispatcher<D,Bs,I,T>::poll_inner
             at /home/will/.cargo/registry/src/index.crates.io-6f17d22bba15001f/hyper-1.3.1/src/proto/h1/dispatch.rs:147:16
  55: hyper::proto::h1::dispatch::Dispatcher<D,Bs,I,T>::poll_catch
             at /home/will/.cargo/registry/src/index.crates.io-6f17d22bba15001f/hyper-1.3.1/src/proto/h1/dispatch.rs:126:28
  56: <hyper::proto::h1::dispatch::Dispatcher<D,Bs,I,T> as core::future::future::Future>::poll
             at /home/will/.cargo/registry/src/index.crates.io-6f17d22bba15001f/hyper-1.3.1/src/proto/h1/dispatch.rs:447:9
  57: <hyper::server::conn::http1::UpgradeableConnection<I,S> as core::future::future::Future>::poll
             at /home/will/.cargo/registry/src/index.crates.io-6f17d22bba15001f/hyper-1.3.1/src/server/conn/http1.rs:505:26
  58: <hyper_util::server::conn::auto::UpgradeableConnection<I,S,E> as core::future::future::Future>::poll
             at /home/will/.cargo/registry/src/index.crates.io-6f17d22bba15001f/hyper-util-0.1.3/src/server/conn/auto.rs:475:28
  59: <axum::serve::Serve<M,S> as core::future::into_future::IntoFuture>::into_future::{{closure}}::{{closure}}
             at /home/will/.cargo/registry/src/index.crates.io-6f17d22bba15001f/axum-0.7.5/src/serve.rs:218:26
  60: tokio::runtime::task::core::Core<T,S>::poll::{{closure}}
             at /home/will/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.37.0/src/runtime/task/core.rs:328:17
  61: tokio::loom::std::unsafe_cell::UnsafeCell<T>::with_mut
             at /home/will/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.37.0/src/loom/std/unsafe_cell.rs:16:9
      tokio::runtime::task::core::Core<T,S>::poll
             at /home/will/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.37.0/src/runtime/task/core.rs:317:13
  62: tokio::runtime::task::harness::poll_future::{{closure}}
             at /home/will/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.37.0/src/runtime/task/harness.rs:485:19
  63: <core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once
             at /rustc/9b00956e56009bab2aa15d7bff10916599e3d6d6/library/core/src/panic/unwind_safe.rs:272:9
  64: std::panicking::try::do_call
             at /rustc/9b00956e56009bab2aa15d7bff10916599e3d6d6/library/std/src/panicking.rs:552:40
  65: __rust_try
  66: std::panicking::try
             at /rustc/9b00956e56009bab2aa15d7bff10916599e3d6d6/library/std/src/panicking.rs:516:19
  67: std::panic::catch_unwind
             at /rustc/9b00956e56009bab2aa15d7bff10916599e3d6d6/library/std/src/panic.rs:146:14
  68: tokio::runtime::task::harness::poll_future
             at /home/will/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.37.0/src/runtime/task/harness.rs:473:18
  69: tokio::runtime::task::harness::Harness<T,S>::poll_inner
             at /home/will/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.37.0/src/runtime/task/harness.rs:208:27
  70: tokio::runtime::task::harness::Harness<T,S>::poll
             at /home/will/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.37.0/src/runtime/task/harness.rs:153:15
  71: tokio::runtime::task::raw::poll
             at /home/will/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.37.0/src/runtime/task/raw.rs:271:5
  72: tokio::runtime::task::raw::RawTask::poll
             at /home/will/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.37.0/src/runtime/task/raw.rs:201:18
  73: tokio::runtime::task::LocalNotified<S>::run
             at /home/will/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.37.0/src/runtime/task/mod.rs:427:9
  74: tokio::runtime::scheduler::multi_thread::worker::Context::run_task::{{closure}}
             at /home/will/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.37.0/src/runtime/scheduler/multi_thread/worker.rs:639:17
  75: tokio::runtime::coop::with_budget
             at /home/will/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.37.0/src/runtime/coop.rs:107:5
      tokio::runtime::coop::budget
             at /home/will/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.37.0/src/runtime/coop.rs:73:5
      tokio::runtime::scheduler::multi_thread::worker::Context::run_task
             at /home/will/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.37.0/src/runtime/scheduler/multi_thread/worker.rs:575:9
  76: tokio::runtime::scheduler::multi_thread::worker::Context::run
             at /home/will/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.37.0/src/runtime/scheduler/multi_thread/worker.rs:526:24
  77: tokio::runtime::scheduler::multi_thread::worker::run::{{closure}}::{{closure}}
             at /home/will/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.37.0/src/runtime/scheduler/multi_thread/worker.rs:491:21
  78: tokio::runtime::context::scoped::Scoped<T>::set
             at /home/will/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.37.0/src/runtime/context/scoped.rs:40:9
  79: tokio::runtime::context::set_scheduler::{{closure}}
             at /home/will/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.37.0/src/runtime/context.rs:176:26
  80: std::thread::local::LocalKey<T>::try_with
             at /rustc/9b00956e56009bab2aa15d7bff10916599e3d6d6/library/std/src/thread/local.rs:284:16
  81: std::thread::local::LocalKey<T>::with
             at /rustc/9b00956e56009bab2aa15d7bff10916599e3d6d6/library/std/src/thread/local.rs:260:9
  82: tokio::runtime::context::set_scheduler
             at /home/will/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.37.0/src/runtime/context.rs:176:9
  83: tokio::runtime::scheduler::multi_thread::worker::run::{{closure}}
             at /home/will/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.37.0/src/runtime/scheduler/multi_thread/worker.rs:486:9
  84: tokio::runtime::context::runtime::enter_runtime
             at /home/will/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.37.0/src/runtime/context/runtime.rs:65:16
  85: tokio::runtime::scheduler::multi_thread::worker::run
             at /home/will/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.37.0/src/runtime/scheduler/multi_thread/worker.rs:478:5
  86: tokio::runtime::scheduler::multi_thread::worker::Launch::launch::{{closure}}
             at /home/will/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.37.0/src/runtime/scheduler/multi_thread/worker.rs:447:45
  87: <tokio::runtime::blocking::task::BlockingTask<T> as core::future::future::Future>::poll
             at /home/will/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.37.0/src/runtime/blocking/task.rs:42:21
  88: tokio::runtime::task::core::Core<T,S>::poll::{{closure}}
             at /home/will/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.37.0/src/runtime/task/core.rs:328:17
  89: tokio::loom::std::unsafe_cell::UnsafeCell<T>::with_mut
             at /home/will/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.37.0/src/loom/std/unsafe_cell.rs:16:9
      tokio::runtime::task::core::Core<T,S>::poll
             at /home/will/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.37.0/src/runtime/task/core.rs:317:13
  90: tokio::runtime::task::harness::poll_future::{{closure}}
             at /home/will/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.37.0/src/runtime/task/harness.rs:485:19
  91: <core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once
             at /rustc/9b00956e56009bab2aa15d7bff10916599e3d6d6/library/core/src/panic/unwind_safe.rs:272:9
  92: std::panicking::try::do_call
             at /rustc/9b00956e56009bab2aa15d7bff10916599e3d6d6/library/std/src/panicking.rs:552:40
  93: __rust_try
  94: std::panicking::try
             at /rustc/9b00956e56009bab2aa15d7bff10916599e3d6d6/library/std/src/panicking.rs:516:19
  95: std::panic::catch_unwind
             at /rustc/9b00956e56009bab2aa15d7bff10916599e3d6d6/library/std/src/panic.rs:146:14
  96: tokio::runtime::task::harness::poll_future
             at /home/will/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.37.0/src/runtime/task/harness.rs:473:18
  97: tokio::runtime::task::harness::Harness<T,S>::poll_inner
             at /home/will/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.37.0/src/runtime/task/harness.rs:208:27
  98: tokio::runtime::task::harness::Harness<T,S>::poll
             at /home/will/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.37.0/src/runtime/task/harness.rs:153:15
  99: tokio::runtime::task::raw::poll
             at /home/will/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.37.0/src/runtime/task/raw.rs:271:5
 100: tokio::runtime::task::raw::RawTask::poll
             at /home/will/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.37.0/src/runtime/task/raw.rs:201:18
 101: tokio::runtime::task::UnownedTask<S>::run
             at /home/will/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.37.0/src/runtime/task/mod.rs:464:9
 102: tokio::runtime::blocking::pool::Task::run
             at /home/will/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.37.0/src/runtime/blocking/pool.rs:159:9
 103: tokio::runtime::blocking::pool::Inner::run
             at /home/will/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.37.0/src/runtime/blocking/pool.rs:513:17
 104: tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}}
             at /home/will/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.37.0/src/runtime/blocking/pool.rs:471:13
 105: std::sys_common::backtrace::__rust_begin_short_backtrace
             at /rustc/9b00956e56009bab2aa15d7bff10916599e3d6d6/library/std/src/sys_common/backtrace.rs:155:18
 106: std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}}
             at /rustc/9b00956e56009bab2aa15d7bff10916599e3d6d6/library/std/src/thread/mod.rs:528:17
 107: <core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once
             at /rustc/9b00956e56009bab2aa15d7bff10916599e3d6d6/library/core/src/panic/unwind_safe.rs:272:9
 108: std::panicking::try::do_call
             at /rustc/9b00956e56009bab2aa15d7bff10916599e3d6d6/library/std/src/panicking.rs:552:40
 109: __rust_try
 110: std::panicking::try
             at /rustc/9b00956e56009bab2aa15d7bff10916599e3d6d6/library/std/src/panicking.rs:516:19
 111: std::panic::catch_unwind
             at /rustc/9b00956e56009bab2aa15d7bff10916599e3d6d6/library/std/src/panic.rs:146:14
      std::thread::Builder::spawn_unchecked_::{{closure}}
             at /rustc/9b00956e56009bab2aa15d7bff10916599e3d6d6/library/std/src/thread/mod.rs:527:30
 112: core::ops::function::FnOnce::call_once{{vtable.shim}}
             at /rustc/9b00956e56009bab2aa15d7bff10916599e3d6d6/library/core/src/ops/function.rs:250:5
 113: <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once
             at /rustc/9b00956e56009bab2aa15d7bff10916599e3d6d6/library/alloc/src/boxed.rs:2020:9
      <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once
             at /rustc/9b00956e56009bab2aa15d7bff10916599e3d6d6/library/alloc/src/boxed.rs:2020:9
      std::sys::pal::unix::thread::Thread::new::thread_start
             at /rustc/9b00956e56009bab2aa15d7bff10916599e3d6d6/library/std/src/sys/pal/unix/thread.rs:108:17
 114: start_thread
 115: __GI___clone3

[2m2024-05-18T13:54:22.482729Z[0m [32m INFO[0m [2mkappa::routes::middleware[0m[2m:[0m api key e1f11936-2004-46ee-b310-84ddb8fb8d14
[2m2024-05-18T13:54:22.483791Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT * FROM \"user\" â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  *\nFROM\n  \"user\"\nWHERE\n  api_key = $1\n" [3mrows_affected[0m[2m=[0m0 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m227.201Âµs [3melapsed_secs[0m[2m=[0m0.000227201
[2m2024-05-18T13:54:22.484659Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT * FROM container â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  *\nFROM\n  container\nWHERE\n  user_id = $1\n" [3mrows_affected[0m[2m=[0m0 [3mrows_returned[0m[2m=[0m0 [3melapsed[0m[2m=[0m183.591Âµs [3melapsed_secs[0m[2m=[0m0.000183591
[2m2024-05-18T13:54:31.634667Z[0m [32m INFO[0m [2mkappa::routes::middleware[0m[2m:[0m api key e1f11936-2004-46ee-b310-84ddb8fb8d14
[2m2024-05-18T13:54:31.635617Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT * FROM \"user\" â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  *\nFROM\n  \"user\"\nWHERE\n  api_key = $1\n" [3mrows_affected[0m[2m=[0m0 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m208.611Âµs [3melapsed_secs[0m[2m=[0m0.000208611
[2m2024-05-18T13:54:31.635793Z[0m [32m INFO[0m [2mkappa::routes::containers[0m[2m:[0m Received file with bytes length of 654

[2m2024-05-18T13:54:31.635980Z[0m [32m INFO[0m [2mkappa::routes::containers[0m[2m:[0m File extracted to "zip/7b4e0212-deb0-4bb6-a126-6407400afaba/context" (0 bytes)
[2m2024-05-18T13:54:31.636039Z[0m [32m INFO[0m [2mkappa::routes::containers[0m[2m:[0m File extracted to "zip/7b4e0212-deb0-4bb6-a126-6407400afaba/main.go" (568 bytes)
[2m2024-05-18T13:54:31.636274Z[0m [32m INFO[0m [2mkappa::docker::docker[0m[2m:[0m Created docker file with UUID:7b4e0212-deb0-4bb6-a126-6407400afaba
[2m2024-05-18T13:54:31.636509Z[0m [35mTRACE[0m [2mhyper_util::client::legacy::client[0m[2m:[0m http1 handshake complete, spawning background dispatcher task
[2m2024-05-18T13:54:31.637079Z[0m [35mTRACE[0m [2mhyper_util::client::legacy::pool[0m[2m:[0m pool dropped, dropping pooled (("unix", 2f7661722f72756e2f646f636b65722e736f636b))
[2m2024-05-18T13:54:31.637385Z[0m [35mTRACE[0m [2mhyper_util::client::legacy::client[0m[2m:[0m http1 handshake complete, spawning background dispatcher task
[2m2024-05-18T13:54:39.401096Z[0m [32m INFO[0m [2mkappa::docker::docker[0m[2m:[0m Building container 7b4e0212-deb0-4bb6-a126-6407400afaba progress : No progress
[2m2024-05-18T13:54:39.401505Z[0m [35mTRACE[0m [2mhyper_util::client::legacy::client[0m[2m:[0m http1 handshake complete, spawning background dispatcher task
[2m2024-05-18T13:54:39.409829Z[0m [35mTRACE[0m [2mhyper_util::client::legacy::pool[0m[2m:[0m pool dropped, dropping pooled (("unix", 2f7661722f72756e2f646f636b65722e736f636b))
[2m2024-05-18T13:54:39.410105Z[0m [35mTRACE[0m [2mhyper_util::client::legacy::client[0m[2m:[0m http1 handshake complete, spawning background dispatcher task
[2m2024-05-18T13:54:39.543043Z[0m [35mTRACE[0m [2mhyper_util::client::legacy::pool[0m[2m:[0m pool dropped, dropping pooled (("unix", 2f7661722f72756e2f646f636b65722e736f636b))
[2m2024-05-18T13:54:39.543138Z[0m [32m INFO[0m [2mkappa::docker::docker[0m[2m:[0m Successfully built and started docker container
[2m2024-05-18T13:54:39.545689Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"insert into \"container\"(container_id, language, â€¦" [3mdb.statement[0m[2m=[0m"\n\ninsert into\n  \"container\"(container_id, language, user_id, port)\nvalues\n  ($1 :: UUID, $2 :: TEXT, $3 :: UUID, $4 :: INTEGER)\n" [3mrows_affected[0m[2m=[0m1 [3mrows_returned[0m[2m=[0m0 [3melapsed[0m[2m=[0m748.683Âµs [3melapsed_secs[0m[2m=[0m0.000748683
[2m2024-05-18T13:54:45.528838Z[0m [32m INFO[0m [2mkappa::routes::middleware[0m[2m:[0m api key e1f11936-2004-46ee-b310-84ddb8fb8d14
[2m2024-05-18T13:54:45.529804Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT * FROM \"user\" â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  *\nFROM\n  \"user\"\nWHERE\n  api_key = $1\n" [3mrows_affected[0m[2m=[0m0 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m201.651Âµs [3melapsed_secs[0m[2m=[0m0.000201651
[2m2024-05-18T13:54:45.530622Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT * FROM container â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  *\nFROM\n  container\nWHERE\n  user_id = $1\n" [3mrows_affected[0m[2m=[0m1 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m177.411Âµs [3melapsed_secs[0m[2m=[0m0.000177411
[2m2024-05-18T13:54:46.282879Z[0m [32m INFO[0m [2mkappa::routes::middleware[0m[2m:[0m api key e1f11936-2004-46ee-b310-84ddb8fb8d14
[2m2024-05-18T13:54:46.283820Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT * FROM \"user\" â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  *\nFROM\n  \"user\"\nWHERE\n  api_key = $1\n" [3mrows_affected[0m[2m=[0m0 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m200.04Âµs [3melapsed_secs[0m[2m=[0m0.00020004
[2m2024-05-18T13:54:46.284919Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT * FROM container â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  *\nFROM\n  container\nWHERE\n  container_id = $1\n  AND user_id = $2\n" [3mrows_affected[0m[2m=[0m0 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m209.511Âµs [3melapsed_secs[0m[2m=[0m0.000209511
[2m2024-05-18T13:54:46.316163Z[0m [35mTRACE[0m [1mtrigger_container[0m[1m{[0m[3mpool[0m[2m=[0mPool { size: 2, num_idle: 1, is_closed: false, options: PoolOptions { max_connections: 5, min_connections: 0, connect_timeout: 3s, max_lifetime: Some(1800s), idle_timeout: Some(600s), test_before_acquire: true } } [3mcontainer[0m[2m=[0mContainer { container_id: 7b4e0212-deb0-4bb6-a126-6407400afaba, language: "go", user_id: Some(1990720b-0ba6-4c3f-9a3c-8be8ef391fe3), port: Some(5003) } [3mmethod[0m[2m=[0mPOST [3mquery[0m[2m=[0mRawQuery(Some("container_id=7b4e0212-deb0-4bb6-a126-6407400afaba")) [3mheader_map[0m[2m=[0m{"host": "localhost:3000", "user-agent": "Go-http-client/1.1", "content-length": "0", "api-key": "e1f11936-2004-46ee-b310-84ddb8fb8d14", "container": "7b4e0212-deb0-4bb6-a126-6407400afaba", "content-type": "application/json", "accept-encoding": "gzip"} [3mbody[0m[2m=[0mb""[1m}[0m[2m:[0m [2mhyper_util::client::legacy::pool[0m[2m:[0m checkout waiting for idle connection: ("http", 127.0.0.1:5003)
[2m2024-05-18T13:54:46.316224Z[0m [35mTRACE[0m [1mtrigger_container[0m[1m{[0m[3mpool[0m[2m=[0mPool { size: 2, num_idle: 1, is_closed: false, options: PoolOptions { max_connections: 5, min_connections: 0, connect_timeout: 3s, max_lifetime: Some(1800s), idle_timeout: Some(600s), test_before_acquire: true } } [3mcontainer[0m[2m=[0mContainer { container_id: 7b4e0212-deb0-4bb6-a126-6407400afaba, language: "go", user_id: Some(1990720b-0ba6-4c3f-9a3c-8be8ef391fe3), port: Some(5003) } [3mmethod[0m[2m=[0mPOST [3mquery[0m[2m=[0mRawQuery(Some("container_id=7b4e0212-deb0-4bb6-a126-6407400afaba")) [3mheader_map[0m[2m=[0m{"host": "localhost:3000", "user-agent": "Go-http-client/1.1", "content-length": "0", "api-key": "e1f11936-2004-46ee-b310-84ddb8fb8d14", "container": "7b4e0212-deb0-4bb6-a126-6407400afaba", "content-type": "application/json", "accept-encoding": "gzip"} [3mbody[0m[2m=[0mb""[1m}[0m[2m:[0m [2mhyper_util::client::legacy::connect::http[0m[2m:[0m Http::connect; scheme=Some("http"), host=Some("127.0.0.1"), port=Some(Port(5003))
[2m2024-05-18T13:54:46.316270Z[0m [34mDEBUG[0m [1mtrigger_container[0m[1m{[0m[3mpool[0m[2m=[0mPool { size: 2, num_idle: 1, is_closed: false, options: PoolOptions { max_connections: 5, min_connections: 0, connect_timeout: 3s, max_lifetime: Some(1800s), idle_timeout: Some(600s), test_before_acquire: true } } [3mcontainer[0m[2m=[0mContainer { container_id: 7b4e0212-deb0-4bb6-a126-6407400afaba, language: "go", user_id: Some(1990720b-0ba6-4c3f-9a3c-8be8ef391fe3), port: Some(5003) } [3mmethod[0m[2m=[0mPOST [3mquery[0m[2m=[0mRawQuery(Some("container_id=7b4e0212-deb0-4bb6-a126-6407400afaba")) [3mheader_map[0m[2m=[0m{"host": "localhost:3000", "user-agent": "Go-http-client/1.1", "content-length": "0", "api-key": "e1f11936-2004-46ee-b310-84ddb8fb8d14", "container": "7b4e0212-deb0-4bb6-a126-6407400afaba", "content-type": "application/json", "accept-encoding": "gzip"} [3mbody[0m[2m=[0mb""[1m}[0m[2m:[0m [2mhyper_util::client::legacy::connect::http[0m[2m:[0m connecting to 127.0.0.1:5003
[2m2024-05-18T13:54:46.316439Z[0m [34mDEBUG[0m [1mtrigger_container[0m[1m{[0m[3mpool[0m[2m=[0mPool { size: 2, num_idle: 1, is_closed: false, options: PoolOptions { max_connections: 5, min_connections: 0, connect_timeout: 3s, max_lifetime: Some(1800s), idle_timeout: Some(600s), test_before_acquire: true } } [3mcontainer[0m[2m=[0mContainer { container_id: 7b4e0212-deb0-4bb6-a126-6407400afaba, language: "go", user_id: Some(1990720b-0ba6-4c3f-9a3c-8be8ef391fe3), port: Some(5003) } [3mmethod[0m[2m=[0mPOST [3mquery[0m[2m=[0mRawQuery(Some("container_id=7b4e0212-deb0-4bb6-a126-6407400afaba")) [3mheader_map[0m[2m=[0m{"host": "localhost:3000", "user-agent": "Go-http-client/1.1", "content-length": "0", "api-key": "e1f11936-2004-46ee-b310-84ddb8fb8d14", "container": "7b4e0212-deb0-4bb6-a126-6407400afaba", "content-type": "application/json", "accept-encoding": "gzip"} [3mbody[0m[2m=[0mb""[1m}[0m[2m:[0m [2mhyper_util::client::legacy::connect::http[0m[2m:[0m connected to 127.0.0.1:5003
[2m2024-05-18T13:54:46.316487Z[0m [35mTRACE[0m [1mtrigger_container[0m[1m{[0m[3mpool[0m[2m=[0mPool { size: 2, num_idle: 1, is_closed: false, options: PoolOptions { max_connections: 5, min_connections: 0, connect_timeout: 3s, max_lifetime: Some(1800s), idle_timeout: Some(600s), test_before_acquire: true } } [3mcontainer[0m[2m=[0mContainer { container_id: 7b4e0212-deb0-4bb6-a126-6407400afaba, language: "go", user_id: Some(1990720b-0ba6-4c3f-9a3c-8be8ef391fe3), port: Some(5003) } [3mmethod[0m[2m=[0mPOST [3mquery[0m[2m=[0mRawQuery(Some("container_id=7b4e0212-deb0-4bb6-a126-6407400afaba")) [3mheader_map[0m[2m=[0m{"host": "localhost:3000", "user-agent": "Go-http-client/1.1", "content-length": "0", "api-key": "e1f11936-2004-46ee-b310-84ddb8fb8d14", "container": "7b4e0212-deb0-4bb6-a126-6407400afaba", "content-type": "application/json", "accept-encoding": "gzip"} [3mbody[0m[2m=[0mb""[1m}[0m[2m:[0m [2mhyper_util::client::legacy::client[0m[2m:[0m http1 handshake complete, spawning background dispatcher task
[2m2024-05-18T13:54:46.316563Z[0m [35mTRACE[0m [1mtrigger_container[0m[1m{[0m[3mpool[0m[2m=[0mPool { size: 2, num_idle: 1, is_closed: false, options: PoolOptions { max_connections: 5, min_connections: 0, connect_timeout: 3s, max_lifetime: Some(1800s), idle_timeout: Some(600s), test_before_acquire: true } } [3mcontainer[0m[2m=[0mContainer { container_id: 7b4e0212-deb0-4bb6-a126-6407400afaba, language: "go", user_id: Some(1990720b-0ba6-4c3f-9a3c-8be8ef391fe3), port: Some(5003) } [3mmethod[0m[2m=[0mPOST [3mquery[0m[2m=[0mRawQuery(Some("container_id=7b4e0212-deb0-4bb6-a126-6407400afaba")) [3mheader_map[0m[2m=[0m{"host": "localhost:3000", "user-agent": "Go-http-client/1.1", "content-length": "0", "api-key": "e1f11936-2004-46ee-b310-84ddb8fb8d14", "container": "7b4e0212-deb0-4bb6-a126-6407400afaba", "content-type": "application/json", "accept-encoding": "gzip"} [3mbody[0m[2m=[0mb""[1m}[0m[2m:[0m [2mhyper_util::client::legacy::pool[0m[2m:[0m checkout dropped for ("http", 127.0.0.1:5003)
[2m2024-05-18T13:54:46.317179Z[0m [35mTRACE[0m [1mtrigger_container[0m[1m{[0m[3mpool[0m[2m=[0mPool { size: 2, num_idle: 1, is_closed: false, options: PoolOptions { max_connections: 5, min_connections: 0, connect_timeout: 3s, max_lifetime: Some(1800s), idle_timeout: Some(600s), test_before_acquire: true } } [3mcontainer[0m[2m=[0mContainer { container_id: 7b4e0212-deb0-4bb6-a126-6407400afaba, language: "go", user_id: Some(1990720b-0ba6-4c3f-9a3c-8be8ef391fe3), port: Some(5003) } [3mmethod[0m[2m=[0mPOST [3mquery[0m[2m=[0mRawQuery(Some("container_id=7b4e0212-deb0-4bb6-a126-6407400afaba")) [3mheader_map[0m[2m=[0m{"host": "localhost:3000", "user-agent": "Go-http-client/1.1", "content-length": "0", "api-key": "e1f11936-2004-46ee-b310-84ddb8fb8d14", "container": "7b4e0212-deb0-4bb6-a126-6407400afaba", "content-type": "application/json", "accept-encoding": "gzip"} [3mbody[0m[2m=[0mb""[1m}[0m[2m:[0m [2mhyper_util::client::legacy::pool[0m[2m:[0m put; add idle connection for ("http", 127.0.0.1:5003)
[2m2024-05-18T13:54:46.317223Z[0m [34mDEBUG[0m [1mtrigger_container[0m[1m{[0m[3mpool[0m[2m=[0mPool { size: 2, num_idle: 1, is_closed: false, options: PoolOptions { max_connections: 5, min_connections: 0, connect_timeout: 3s, max_lifetime: Some(1800s), idle_timeout: Some(600s), test_before_acquire: true } } [3mcontainer[0m[2m=[0mContainer { container_id: 7b4e0212-deb0-4bb6-a126-6407400afaba, language: "go", user_id: Some(1990720b-0ba6-4c3f-9a3c-8be8ef391fe3), port: Some(5003) } [3mmethod[0m[2m=[0mPOST [3mquery[0m[2m=[0mRawQuery(Some("container_id=7b4e0212-deb0-4bb6-a126-6407400afaba")) [3mheader_map[0m[2m=[0m{"host": "localhost:3000", "user-agent": "Go-http-client/1.1", "content-length": "0", "api-key": "e1f11936-2004-46ee-b310-84ddb8fb8d14", "container": "7b4e0212-deb0-4bb6-a126-6407400afaba", "content-type": "application/json", "accept-encoding": "gzip"} [3mbody[0m[2m=[0mb""[1m}[0m[2m:[0m [2mhyper_util::client::legacy::pool[0m[2m:[0m pooling idle connection for ("http", 127.0.0.1:5003)
[2m2024-05-18T13:56:57.295803Z[0m [32m INFO[0m [2mkappa::routes::middleware[0m[2m:[0m api key e1f11936-2004-46ee-b310-84ddb8fb8d14
[2m2024-05-18T13:56:57.296587Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT * FROM \"user\" â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  *\nFROM\n  \"user\"\nWHERE\n  api_key = $1\n" [3mrows_affected[0m[2m=[0m0 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m135.23Âµs [3melapsed_secs[0m[2m=[0m0.00013523
[2m2024-05-18T13:56:57.297337Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT * FROM container â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  *\nFROM\n  container\nWHERE\n  user_id = $1\n" [3mrows_affected[0m[2m=[0m1 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m131.6Âµs [3melapsed_secs[0m[2m=[0m0.0001316
[2m2024-05-18T13:56:57.661420Z[0m [32m INFO[0m [2mkappa::routes::middleware[0m[2m:[0m api key e1f11936-2004-46ee-b310-84ddb8fb8d14
[2m2024-05-18T13:56:57.662452Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT * FROM \"user\" â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  *\nFROM\n  \"user\"\nWHERE\n  api_key = $1\n" [3mrows_affected[0m[2m=[0m0 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m260.831Âµs [3melapsed_secs[0m[2m=[0m0.000260831
[2m2024-05-18T13:56:57.663486Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT * FROM container â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  *\nFROM\n  container\nWHERE\n  container_id = $1\n  AND user_id = $2\n" [3mrows_affected[0m[2m=[0m0 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m183.751Âµs [3melapsed_secs[0m[2m=[0m0.000183751
[2m2024-05-18T13:56:57.664810Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"DELETE FROM container WHERE â€¦" [3mdb.statement[0m[2m=[0m"\n\nDELETE FROM\n  container\nWHERE\n  container_id = $1\n" [3mrows_affected[0m[2m=[0m1 [3mrows_returned[0m[2m=[0m0 [3melapsed[0m[2m=[0m817.633Âµs [3melapsed_secs[0m[2m=[0m0.000817633
[2m2024-05-18T13:57:05.594516Z[0m [32m INFO[0m [2mkappa::routes::middleware[0m[2m:[0m api key e1f11936-2004-46ee-b310-84ddb8fb8d14
[2m2024-05-18T13:57:05.595470Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT * FROM \"user\" â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  *\nFROM\n  \"user\"\nWHERE\n  api_key = $1\n" [3mrows_affected[0m[2m=[0m0 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m182.45Âµs [3melapsed_secs[0m[2m=[0m0.00018245
[2m2024-05-18T13:57:05.595662Z[0m [32m INFO[0m [2mkappa::routes::containers[0m[2m:[0m Received file with bytes length of 654

[2m2024-05-18T13:57:05.595865Z[0m [32m INFO[0m [2mkappa::routes::containers[0m[2m:[0m File extracted to "zip/99c05e1e-95df-4364-8589-02d8f18c8ee4/context" (0 bytes)
[2m2024-05-18T13:57:05.595939Z[0m [32m INFO[0m [2mkappa::routes::containers[0m[2m:[0m File extracted to "zip/99c05e1e-95df-4364-8589-02d8f18c8ee4/main.go" (568 bytes)
[2m2024-05-18T13:57:05.596168Z[0m [32m INFO[0m [2mkappa::docker::docker[0m[2m:[0m Created docker file with UUID:99c05e1e-95df-4364-8589-02d8f18c8ee4
[2m2024-05-18T13:57:05.596409Z[0m [35mTRACE[0m [2mhyper_util::client::legacy::client[0m[2m:[0m http1 handshake complete, spawning background dispatcher task
[2m2024-05-18T13:57:05.596988Z[0m [35mTRACE[0m [2mhyper_util::client::legacy::pool[0m[2m:[0m pool dropped, dropping pooled (("unix", 2f7661722f72756e2f646f636b65722e736f636b))
[2m2024-05-18T13:57:05.597299Z[0m [35mTRACE[0m [2mhyper_util::client::legacy::client[0m[2m:[0m http1 handshake complete, spawning background dispatcher task
[2m2024-05-18T13:57:05.606475Z[0m [32m INFO[0m [2mkappa::docker::docker[0m[2m:[0m Building container 99c05e1e-95df-4364-8589-02d8f18c8ee4 progress : No progress
[2m2024-05-18T13:57:05.606695Z[0m [35mTRACE[0m [2mhyper_util::client::legacy::client[0m[2m:[0m http1 handshake complete, spawning background dispatcher task
[2m2024-05-18T13:57:05.615884Z[0m [35mTRACE[0m [2mhyper_util::client::legacy::pool[0m[2m:[0m pool dropped, dropping pooled (("unix", 2f7661722f72756e2f646f636b65722e736f636b))
[2m2024-05-18T13:57:05.616143Z[0m [35mTRACE[0m [2mhyper_util::client::legacy::client[0m[2m:[0m http1 handshake complete, spawning background dispatcher task
[2m2024-05-18T13:57:05.747062Z[0m [35mTRACE[0m [2mhyper_util::client::legacy::pool[0m[2m:[0m pool dropped, dropping pooled (("unix", 2f7661722f72756e2f646f636b65722e736f636b))
[2m2024-05-18T13:57:05.747157Z[0m [32m INFO[0m [2mkappa::docker::docker[0m[2m:[0m Successfully built and started docker container
[2m2024-05-18T13:57:05.749902Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"insert into \"container\"(container_id, language, â€¦" [3mdb.statement[0m[2m=[0m"\n\ninsert into\n  \"container\"(container_id, language, user_id, port)\nvalues\n  ($1 :: UUID, $2 :: TEXT, $3 :: UUID, $4 :: INTEGER)\n" [3mrows_affected[0m[2m=[0m1 [3mrows_returned[0m[2m=[0m0 [3melapsed[0m[2m=[0m986.143Âµs [3melapsed_secs[0m[2m=[0m0.000986143
[2m2024-05-18T13:57:07.566503Z[0m [32m INFO[0m [2mkappa::routes::middleware[0m[2m:[0m api key e1f11936-2004-46ee-b310-84ddb8fb8d14
[2m2024-05-18T13:57:07.567404Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT * FROM \"user\" â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  *\nFROM\n  \"user\"\nWHERE\n  api_key = $1\n" [3mrows_affected[0m[2m=[0m0 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m178.031Âµs [3melapsed_secs[0m[2m=[0m0.000178031
[2m2024-05-18T13:57:07.568209Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT * FROM container â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  *\nFROM\n  container\nWHERE\n  user_id = $1\n" [3mrows_affected[0m[2m=[0m1 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m148.681Âµs [3melapsed_secs[0m[2m=[0m0.000148681
[2m2024-05-18T13:57:07.950989Z[0m [32m INFO[0m [2mkappa::routes::middleware[0m[2m:[0m api key e1f11936-2004-46ee-b310-84ddb8fb8d14
[2m2024-05-18T13:57:07.951894Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT * FROM \"user\" â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  *\nFROM\n  \"user\"\nWHERE\n  api_key = $1\n" [3mrows_affected[0m[2m=[0m0 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m173.48Âµs [3melapsed_secs[0m[2m=[0m0.00017348
[2m2024-05-18T13:57:07.952810Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT * FROM container â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  *\nFROM\n  container\nWHERE\n  container_id = $1\n  AND user_id = $2\n" [3mrows_affected[0m[2m=[0m0 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m123.57Âµs [3melapsed_secs[0m[2m=[0m0.00012357
[2m2024-05-18T13:57:07.983226Z[0m [35mTRACE[0m [1mtrigger_container[0m[1m{[0m[3mpool[0m[2m=[0mPool { size: 2, num_idle: 1, is_closed: false, options: PoolOptions { max_connections: 5, min_connections: 0, connect_timeout: 3s, max_lifetime: Some(1800s), idle_timeout: Some(600s), test_before_acquire: true } } [3mcontainer[0m[2m=[0mContainer { container_id: 99c05e1e-95df-4364-8589-02d8f18c8ee4, language: "go", user_id: Some(1990720b-0ba6-4c3f-9a3c-8be8ef391fe3), port: Some(5004) } [3mmethod[0m[2m=[0mPOST [3mquery[0m[2m=[0mRawQuery(Some("container_id=99c05e1e-95df-4364-8589-02d8f18c8ee4")) [3mheader_map[0m[2m=[0m{"host": "localhost:3000", "user-agent": "Go-http-client/1.1", "content-length": "0", "api-key": "e1f11936-2004-46ee-b310-84ddb8fb8d14", "container": "99c05e1e-95df-4364-8589-02d8f18c8ee4", "content-type": "application/json", "accept-encoding": "gzip"} [3mbody[0m[2m=[0mb""[1m}[0m[2m:[0m [2mhyper_util::client::legacy::pool[0m[2m:[0m checkout waiting for idle connection: ("http", 127.0.0.1:5004)
[2m2024-05-18T13:57:07.983287Z[0m [35mTRACE[0m [1mtrigger_container[0m[1m{[0m[3mpool[0m[2m=[0mPool { size: 2, num_idle: 1, is_closed: false, options: PoolOptions { max_connections: 5, min_connections: 0, connect_timeout: 3s, max_lifetime: Some(1800s), idle_timeout: Some(600s), test_before_acquire: true } } [3mcontainer[0m[2m=[0mContainer { container_id: 99c05e1e-95df-4364-8589-02d8f18c8ee4, language: "go", user_id: Some(1990720b-0ba6-4c3f-9a3c-8be8ef391fe3), port: Some(5004) } [3mmethod[0m[2m=[0mPOST [3mquery[0m[2m=[0mRawQuery(Some("container_id=99c05e1e-95df-4364-8589-02d8f18c8ee4")) [3mheader_map[0m[2m=[0m{"host": "localhost:3000", "user-agent": "Go-http-client/1.1", "content-length": "0", "api-key": "e1f11936-2004-46ee-b310-84ddb8fb8d14", "container": "99c05e1e-95df-4364-8589-02d8f18c8ee4", "content-type": "application/json", "accept-encoding": "gzip"} [3mbody[0m[2m=[0mb""[1m}[0m[2m:[0m [2mhyper_util::client::legacy::connect::http[0m[2m:[0m Http::connect; scheme=Some("http"), host=Some("127.0.0.1"), port=Some(Port(5004))
[2m2024-05-18T13:57:07.983349Z[0m [34mDEBUG[0m [1mtrigger_container[0m[1m{[0m[3mpool[0m[2m=[0mPool { size: 2, num_idle: 1, is_closed: false, options: PoolOptions { max_connections: 5, min_connections: 0, connect_timeout: 3s, max_lifetime: Some(1800s), idle_timeout: Some(600s), test_before_acquire: true } } [3mcontainer[0m[2m=[0mContainer { container_id: 99c05e1e-95df-4364-8589-02d8f18c8ee4, language: "go", user_id: Some(1990720b-0ba6-4c3f-9a3c-8be8ef391fe3), port: Some(5004) } [3mmethod[0m[2m=[0mPOST [3mquery[0m[2m=[0mRawQuery(Some("container_id=99c05e1e-95df-4364-8589-02d8f18c8ee4")) [3mheader_map[0m[2m=[0m{"host": "localhost:3000", "user-agent": "Go-http-client/1.1", "content-length": "0", "api-key": "e1f11936-2004-46ee-b310-84ddb8fb8d14", "container": "99c05e1e-95df-4364-8589-02d8f18c8ee4", "content-type": "application/json", "accept-encoding": "gzip"} [3mbody[0m[2m=[0mb""[1m}[0m[2m:[0m [2mhyper_util::client::legacy::connect::http[0m[2m:[0m connecting to 127.0.0.1:5004
[2m2024-05-18T13:57:07.983524Z[0m [34mDEBUG[0m [1mtrigger_container[0m[1m{[0m[3mpool[0m[2m=[0mPool { size: 2, num_idle: 1, is_closed: false, options: PoolOptions { max_connections: 5, min_connections: 0, connect_timeout: 3s, max_lifetime: Some(1800s), idle_timeout: Some(600s), test_before_acquire: true } } [3mcontainer[0m[2m=[0mContainer { container_id: 99c05e1e-95df-4364-8589-02d8f18c8ee4, language: "go", user_id: Some(1990720b-0ba6-4c3f-9a3c-8be8ef391fe3), port: Some(5004) } [3mmethod[0m[2m=[0mPOST [3mquery[0m[2m=[0mRawQuery(Some("container_id=99c05e1e-95df-4364-8589-02d8f18c8ee4")) [3mheader_map[0m[2m=[0m{"host": "localhost:3000", "user-agent": "Go-http-client/1.1", "content-length": "0", "api-key": "e1f11936-2004-46ee-b310-84ddb8fb8d14", "container": "99c05e1e-95df-4364-8589-02d8f18c8ee4", "content-type": "application/json", "accept-encoding": "gzip"} [3mbody[0m[2m=[0mb""[1m}[0m[2m:[0m [2mhyper_util::client::legacy::connect::http[0m[2m:[0m connected to 127.0.0.1:5004
[2m2024-05-18T13:57:07.983572Z[0m [35mTRACE[0m [1mtrigger_container[0m[1m{[0m[3mpool[0m[2m=[0mPool { size: 2, num_idle: 1, is_closed: false, options: PoolOptions { max_connections: 5, min_connections: 0, connect_timeout: 3s, max_lifetime: Some(1800s), idle_timeout: Some(600s), test_before_acquire: true } } [3mcontainer[0m[2m=[0mContainer { container_id: 99c05e1e-95df-4364-8589-02d8f18c8ee4, language: "go", user_id: Some(1990720b-0ba6-4c3f-9a3c-8be8ef391fe3), port: Some(5004) } [3mmethod[0m[2m=[0mPOST [3mquery[0m[2m=[0mRawQuery(Some("container_id=99c05e1e-95df-4364-8589-02d8f18c8ee4")) [3mheader_map[0m[2m=[0m{"host": "localhost:3000", "user-agent": "Go-http-client/1.1", "content-length": "0", "api-key": "e1f11936-2004-46ee-b310-84ddb8fb8d14", "container": "99c05e1e-95df-4364-8589-02d8f18c8ee4", "content-type": "application/json", "accept-encoding": "gzip"} [3mbody[0m[2m=[0mb""[1m}[0m[2m:[0m [2mhyper_util::client::legacy::client[0m[2m:[0m http1 handshake complete, spawning background dispatcher task
[2m2024-05-18T13:57:07.983662Z[0m [35mTRACE[0m [1mtrigger_container[0m[1m{[0m[3mpool[0m[2m=[0mPool { size: 2, num_idle: 1, is_closed: false, options: PoolOptions { max_connections: 5, min_connections: 0, connect_timeout: 3s, max_lifetime: Some(1800s), idle_timeout: Some(600s), test_before_acquire: true } } [3mcontainer[0m[2m=[0mContainer { container_id: 99c05e1e-95df-4364-8589-02d8f18c8ee4, language: "go", user_id: Some(1990720b-0ba6-4c3f-9a3c-8be8ef391fe3), port: Some(5004) } [3mmethod[0m[2m=[0mPOST [3mquery[0m[2m=[0mRawQuery(Some("container_id=99c05e1e-95df-4364-8589-02d8f18c8ee4")) [3mheader_map[0m[2m=[0m{"host": "localhost:3000", "user-agent": "Go-http-client/1.1", "content-length": "0", "api-key": "e1f11936-2004-46ee-b310-84ddb8fb8d14", "container": "99c05e1e-95df-4364-8589-02d8f18c8ee4", "content-type": "application/json", "accept-encoding": "gzip"} [3mbody[0m[2m=[0mb""[1m}[0m[2m:[0m [2mhyper_util::client::legacy::pool[0m[2m:[0m checkout dropped for ("http", 127.0.0.1:5004)
[2m2024-05-18T13:57:07.984242Z[0m [35mTRACE[0m [1mtrigger_container[0m[1m{[0m[3mpool[0m[2m=[0mPool { size: 2, num_idle: 1, is_closed: false, options: PoolOptions { max_connections: 5, min_connections: 0, connect_timeout: 3s, max_lifetime: Some(1800s), idle_timeout: Some(600s), test_before_acquire: true } } [3mcontainer[0m[2m=[0mContainer { container_id: 99c05e1e-95df-4364-8589-02d8f18c8ee4, language: "go", user_id: Some(1990720b-0ba6-4c3f-9a3c-8be8ef391fe3), port: Some(5004) } [3mmethod[0m[2m=[0mPOST [3mquery[0m[2m=[0mRawQuery(Some("container_id=99c05e1e-95df-4364-8589-02d8f18c8ee4")) [3mheader_map[0m[2m=[0m{"host": "localhost:3000", "user-agent": "Go-http-client/1.1", "content-length": "0", "api-key": "e1f11936-2004-46ee-b310-84ddb8fb8d14", "container": "99c05e1e-95df-4364-8589-02d8f18c8ee4", "content-type": "application/json", "accept-encoding": "gzip"} [3mbody[0m[2m=[0mb""[1m}[0m[2m:[0m [2mhyper_util::client::legacy::pool[0m[2m:[0m put; add idle connection for ("http", 127.0.0.1:5004)
[2m2024-05-18T13:57:07.984287Z[0m [34mDEBUG[0m [1mtrigger_container[0m[1m{[0m[3mpool[0m[2m=[0mPool { size: 2, num_idle: 1, is_closed: false, options: PoolOptions { max_connections: 5, min_connections: 0, connect_timeout: 3s, max_lifetime: Some(1800s), idle_timeout: Some(600s), test_before_acquire: true } } [3mcontainer[0m[2m=[0mContainer { container_id: 99c05e1e-95df-4364-8589-02d8f18c8ee4, language: "go", user_id: Some(1990720b-0ba6-4c3f-9a3c-8be8ef391fe3), port: Some(5004) } [3mmethod[0m[2m=[0mPOST [3mquery[0m[2m=[0mRawQuery(Some("container_id=99c05e1e-95df-4364-8589-02d8f18c8ee4")) [3mheader_map[0m[2m=[0m{"host": "localhost:3000", "user-agent": "Go-http-client/1.1", "content-length": "0", "api-key": "e1f11936-2004-46ee-b310-84ddb8fb8d14", "container": "99c05e1e-95df-4364-8589-02d8f18c8ee4", "content-type": "application/json", "accept-encoding": "gzip"} [3mbody[0m[2m=[0mb""[1m}[0m[2m:[0m [2mhyper_util::client::legacy::pool[0m[2m:[0m pooling idle connection for ("http", 127.0.0.1:5004)
